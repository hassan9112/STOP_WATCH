
STOPWATCH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00002b42  00002bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800072  00800072  00002be8  2**0
                  ALLOC
  3 .stab         00001c2c  00000000  00000000  00002be8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000955  00000000  00000000  00004814  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00005169  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000052a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00005419  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00007062  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00007f4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008cfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000090e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000098b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 f9 0c 	jmp	0x19f2	; 0x19f2 <__vector_1>
       8:	0c 94 ae 0d 	jmp	0x1b5c	; 0x1b5c <__vector_2>
       c:	0c 94 c3 0d 	jmp	0x1b86	; 0x1b86 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 d5 0d 	jmp	0x1baa	; 0x1baa <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e4       	ldi	r30, 0x42	; 66
      68:	fb e2       	ldi	r31, 0x2B	; 43
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 e7       	ldi	r26, 0x72	; 114
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 37       	cpi	r26, 0x7D	; 125
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <main>
      8a:	0c 94 9f 15 	jmp	0x2b3e	; 0x2b3e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 68 15 	jmp	0x2ad0	; 0x2ad0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 84 15 	jmp	0x2b08	; 0x2b08 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 68 15 	jmp	0x2ad0	; 0x2ad0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 84 15 	jmp	0x2b08	; 0x2b08 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 90 15 	jmp	0x2b20	; 0x2b20 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 78 15 	jmp	0x2af0	; 0x2af0 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 94 15 	jmp	0x2b28	; 0x2b28 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <Timer1_COMPA_init>:
unsigned char sec=0,min=0,hr=0;/*time variables*/
unsigned char sec_dig1=0,sec_dig2=0,min_dig1=0,min_dig2=0,hr_dig1=0,hr_dig2=0;/*digits display variables*/

/*initialize timer1*/
void Timer1_COMPA_init(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	TCCR1A=(1<<FOC1A);
     b4e:	ef e4       	ldi	r30, 0x4F	; 79
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	88 e0       	ldi	r24, 0x08	; 8
     b54:	80 83       	st	Z, r24
	TCCR1B=(1<<WGM12)|(1<<CS12);
     b56:	ee e4       	ldi	r30, 0x4E	; 78
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	8c e0       	ldi	r24, 0x0C	; 12
     b5c:	80 83       	st	Z, r24
	/*Timer1 Compare mode
	 * set prescaler=256
	 * F_CPU=16*10^6
	 * number of compare matches needed for 1 second count=62500
	 */
	TIMSK|=(1<<OCIE1A);/*Enable Timer1 Compare Match A interrupt */
     b5e:	a9 e5       	ldi	r26, 0x59	; 89
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	e9 e5       	ldi	r30, 0x59	; 89
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	80 81       	ld	r24, Z
     b68:	80 61       	ori	r24, 0x10	; 16
     b6a:	8c 93       	st	X, r24
	TCNT1=0;
     b6c:	ec e4       	ldi	r30, 0x4C	; 76
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	11 82       	std	Z+1, r1	; 0x01
     b72:	10 82       	st	Z, r1
	OCR1A=62500;
     b74:	ea e4       	ldi	r30, 0x4A	; 74
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	84 e2       	ldi	r24, 0x24	; 36
     b7a:	94 ef       	ldi	r25, 0xF4	; 244
     b7c:	91 83       	std	Z+1, r25	; 0x01
     b7e:	80 83       	st	Z, r24
}
     b80:	cf 91       	pop	r28
     b82:	df 91       	pop	r29
     b84:	08 95       	ret

00000b86 <INT0_init>:

/*Initialize INT0 for reset*/
void INT0_init(void)
{
     b86:	df 93       	push	r29
     b88:	cf 93       	push	r28
     b8a:	cd b7       	in	r28, 0x3d	; 61
     b8c:	de b7       	in	r29, 0x3e	; 62
	DDRD&=~(1<<PD2);
     b8e:	a1 e3       	ldi	r26, 0x31	; 49
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	e1 e3       	ldi	r30, 0x31	; 49
     b94:	f0 e0       	ldi	r31, 0x00	; 0
     b96:	80 81       	ld	r24, Z
     b98:	8b 7f       	andi	r24, 0xFB	; 251
     b9a:	8c 93       	st	X, r24
	PORTD|=(1<<PD2);/*Enable internal pull up*/
     b9c:	a2 e3       	ldi	r26, 0x32	; 50
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	e2 e3       	ldi	r30, 0x32	; 50
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 81       	ld	r24, Z
     ba6:	84 60       	ori	r24, 0x04	; 4
     ba8:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC01);/*set interrupt to falling edge*/
     baa:	a5 e5       	ldi	r26, 0x55	; 85
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	e5 e5       	ldi	r30, 0x55	; 85
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	80 81       	ld	r24, Z
     bb4:	82 60       	ori	r24, 0x02	; 2
     bb6:	8c 93       	st	X, r24
	MCUCR &=~(1<<ISC00);
     bb8:	a5 e5       	ldi	r26, 0x55	; 85
     bba:	b0 e0       	ldi	r27, 0x00	; 0
     bbc:	e5 e5       	ldi	r30, 0x55	; 85
     bbe:	f0 e0       	ldi	r31, 0x00	; 0
     bc0:	80 81       	ld	r24, Z
     bc2:	8e 7f       	andi	r24, 0xFE	; 254
     bc4:	8c 93       	st	X, r24
	GICR |=(1<<6);/*enable INT0*/
     bc6:	ab e5       	ldi	r26, 0x5B	; 91
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	eb e5       	ldi	r30, 0x5B	; 91
     bcc:	f0 e0       	ldi	r31, 0x00	; 0
     bce:	80 81       	ld	r24, Z
     bd0:	80 64       	ori	r24, 0x40	; 64
     bd2:	8c 93       	st	X, r24
	GIFR|=(1<<INTF0);/*clear INT0 flag*/
     bd4:	aa e5       	ldi	r26, 0x5A	; 90
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	ea e5       	ldi	r30, 0x5A	; 90
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	80 81       	ld	r24, Z
     bde:	80 64       	ori	r24, 0x40	; 64
     be0:	8c 93       	st	X, r24
}
     be2:	cf 91       	pop	r28
     be4:	df 91       	pop	r29
     be6:	08 95       	ret

00000be8 <INT1_init>:

/*Initialize INT1 for Pause*/
void INT1_init(void)
{
     be8:	df 93       	push	r29
     bea:	cf 93       	push	r28
     bec:	cd b7       	in	r28, 0x3d	; 61
     bee:	de b7       	in	r29, 0x3e	; 62
	DDRD&=~(1<<PD3);
     bf0:	a1 e3       	ldi	r26, 0x31	; 49
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	e1 e3       	ldi	r30, 0x31	; 49
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	80 81       	ld	r24, Z
     bfa:	87 7f       	andi	r24, 0xF7	; 247
     bfc:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC11)|(1<<ISC10);/*set interrupt to rising edge*/
     bfe:	a5 e5       	ldi	r26, 0x55	; 85
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	e5 e5       	ldi	r30, 0x55	; 85
     c04:	f0 e0       	ldi	r31, 0x00	; 0
     c06:	80 81       	ld	r24, Z
     c08:	8c 60       	ori	r24, 0x0C	; 12
     c0a:	8c 93       	st	X, r24
	GICR|=(1<<INT1);/*enable INT1*/
     c0c:	ab e5       	ldi	r26, 0x5B	; 91
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	eb e5       	ldi	r30, 0x5B	; 91
     c12:	f0 e0       	ldi	r31, 0x00	; 0
     c14:	80 81       	ld	r24, Z
     c16:	80 68       	ori	r24, 0x80	; 128
     c18:	8c 93       	st	X, r24
	GIFR|=(1<<INTF1);/*clear INT1 flag*/
     c1a:	aa e5       	ldi	r26, 0x5A	; 90
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	ea e5       	ldi	r30, 0x5A	; 90
     c20:	f0 e0       	ldi	r31, 0x00	; 0
     c22:	80 81       	ld	r24, Z
     c24:	80 68       	ori	r24, 0x80	; 128
     c26:	8c 93       	st	X, r24
}
     c28:	cf 91       	pop	r28
     c2a:	df 91       	pop	r29
     c2c:	08 95       	ret

00000c2e <INT2_init>:

/*Initialize INT2 for Resume*/
void INT2_init(void)
{
     c2e:	df 93       	push	r29
     c30:	cf 93       	push	r28
     c32:	cd b7       	in	r28, 0x3d	; 61
     c34:	de b7       	in	r29, 0x3e	; 62
	DDRB&=~(1<<PB2);
     c36:	a7 e3       	ldi	r26, 0x37	; 55
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e7 e3       	ldi	r30, 0x37	; 55
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	8b 7f       	andi	r24, 0xFB	; 251
     c42:	8c 93       	st	X, r24
	PORTB|=(1<<PB2);/*enable internal pull up resistor*/
     c44:	a8 e3       	ldi	r26, 0x38	; 56
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e8 e3       	ldi	r30, 0x38	; 56
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	84 60       	ori	r24, 0x04	; 4
     c50:	8c 93       	st	X, r24
	MCUCSR&=~(1<<ISC2);
     c52:	a4 e5       	ldi	r26, 0x54	; 84
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	e4 e5       	ldi	r30, 0x54	; 84
     c58:	f0 e0       	ldi	r31, 0x00	; 0
     c5a:	80 81       	ld	r24, Z
     c5c:	8f 7b       	andi	r24, 0xBF	; 191
     c5e:	8c 93       	st	X, r24
	GICR|=(1<<INT2);/*enable INT2*/
     c60:	ab e5       	ldi	r26, 0x5B	; 91
     c62:	b0 e0       	ldi	r27, 0x00	; 0
     c64:	eb e5       	ldi	r30, 0x5B	; 91
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	80 81       	ld	r24, Z
     c6a:	80 62       	ori	r24, 0x20	; 32
     c6c:	8c 93       	st	X, r24
	GIFR|=(1<<INTF2);/*clear INT2 flag*/
     c6e:	aa e5       	ldi	r26, 0x5A	; 90
     c70:	b0 e0       	ldi	r27, 0x00	; 0
     c72:	ea e5       	ldi	r30, 0x5A	; 90
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	80 81       	ld	r24, Z
     c78:	80 62       	ori	r24, 0x20	; 32
     c7a:	8c 93       	st	X, r24
}
     c7c:	cf 91       	pop	r28
     c7e:	df 91       	pop	r29
     c80:	08 95       	ret

00000c82 <display_7_segment>:

/* Function to dislay the multiplexed 6  7_segments */
void display_7_segment(void)
{
     c82:	0f 93       	push	r16
     c84:	1f 93       	push	r17
     c86:	df 93       	push	r29
     c88:	cf 93       	push	r28
     c8a:	cd b7       	in	r28, 0x3d	; 61
     c8c:	de b7       	in	r29, 0x3e	; 62
     c8e:	c4 55       	subi	r28, 0x54	; 84
     c90:	d0 40       	sbci	r29, 0x00	; 0
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
	/*Display the Seconds*/
	PORTA &=~(1<<PA5)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
     c9c:	ab e3       	ldi	r26, 0x3B	; 59
     c9e:	b0 e0       	ldi	r27, 0x00	; 0
     ca0:	eb e3       	ldi	r30, 0x3B	; 59
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	80 81       	ld	r24, Z
     ca6:	80 7d       	andi	r24, 0xD0	; 208
     ca8:	8c 93       	st	X, r24
	PORTA |=(1<<PA4);
     caa:	ab e3       	ldi	r26, 0x3B	; 59
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	eb e3       	ldi	r30, 0x3B	; 59
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 81       	ld	r24, Z
     cb4:	80 61       	ori	r24, 0x10	; 16
     cb6:	8c 93       	st	X, r24
	PORTC = seg [sec_dig2];
     cb8:	a5 e3       	ldi	r26, 0x35	; 53
     cba:	b0 e0       	ldi	r27, 0x00	; 0
     cbc:	80 91 78 00 	lds	r24, 0x0078
     cc0:	88 2f       	mov	r24, r24
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	fc 01       	movw	r30, r24
     cc6:	e8 59       	subi	r30, 0x98	; 152
     cc8:	ff 4f       	sbci	r31, 0xFF	; 255
     cca:	80 81       	ld	r24, Z
     ccc:	8c 93       	st	X, r24
     cce:	fe 01       	movw	r30, r28
     cd0:	ef 5a       	subi	r30, 0xAF	; 175
     cd2:	ff 4f       	sbci	r31, 0xFF	; 255
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	a0 e0       	ldi	r26, 0x00	; 0
     cda:	b0 e4       	ldi	r27, 0x40	; 64
     cdc:	80 83       	st	Z, r24
     cde:	91 83       	std	Z+1, r25	; 0x01
     ce0:	a2 83       	std	Z+2, r26	; 0x02
     ce2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ce4:	8e 01       	movw	r16, r28
     ce6:	03 5b       	subi	r16, 0xB3	; 179
     ce8:	1f 4f       	sbci	r17, 0xFF	; 255
     cea:	fe 01       	movw	r30, r28
     cec:	ef 5a       	subi	r30, 0xAF	; 175
     cee:	ff 4f       	sbci	r31, 0xFF	; 255
     cf0:	60 81       	ld	r22, Z
     cf2:	71 81       	ldd	r23, Z+1	; 0x01
     cf4:	82 81       	ldd	r24, Z+2	; 0x02
     cf6:	93 81       	ldd	r25, Z+3	; 0x03
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	4a e7       	ldi	r20, 0x7A	; 122
     cfe:	55 e4       	ldi	r21, 0x45	; 69
     d00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d04:	dc 01       	movw	r26, r24
     d06:	cb 01       	movw	r24, r22
     d08:	f8 01       	movw	r30, r16
     d0a:	80 83       	st	Z, r24
     d0c:	91 83       	std	Z+1, r25	; 0x01
     d0e:	a2 83       	std	Z+2, r26	; 0x02
     d10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d12:	fe 01       	movw	r30, r28
     d14:	e3 5b       	subi	r30, 0xB3	; 179
     d16:	ff 4f       	sbci	r31, 0xFF	; 255
     d18:	60 81       	ld	r22, Z
     d1a:	71 81       	ldd	r23, Z+1	; 0x01
     d1c:	82 81       	ldd	r24, Z+2	; 0x02
     d1e:	93 81       	ldd	r25, Z+3	; 0x03
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e8       	ldi	r20, 0x80	; 128
     d26:	5f e3       	ldi	r21, 0x3F	; 63
     d28:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d2c:	88 23       	and	r24, r24
     d2e:	44 f4       	brge	.+16     	; 0xd40 <display_7_segment+0xbe>
		__ticks = 1;
     d30:	fe 01       	movw	r30, r28
     d32:	e5 5b       	subi	r30, 0xB5	; 181
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	91 83       	std	Z+1, r25	; 0x01
     d3c:	80 83       	st	Z, r24
     d3e:	64 c0       	rjmp	.+200    	; 0xe08 <display_7_segment+0x186>
	else if (__tmp > 65535)
     d40:	fe 01       	movw	r30, r28
     d42:	e3 5b       	subi	r30, 0xB3	; 179
     d44:	ff 4f       	sbci	r31, 0xFF	; 255
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	3f ef       	ldi	r19, 0xFF	; 255
     d52:	4f e7       	ldi	r20, 0x7F	; 127
     d54:	57 e4       	ldi	r21, 0x47	; 71
     d56:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d5a:	18 16       	cp	r1, r24
     d5c:	0c f0       	brlt	.+2      	; 0xd60 <display_7_segment+0xde>
     d5e:	43 c0       	rjmp	.+134    	; 0xde6 <display_7_segment+0x164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d60:	fe 01       	movw	r30, r28
     d62:	ef 5a       	subi	r30, 0xAF	; 175
     d64:	ff 4f       	sbci	r31, 0xFF	; 255
     d66:	60 81       	ld	r22, Z
     d68:	71 81       	ldd	r23, Z+1	; 0x01
     d6a:	82 81       	ldd	r24, Z+2	; 0x02
     d6c:	93 81       	ldd	r25, Z+3	; 0x03
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e2       	ldi	r20, 0x20	; 32
     d74:	51 e4       	ldi	r21, 0x41	; 65
     d76:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d7a:	dc 01       	movw	r26, r24
     d7c:	cb 01       	movw	r24, r22
     d7e:	8e 01       	movw	r16, r28
     d80:	05 5b       	subi	r16, 0xB5	; 181
     d82:	1f 4f       	sbci	r17, 0xFF	; 255
     d84:	bc 01       	movw	r22, r24
     d86:	cd 01       	movw	r24, r26
     d88:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	f8 01       	movw	r30, r16
     d92:	91 83       	std	Z+1, r25	; 0x01
     d94:	80 83       	st	Z, r24
     d96:	1f c0       	rjmp	.+62     	; 0xdd6 <display_7_segment+0x154>
     d98:	fe 01       	movw	r30, r28
     d9a:	e7 5b       	subi	r30, 0xB7	; 183
     d9c:	ff 4f       	sbci	r31, 0xFF	; 255
     d9e:	80 e9       	ldi	r24, 0x90	; 144
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     da6:	fe 01       	movw	r30, r28
     da8:	e7 5b       	subi	r30, 0xB7	; 183
     daa:	ff 4f       	sbci	r31, 0xFF	; 255
     dac:	80 81       	ld	r24, Z
     dae:	91 81       	ldd	r25, Z+1	; 0x01
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	f1 f7       	brne	.-4      	; 0xdb0 <display_7_segment+0x12e>
     db4:	fe 01       	movw	r30, r28
     db6:	e7 5b       	subi	r30, 0xB7	; 183
     db8:	ff 4f       	sbci	r31, 0xFF	; 255
     dba:	91 83       	std	Z+1, r25	; 0x01
     dbc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dbe:	de 01       	movw	r26, r28
     dc0:	a5 5b       	subi	r26, 0xB5	; 181
     dc2:	bf 4f       	sbci	r27, 0xFF	; 255
     dc4:	fe 01       	movw	r30, r28
     dc6:	e5 5b       	subi	r30, 0xB5	; 181
     dc8:	ff 4f       	sbci	r31, 0xFF	; 255
     dca:	80 81       	ld	r24, Z
     dcc:	91 81       	ldd	r25, Z+1	; 0x01
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	11 96       	adiw	r26, 0x01	; 1
     dd2:	9c 93       	st	X, r25
     dd4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dd6:	fe 01       	movw	r30, r28
     dd8:	e5 5b       	subi	r30, 0xB5	; 181
     dda:	ff 4f       	sbci	r31, 0xFF	; 255
     ddc:	80 81       	ld	r24, Z
     dde:	91 81       	ldd	r25, Z+1	; 0x01
     de0:	00 97       	sbiw	r24, 0x00	; 0
     de2:	d1 f6       	brne	.-76     	; 0xd98 <display_7_segment+0x116>
     de4:	27 c0       	rjmp	.+78     	; 0xe34 <display_7_segment+0x1b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     de6:	8e 01       	movw	r16, r28
     de8:	05 5b       	subi	r16, 0xB5	; 181
     dea:	1f 4f       	sbci	r17, 0xFF	; 255
     dec:	fe 01       	movw	r30, r28
     dee:	e3 5b       	subi	r30, 0xB3	; 179
     df0:	ff 4f       	sbci	r31, 0xFF	; 255
     df2:	60 81       	ld	r22, Z
     df4:	71 81       	ldd	r23, Z+1	; 0x01
     df6:	82 81       	ldd	r24, Z+2	; 0x02
     df8:	93 81       	ldd	r25, Z+3	; 0x03
     dfa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dfe:	dc 01       	movw	r26, r24
     e00:	cb 01       	movw	r24, r22
     e02:	f8 01       	movw	r30, r16
     e04:	91 83       	std	Z+1, r25	; 0x01
     e06:	80 83       	st	Z, r24
     e08:	de 01       	movw	r26, r28
     e0a:	a9 5b       	subi	r26, 0xB9	; 185
     e0c:	bf 4f       	sbci	r27, 0xFF	; 255
     e0e:	fe 01       	movw	r30, r28
     e10:	e5 5b       	subi	r30, 0xB5	; 181
     e12:	ff 4f       	sbci	r31, 0xFF	; 255
     e14:	80 81       	ld	r24, Z
     e16:	91 81       	ldd	r25, Z+1	; 0x01
     e18:	8d 93       	st	X+, r24
     e1a:	9c 93       	st	X, r25
     e1c:	fe 01       	movw	r30, r28
     e1e:	e9 5b       	subi	r30, 0xB9	; 185
     e20:	ff 4f       	sbci	r31, 0xFF	; 255
     e22:	80 81       	ld	r24, Z
     e24:	91 81       	ldd	r25, Z+1	; 0x01
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <display_7_segment+0x1a4>
     e2a:	fe 01       	movw	r30, r28
     e2c:	e9 5b       	subi	r30, 0xB9	; 185
     e2e:	ff 4f       	sbci	r31, 0xFF	; 255
     e30:	91 83       	std	Z+1, r25	; 0x01
     e32:	80 83       	st	Z, r24
	_delay_ms(2);

	PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
     e34:	ab e3       	ldi	r26, 0x3B	; 59
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	eb e3       	ldi	r30, 0x3B	; 59
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	80 7e       	andi	r24, 0xE0	; 224
     e40:	8c 93       	st	X, r24
	PORTA |=(1<<PA5);
     e42:	ab e3       	ldi	r26, 0x3B	; 59
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	eb e3       	ldi	r30, 0x3B	; 59
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	80 62       	ori	r24, 0x20	; 32
     e4e:	8c 93       	st	X, r24
	PORTC = seg [sec_dig1];
     e50:	a5 e3       	ldi	r26, 0x35	; 53
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	80 91 77 00 	lds	r24, 0x0077
     e58:	88 2f       	mov	r24, r24
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	fc 01       	movw	r30, r24
     e5e:	e8 59       	subi	r30, 0x98	; 152
     e60:	ff 4f       	sbci	r31, 0xFF	; 255
     e62:	80 81       	ld	r24, Z
     e64:	8c 93       	st	X, r24
     e66:	fe 01       	movw	r30, r28
     e68:	ed 5b       	subi	r30, 0xBD	; 189
     e6a:	ff 4f       	sbci	r31, 0xFF	; 255
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e4       	ldi	r27, 0x40	; 64
     e74:	80 83       	st	Z, r24
     e76:	91 83       	std	Z+1, r25	; 0x01
     e78:	a2 83       	std	Z+2, r26	; 0x02
     e7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e7c:	8e 01       	movw	r16, r28
     e7e:	01 5c       	subi	r16, 0xC1	; 193
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	fe 01       	movw	r30, r28
     e84:	ed 5b       	subi	r30, 0xBD	; 189
     e86:	ff 4f       	sbci	r31, 0xFF	; 255
     e88:	60 81       	ld	r22, Z
     e8a:	71 81       	ldd	r23, Z+1	; 0x01
     e8c:	82 81       	ldd	r24, Z+2	; 0x02
     e8e:	93 81       	ldd	r25, Z+3	; 0x03
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	4a e7       	ldi	r20, 0x7A	; 122
     e96:	55 e4       	ldi	r21, 0x45	; 69
     e98:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	f8 01       	movw	r30, r16
     ea2:	80 83       	st	Z, r24
     ea4:	91 83       	std	Z+1, r25	; 0x01
     ea6:	a2 83       	std	Z+2, r26	; 0x02
     ea8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     eaa:	fe 01       	movw	r30, r28
     eac:	ff 96       	adiw	r30, 0x3f	; 63
     eae:	60 81       	ld	r22, Z
     eb0:	71 81       	ldd	r23, Z+1	; 0x01
     eb2:	82 81       	ldd	r24, Z+2	; 0x02
     eb4:	93 81       	ldd	r25, Z+3	; 0x03
     eb6:	20 e0       	ldi	r18, 0x00	; 0
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	40 e8       	ldi	r20, 0x80	; 128
     ebc:	5f e3       	ldi	r21, 0x3F	; 63
     ebe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     ec2:	88 23       	and	r24, r24
     ec4:	2c f4       	brge	.+10     	; 0xed0 <display_7_segment+0x24e>
		__ticks = 1;
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	9e af       	std	Y+62, r25	; 0x3e
     ecc:	8d af       	std	Y+61, r24	; 0x3d
     ece:	46 c0       	rjmp	.+140    	; 0xf5c <display_7_segment+0x2da>
	else if (__tmp > 65535)
     ed0:	fe 01       	movw	r30, r28
     ed2:	ff 96       	adiw	r30, 0x3f	; 63
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	82 81       	ldd	r24, Z+2	; 0x02
     eda:	93 81       	ldd	r25, Z+3	; 0x03
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	3f ef       	ldi	r19, 0xFF	; 255
     ee0:	4f e7       	ldi	r20, 0x7F	; 127
     ee2:	57 e4       	ldi	r21, 0x47	; 71
     ee4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ee8:	18 16       	cp	r1, r24
     eea:	64 f5       	brge	.+88     	; 0xf44 <display_7_segment+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eec:	fe 01       	movw	r30, r28
     eee:	ed 5b       	subi	r30, 0xBD	; 189
     ef0:	ff 4f       	sbci	r31, 0xFF	; 255
     ef2:	60 81       	ld	r22, Z
     ef4:	71 81       	ldd	r23, Z+1	; 0x01
     ef6:	82 81       	ldd	r24, Z+2	; 0x02
     ef8:	93 81       	ldd	r25, Z+3	; 0x03
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	40 e2       	ldi	r20, 0x20	; 32
     f00:	51 e4       	ldi	r21, 0x41	; 65
     f02:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f06:	dc 01       	movw	r26, r24
     f08:	cb 01       	movw	r24, r22
     f0a:	bc 01       	movw	r22, r24
     f0c:	cd 01       	movw	r24, r26
     f0e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f12:	dc 01       	movw	r26, r24
     f14:	cb 01       	movw	r24, r22
     f16:	9e af       	std	Y+62, r25	; 0x3e
     f18:	8d af       	std	Y+61, r24	; 0x3d
     f1a:	0f c0       	rjmp	.+30     	; 0xf3a <display_7_segment+0x2b8>
     f1c:	80 e9       	ldi	r24, 0x90	; 144
     f1e:	91 e0       	ldi	r25, 0x01	; 1
     f20:	9c af       	std	Y+60, r25	; 0x3c
     f22:	8b af       	std	Y+59, r24	; 0x3b
     f24:	8b ad       	ldd	r24, Y+59	; 0x3b
     f26:	9c ad       	ldd	r25, Y+60	; 0x3c
     f28:	01 97       	sbiw	r24, 0x01	; 1
     f2a:	f1 f7       	brne	.-4      	; 0xf28 <display_7_segment+0x2a6>
     f2c:	9c af       	std	Y+60, r25	; 0x3c
     f2e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f30:	8d ad       	ldd	r24, Y+61	; 0x3d
     f32:	9e ad       	ldd	r25, Y+62	; 0x3e
     f34:	01 97       	sbiw	r24, 0x01	; 1
     f36:	9e af       	std	Y+62, r25	; 0x3e
     f38:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f3a:	8d ad       	ldd	r24, Y+61	; 0x3d
     f3c:	9e ad       	ldd	r25, Y+62	; 0x3e
     f3e:	00 97       	sbiw	r24, 0x00	; 0
     f40:	69 f7       	brne	.-38     	; 0xf1c <display_7_segment+0x29a>
     f42:	16 c0       	rjmp	.+44     	; 0xf70 <display_7_segment+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f44:	fe 01       	movw	r30, r28
     f46:	ff 96       	adiw	r30, 0x3f	; 63
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	82 81       	ldd	r24, Z+2	; 0x02
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f54:	dc 01       	movw	r26, r24
     f56:	cb 01       	movw	r24, r22
     f58:	9e af       	std	Y+62, r25	; 0x3e
     f5a:	8d af       	std	Y+61, r24	; 0x3d
     f5c:	8d ad       	ldd	r24, Y+61	; 0x3d
     f5e:	9e ad       	ldd	r25, Y+62	; 0x3e
     f60:	9a af       	std	Y+58, r25	; 0x3a
     f62:	89 af       	std	Y+57, r24	; 0x39
     f64:	89 ad       	ldd	r24, Y+57	; 0x39
     f66:	9a ad       	ldd	r25, Y+58	; 0x3a
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	f1 f7       	brne	.-4      	; 0xf68 <display_7_segment+0x2e6>
     f6c:	9a af       	std	Y+58, r25	; 0x3a
     f6e:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(2);

	/*Display the Minutes*/
	PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA5)&~(1<<PA1)&~(1<<PA0);
     f70:	ab e3       	ldi	r26, 0x3B	; 59
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	eb e3       	ldi	r30, 0x3B	; 59
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	84 7c       	andi	r24, 0xC4	; 196
     f7c:	8c 93       	st	X, r24
	PORTA |=(1<<PA2);
     f7e:	ab e3       	ldi	r26, 0x3B	; 59
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	eb e3       	ldi	r30, 0x3B	; 59
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	80 81       	ld	r24, Z
     f88:	84 60       	ori	r24, 0x04	; 4
     f8a:	8c 93       	st	X, r24
	PORTC = seg [min_dig2];
     f8c:	a5 e3       	ldi	r26, 0x35	; 53
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	80 91 7a 00 	lds	r24, 0x007A
     f94:	88 2f       	mov	r24, r24
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	fc 01       	movw	r30, r24
     f9a:	e8 59       	subi	r30, 0x98	; 152
     f9c:	ff 4f       	sbci	r31, 0xFF	; 255
     f9e:	80 81       	ld	r24, Z
     fa0:	8c 93       	st	X, r24
     fa2:	80 e0       	ldi	r24, 0x00	; 0
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	a0 e0       	ldi	r26, 0x00	; 0
     fa8:	b0 e4       	ldi	r27, 0x40	; 64
     faa:	8d ab       	std	Y+53, r24	; 0x35
     fac:	9e ab       	std	Y+54, r25	; 0x36
     fae:	af ab       	std	Y+55, r26	; 0x37
     fb0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fb2:	6d a9       	ldd	r22, Y+53	; 0x35
     fb4:	7e a9       	ldd	r23, Y+54	; 0x36
     fb6:	8f a9       	ldd	r24, Y+55	; 0x37
     fb8:	98 ad       	ldd	r25, Y+56	; 0x38
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	4a e7       	ldi	r20, 0x7A	; 122
     fc0:	55 e4       	ldi	r21, 0x45	; 69
     fc2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fc6:	dc 01       	movw	r26, r24
     fc8:	cb 01       	movw	r24, r22
     fca:	89 ab       	std	Y+49, r24	; 0x31
     fcc:	9a ab       	std	Y+50, r25	; 0x32
     fce:	ab ab       	std	Y+51, r26	; 0x33
     fd0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     fd2:	69 a9       	ldd	r22, Y+49	; 0x31
     fd4:	7a a9       	ldd	r23, Y+50	; 0x32
     fd6:	8b a9       	ldd	r24, Y+51	; 0x33
     fd8:	9c a9       	ldd	r25, Y+52	; 0x34
     fda:	20 e0       	ldi	r18, 0x00	; 0
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	40 e8       	ldi	r20, 0x80	; 128
     fe0:	5f e3       	ldi	r21, 0x3F	; 63
     fe2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     fe6:	88 23       	and	r24, r24
     fe8:	2c f4       	brge	.+10     	; 0xff4 <display_7_segment+0x372>
		__ticks = 1;
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	98 ab       	std	Y+48, r25	; 0x30
     ff0:	8f a7       	std	Y+47, r24	; 0x2f
     ff2:	3f c0       	rjmp	.+126    	; 0x1072 <display_7_segment+0x3f0>
	else if (__tmp > 65535)
     ff4:	69 a9       	ldd	r22, Y+49	; 0x31
     ff6:	7a a9       	ldd	r23, Y+50	; 0x32
     ff8:	8b a9       	ldd	r24, Y+51	; 0x33
     ffa:	9c a9       	ldd	r25, Y+52	; 0x34
     ffc:	20 e0       	ldi	r18, 0x00	; 0
     ffe:	3f ef       	ldi	r19, 0xFF	; 255
    1000:	4f e7       	ldi	r20, 0x7F	; 127
    1002:	57 e4       	ldi	r21, 0x47	; 71
    1004:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1008:	18 16       	cp	r1, r24
    100a:	4c f5       	brge	.+82     	; 0x105e <display_7_segment+0x3dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    100c:	6d a9       	ldd	r22, Y+53	; 0x35
    100e:	7e a9       	ldd	r23, Y+54	; 0x36
    1010:	8f a9       	ldd	r24, Y+55	; 0x37
    1012:	98 ad       	ldd	r25, Y+56	; 0x38
    1014:	20 e0       	ldi	r18, 0x00	; 0
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	40 e2       	ldi	r20, 0x20	; 32
    101a:	51 e4       	ldi	r21, 0x41	; 65
    101c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1020:	dc 01       	movw	r26, r24
    1022:	cb 01       	movw	r24, r22
    1024:	bc 01       	movw	r22, r24
    1026:	cd 01       	movw	r24, r26
    1028:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    102c:	dc 01       	movw	r26, r24
    102e:	cb 01       	movw	r24, r22
    1030:	98 ab       	std	Y+48, r25	; 0x30
    1032:	8f a7       	std	Y+47, r24	; 0x2f
    1034:	0f c0       	rjmp	.+30     	; 0x1054 <display_7_segment+0x3d2>
    1036:	80 e9       	ldi	r24, 0x90	; 144
    1038:	91 e0       	ldi	r25, 0x01	; 1
    103a:	9e a7       	std	Y+46, r25	; 0x2e
    103c:	8d a7       	std	Y+45, r24	; 0x2d
    103e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1040:	9e a5       	ldd	r25, Y+46	; 0x2e
    1042:	01 97       	sbiw	r24, 0x01	; 1
    1044:	f1 f7       	brne	.-4      	; 0x1042 <display_7_segment+0x3c0>
    1046:	9e a7       	std	Y+46, r25	; 0x2e
    1048:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    104a:	8f a5       	ldd	r24, Y+47	; 0x2f
    104c:	98 a9       	ldd	r25, Y+48	; 0x30
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	98 ab       	std	Y+48, r25	; 0x30
    1052:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1054:	8f a5       	ldd	r24, Y+47	; 0x2f
    1056:	98 a9       	ldd	r25, Y+48	; 0x30
    1058:	00 97       	sbiw	r24, 0x00	; 0
    105a:	69 f7       	brne	.-38     	; 0x1036 <display_7_segment+0x3b4>
    105c:	14 c0       	rjmp	.+40     	; 0x1086 <display_7_segment+0x404>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    105e:	69 a9       	ldd	r22, Y+49	; 0x31
    1060:	7a a9       	ldd	r23, Y+50	; 0x32
    1062:	8b a9       	ldd	r24, Y+51	; 0x33
    1064:	9c a9       	ldd	r25, Y+52	; 0x34
    1066:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    106a:	dc 01       	movw	r26, r24
    106c:	cb 01       	movw	r24, r22
    106e:	98 ab       	std	Y+48, r25	; 0x30
    1070:	8f a7       	std	Y+47, r24	; 0x2f
    1072:	8f a5       	ldd	r24, Y+47	; 0x2f
    1074:	98 a9       	ldd	r25, Y+48	; 0x30
    1076:	9c a7       	std	Y+44, r25	; 0x2c
    1078:	8b a7       	std	Y+43, r24	; 0x2b
    107a:	8b a5       	ldd	r24, Y+43	; 0x2b
    107c:	9c a5       	ldd	r25, Y+44	; 0x2c
    107e:	01 97       	sbiw	r24, 0x01	; 1
    1080:	f1 f7       	brne	.-4      	; 0x107e <display_7_segment+0x3fc>
    1082:	9c a7       	std	Y+44, r25	; 0x2c
    1084:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);

	PORTA &=~(1<<PA4)&~(1<<PA5)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
    1086:	ab e3       	ldi	r26, 0x3B	; 59
    1088:	b0 e0       	ldi	r27, 0x00	; 0
    108a:	eb e3       	ldi	r30, 0x3B	; 59
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	80 81       	ld	r24, Z
    1090:	88 7c       	andi	r24, 0xC8	; 200
    1092:	8c 93       	st	X, r24
	PORTA |=(1<<PA3);
    1094:	ab e3       	ldi	r26, 0x3B	; 59
    1096:	b0 e0       	ldi	r27, 0x00	; 0
    1098:	eb e3       	ldi	r30, 0x3B	; 59
    109a:	f0 e0       	ldi	r31, 0x00	; 0
    109c:	80 81       	ld	r24, Z
    109e:	88 60       	ori	r24, 0x08	; 8
    10a0:	8c 93       	st	X, r24
	PORTC = seg [min_dig1];
    10a2:	a5 e3       	ldi	r26, 0x35	; 53
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	80 91 79 00 	lds	r24, 0x0079
    10aa:	88 2f       	mov	r24, r24
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	fc 01       	movw	r30, r24
    10b0:	e8 59       	subi	r30, 0x98	; 152
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	80 81       	ld	r24, Z
    10b6:	8c 93       	st	X, r24
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	a0 e0       	ldi	r26, 0x00	; 0
    10be:	b0 e4       	ldi	r27, 0x40	; 64
    10c0:	8f a3       	std	Y+39, r24	; 0x27
    10c2:	98 a7       	std	Y+40, r25	; 0x28
    10c4:	a9 a7       	std	Y+41, r26	; 0x29
    10c6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10c8:	6f a1       	ldd	r22, Y+39	; 0x27
    10ca:	78 a5       	ldd	r23, Y+40	; 0x28
    10cc:	89 a5       	ldd	r24, Y+41	; 0x29
    10ce:	9a a5       	ldd	r25, Y+42	; 0x2a
    10d0:	20 e0       	ldi	r18, 0x00	; 0
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	4a e7       	ldi	r20, 0x7A	; 122
    10d6:	55 e4       	ldi	r21, 0x45	; 69
    10d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10dc:	dc 01       	movw	r26, r24
    10de:	cb 01       	movw	r24, r22
    10e0:	8b a3       	std	Y+35, r24	; 0x23
    10e2:	9c a3       	std	Y+36, r25	; 0x24
    10e4:	ad a3       	std	Y+37, r26	; 0x25
    10e6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    10e8:	6b a1       	ldd	r22, Y+35	; 0x23
    10ea:	7c a1       	ldd	r23, Y+36	; 0x24
    10ec:	8d a1       	ldd	r24, Y+37	; 0x25
    10ee:	9e a1       	ldd	r25, Y+38	; 0x26
    10f0:	20 e0       	ldi	r18, 0x00	; 0
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	40 e8       	ldi	r20, 0x80	; 128
    10f6:	5f e3       	ldi	r21, 0x3F	; 63
    10f8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10fc:	88 23       	and	r24, r24
    10fe:	2c f4       	brge	.+10     	; 0x110a <display_7_segment+0x488>
		__ticks = 1;
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	9a a3       	std	Y+34, r25	; 0x22
    1106:	89 a3       	std	Y+33, r24	; 0x21
    1108:	3f c0       	rjmp	.+126    	; 0x1188 <display_7_segment+0x506>
	else if (__tmp > 65535)
    110a:	6b a1       	ldd	r22, Y+35	; 0x23
    110c:	7c a1       	ldd	r23, Y+36	; 0x24
    110e:	8d a1       	ldd	r24, Y+37	; 0x25
    1110:	9e a1       	ldd	r25, Y+38	; 0x26
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	3f ef       	ldi	r19, 0xFF	; 255
    1116:	4f e7       	ldi	r20, 0x7F	; 127
    1118:	57 e4       	ldi	r21, 0x47	; 71
    111a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    111e:	18 16       	cp	r1, r24
    1120:	4c f5       	brge	.+82     	; 0x1174 <display_7_segment+0x4f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1122:	6f a1       	ldd	r22, Y+39	; 0x27
    1124:	78 a5       	ldd	r23, Y+40	; 0x28
    1126:	89 a5       	ldd	r24, Y+41	; 0x29
    1128:	9a a5       	ldd	r25, Y+42	; 0x2a
    112a:	20 e0       	ldi	r18, 0x00	; 0
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	40 e2       	ldi	r20, 0x20	; 32
    1130:	51 e4       	ldi	r21, 0x41	; 65
    1132:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1136:	dc 01       	movw	r26, r24
    1138:	cb 01       	movw	r24, r22
    113a:	bc 01       	movw	r22, r24
    113c:	cd 01       	movw	r24, r26
    113e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1142:	dc 01       	movw	r26, r24
    1144:	cb 01       	movw	r24, r22
    1146:	9a a3       	std	Y+34, r25	; 0x22
    1148:	89 a3       	std	Y+33, r24	; 0x21
    114a:	0f c0       	rjmp	.+30     	; 0x116a <display_7_segment+0x4e8>
    114c:	80 e9       	ldi	r24, 0x90	; 144
    114e:	91 e0       	ldi	r25, 0x01	; 1
    1150:	98 a3       	std	Y+32, r25	; 0x20
    1152:	8f 8f       	std	Y+31, r24	; 0x1f
    1154:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1156:	98 a1       	ldd	r25, Y+32	; 0x20
    1158:	01 97       	sbiw	r24, 0x01	; 1
    115a:	f1 f7       	brne	.-4      	; 0x1158 <display_7_segment+0x4d6>
    115c:	98 a3       	std	Y+32, r25	; 0x20
    115e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1160:	89 a1       	ldd	r24, Y+33	; 0x21
    1162:	9a a1       	ldd	r25, Y+34	; 0x22
    1164:	01 97       	sbiw	r24, 0x01	; 1
    1166:	9a a3       	std	Y+34, r25	; 0x22
    1168:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    116a:	89 a1       	ldd	r24, Y+33	; 0x21
    116c:	9a a1       	ldd	r25, Y+34	; 0x22
    116e:	00 97       	sbiw	r24, 0x00	; 0
    1170:	69 f7       	brne	.-38     	; 0x114c <display_7_segment+0x4ca>
    1172:	14 c0       	rjmp	.+40     	; 0x119c <display_7_segment+0x51a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1174:	6b a1       	ldd	r22, Y+35	; 0x23
    1176:	7c a1       	ldd	r23, Y+36	; 0x24
    1178:	8d a1       	ldd	r24, Y+37	; 0x25
    117a:	9e a1       	ldd	r25, Y+38	; 0x26
    117c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1180:	dc 01       	movw	r26, r24
    1182:	cb 01       	movw	r24, r22
    1184:	9a a3       	std	Y+34, r25	; 0x22
    1186:	89 a3       	std	Y+33, r24	; 0x21
    1188:	89 a1       	ldd	r24, Y+33	; 0x21
    118a:	9a a1       	ldd	r25, Y+34	; 0x22
    118c:	9e 8f       	std	Y+30, r25	; 0x1e
    118e:	8d 8f       	std	Y+29, r24	; 0x1d
    1190:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1192:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1194:	01 97       	sbiw	r24, 0x01	; 1
    1196:	f1 f7       	brne	.-4      	; 0x1194 <display_7_segment+0x512>
    1198:	9e 8f       	std	Y+30, r25	; 0x1e
    119a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);

	/*Display the Hours*/
	PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA5);
    119c:	ab e3       	ldi	r26, 0x3B	; 59
    119e:	b0 e0       	ldi	r27, 0x00	; 0
    11a0:	eb e3       	ldi	r30, 0x3B	; 59
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	81 7c       	andi	r24, 0xC1	; 193
    11a8:	8c 93       	st	X, r24
	PORTA |=(1<<PA0);
    11aa:	ab e3       	ldi	r26, 0x3B	; 59
    11ac:	b0 e0       	ldi	r27, 0x00	; 0
    11ae:	eb e3       	ldi	r30, 0x3B	; 59
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	80 81       	ld	r24, Z
    11b4:	81 60       	ori	r24, 0x01	; 1
    11b6:	8c 93       	st	X, r24
	PORTC = seg [hr_dig2];
    11b8:	a5 e3       	ldi	r26, 0x35	; 53
    11ba:	b0 e0       	ldi	r27, 0x00	; 0
    11bc:	80 91 7c 00 	lds	r24, 0x007C
    11c0:	88 2f       	mov	r24, r24
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	fc 01       	movw	r30, r24
    11c6:	e8 59       	subi	r30, 0x98	; 152
    11c8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ca:	80 81       	ld	r24, Z
    11cc:	8c 93       	st	X, r24
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	a0 e0       	ldi	r26, 0x00	; 0
    11d4:	b0 e4       	ldi	r27, 0x40	; 64
    11d6:	89 8f       	std	Y+25, r24	; 0x19
    11d8:	9a 8f       	std	Y+26, r25	; 0x1a
    11da:	ab 8f       	std	Y+27, r26	; 0x1b
    11dc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11de:	69 8d       	ldd	r22, Y+25	; 0x19
    11e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    11e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    11e6:	20 e0       	ldi	r18, 0x00	; 0
    11e8:	30 e0       	ldi	r19, 0x00	; 0
    11ea:	4a e7       	ldi	r20, 0x7A	; 122
    11ec:	55 e4       	ldi	r21, 0x45	; 69
    11ee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	8d 8b       	std	Y+21, r24	; 0x15
    11f8:	9e 8b       	std	Y+22, r25	; 0x16
    11fa:	af 8b       	std	Y+23, r26	; 0x17
    11fc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    11fe:	6d 89       	ldd	r22, Y+21	; 0x15
    1200:	7e 89       	ldd	r23, Y+22	; 0x16
    1202:	8f 89       	ldd	r24, Y+23	; 0x17
    1204:	98 8d       	ldd	r25, Y+24	; 0x18
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	40 e8       	ldi	r20, 0x80	; 128
    120c:	5f e3       	ldi	r21, 0x3F	; 63
    120e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1212:	88 23       	and	r24, r24
    1214:	2c f4       	brge	.+10     	; 0x1220 <display_7_segment+0x59e>
		__ticks = 1;
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	9c 8b       	std	Y+20, r25	; 0x14
    121c:	8b 8b       	std	Y+19, r24	; 0x13
    121e:	3f c0       	rjmp	.+126    	; 0x129e <display_7_segment+0x61c>
	else if (__tmp > 65535)
    1220:	6d 89       	ldd	r22, Y+21	; 0x15
    1222:	7e 89       	ldd	r23, Y+22	; 0x16
    1224:	8f 89       	ldd	r24, Y+23	; 0x17
    1226:	98 8d       	ldd	r25, Y+24	; 0x18
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	3f ef       	ldi	r19, 0xFF	; 255
    122c:	4f e7       	ldi	r20, 0x7F	; 127
    122e:	57 e4       	ldi	r21, 0x47	; 71
    1230:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1234:	18 16       	cp	r1, r24
    1236:	4c f5       	brge	.+82     	; 0x128a <display_7_segment+0x608>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1238:	69 8d       	ldd	r22, Y+25	; 0x19
    123a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    123c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    123e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1240:	20 e0       	ldi	r18, 0x00	; 0
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	40 e2       	ldi	r20, 0x20	; 32
    1246:	51 e4       	ldi	r21, 0x41	; 65
    1248:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    124c:	dc 01       	movw	r26, r24
    124e:	cb 01       	movw	r24, r22
    1250:	bc 01       	movw	r22, r24
    1252:	cd 01       	movw	r24, r26
    1254:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1258:	dc 01       	movw	r26, r24
    125a:	cb 01       	movw	r24, r22
    125c:	9c 8b       	std	Y+20, r25	; 0x14
    125e:	8b 8b       	std	Y+19, r24	; 0x13
    1260:	0f c0       	rjmp	.+30     	; 0x1280 <display_7_segment+0x5fe>
    1262:	80 e9       	ldi	r24, 0x90	; 144
    1264:	91 e0       	ldi	r25, 0x01	; 1
    1266:	9a 8b       	std	Y+18, r25	; 0x12
    1268:	89 8b       	std	Y+17, r24	; 0x11
    126a:	89 89       	ldd	r24, Y+17	; 0x11
    126c:	9a 89       	ldd	r25, Y+18	; 0x12
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	f1 f7       	brne	.-4      	; 0x126e <display_7_segment+0x5ec>
    1272:	9a 8b       	std	Y+18, r25	; 0x12
    1274:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1276:	8b 89       	ldd	r24, Y+19	; 0x13
    1278:	9c 89       	ldd	r25, Y+20	; 0x14
    127a:	01 97       	sbiw	r24, 0x01	; 1
    127c:	9c 8b       	std	Y+20, r25	; 0x14
    127e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1280:	8b 89       	ldd	r24, Y+19	; 0x13
    1282:	9c 89       	ldd	r25, Y+20	; 0x14
    1284:	00 97       	sbiw	r24, 0x00	; 0
    1286:	69 f7       	brne	.-38     	; 0x1262 <display_7_segment+0x5e0>
    1288:	14 c0       	rjmp	.+40     	; 0x12b2 <display_7_segment+0x630>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    128a:	6d 89       	ldd	r22, Y+21	; 0x15
    128c:	7e 89       	ldd	r23, Y+22	; 0x16
    128e:	8f 89       	ldd	r24, Y+23	; 0x17
    1290:	98 8d       	ldd	r25, Y+24	; 0x18
    1292:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1296:	dc 01       	movw	r26, r24
    1298:	cb 01       	movw	r24, r22
    129a:	9c 8b       	std	Y+20, r25	; 0x14
    129c:	8b 8b       	std	Y+19, r24	; 0x13
    129e:	8b 89       	ldd	r24, Y+19	; 0x13
    12a0:	9c 89       	ldd	r25, Y+20	; 0x14
    12a2:	98 8b       	std	Y+16, r25	; 0x10
    12a4:	8f 87       	std	Y+15, r24	; 0x0f
    12a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    12a8:	98 89       	ldd	r25, Y+16	; 0x10
    12aa:	01 97       	sbiw	r24, 0x01	; 1
    12ac:	f1 f7       	brne	.-4      	; 0x12aa <display_7_segment+0x628>
    12ae:	98 8b       	std	Y+16, r25	; 0x10
    12b0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);

	PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA5)&~(1<<PA0);
    12b2:	ab e3       	ldi	r26, 0x3B	; 59
    12b4:	b0 e0       	ldi	r27, 0x00	; 0
    12b6:	eb e3       	ldi	r30, 0x3B	; 59
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	80 81       	ld	r24, Z
    12bc:	82 7c       	andi	r24, 0xC2	; 194
    12be:	8c 93       	st	X, r24
	PORTA |=(1<<PA1);
    12c0:	ab e3       	ldi	r26, 0x3B	; 59
    12c2:	b0 e0       	ldi	r27, 0x00	; 0
    12c4:	eb e3       	ldi	r30, 0x3B	; 59
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	80 81       	ld	r24, Z
    12ca:	82 60       	ori	r24, 0x02	; 2
    12cc:	8c 93       	st	X, r24
	PORTC = seg [hr_dig1];
    12ce:	a5 e3       	ldi	r26, 0x35	; 53
    12d0:	b0 e0       	ldi	r27, 0x00	; 0
    12d2:	80 91 7b 00 	lds	r24, 0x007B
    12d6:	88 2f       	mov	r24, r24
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	fc 01       	movw	r30, r24
    12dc:	e8 59       	subi	r30, 0x98	; 152
    12de:	ff 4f       	sbci	r31, 0xFF	; 255
    12e0:	80 81       	ld	r24, Z
    12e2:	8c 93       	st	X, r24
    12e4:	80 e0       	ldi	r24, 0x00	; 0
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	a0 e0       	ldi	r26, 0x00	; 0
    12ea:	b0 e4       	ldi	r27, 0x40	; 64
    12ec:	8b 87       	std	Y+11, r24	; 0x0b
    12ee:	9c 87       	std	Y+12, r25	; 0x0c
    12f0:	ad 87       	std	Y+13, r26	; 0x0d
    12f2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    12f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    12f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    12fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	4a e7       	ldi	r20, 0x7A	; 122
    1302:	55 e4       	ldi	r21, 0x45	; 69
    1304:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1308:	dc 01       	movw	r26, r24
    130a:	cb 01       	movw	r24, r22
    130c:	8f 83       	std	Y+7, r24	; 0x07
    130e:	98 87       	std	Y+8, r25	; 0x08
    1310:	a9 87       	std	Y+9, r26	; 0x09
    1312:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1314:	6f 81       	ldd	r22, Y+7	; 0x07
    1316:	78 85       	ldd	r23, Y+8	; 0x08
    1318:	89 85       	ldd	r24, Y+9	; 0x09
    131a:	9a 85       	ldd	r25, Y+10	; 0x0a
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	40 e8       	ldi	r20, 0x80	; 128
    1322:	5f e3       	ldi	r21, 0x3F	; 63
    1324:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1328:	88 23       	and	r24, r24
    132a:	2c f4       	brge	.+10     	; 0x1336 <display_7_segment+0x6b4>
		__ticks = 1;
    132c:	81 e0       	ldi	r24, 0x01	; 1
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	9e 83       	std	Y+6, r25	; 0x06
    1332:	8d 83       	std	Y+5, r24	; 0x05
    1334:	3f c0       	rjmp	.+126    	; 0x13b4 <display_7_segment+0x732>
	else if (__tmp > 65535)
    1336:	6f 81       	ldd	r22, Y+7	; 0x07
    1338:	78 85       	ldd	r23, Y+8	; 0x08
    133a:	89 85       	ldd	r24, Y+9	; 0x09
    133c:	9a 85       	ldd	r25, Y+10	; 0x0a
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	3f ef       	ldi	r19, 0xFF	; 255
    1342:	4f e7       	ldi	r20, 0x7F	; 127
    1344:	57 e4       	ldi	r21, 0x47	; 71
    1346:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    134a:	18 16       	cp	r1, r24
    134c:	4c f5       	brge	.+82     	; 0x13a0 <display_7_segment+0x71e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    134e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1350:	7c 85       	ldd	r23, Y+12	; 0x0c
    1352:	8d 85       	ldd	r24, Y+13	; 0x0d
    1354:	9e 85       	ldd	r25, Y+14	; 0x0e
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	40 e2       	ldi	r20, 0x20	; 32
    135c:	51 e4       	ldi	r21, 0x41	; 65
    135e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	bc 01       	movw	r22, r24
    1368:	cd 01       	movw	r24, r26
    136a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    136e:	dc 01       	movw	r26, r24
    1370:	cb 01       	movw	r24, r22
    1372:	9e 83       	std	Y+6, r25	; 0x06
    1374:	8d 83       	std	Y+5, r24	; 0x05
    1376:	0f c0       	rjmp	.+30     	; 0x1396 <display_7_segment+0x714>
    1378:	80 e9       	ldi	r24, 0x90	; 144
    137a:	91 e0       	ldi	r25, 0x01	; 1
    137c:	9c 83       	std	Y+4, r25	; 0x04
    137e:	8b 83       	std	Y+3, r24	; 0x03
    1380:	8b 81       	ldd	r24, Y+3	; 0x03
    1382:	9c 81       	ldd	r25, Y+4	; 0x04
    1384:	01 97       	sbiw	r24, 0x01	; 1
    1386:	f1 f7       	brne	.-4      	; 0x1384 <display_7_segment+0x702>
    1388:	9c 83       	std	Y+4, r25	; 0x04
    138a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    138c:	8d 81       	ldd	r24, Y+5	; 0x05
    138e:	9e 81       	ldd	r25, Y+6	; 0x06
    1390:	01 97       	sbiw	r24, 0x01	; 1
    1392:	9e 83       	std	Y+6, r25	; 0x06
    1394:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1396:	8d 81       	ldd	r24, Y+5	; 0x05
    1398:	9e 81       	ldd	r25, Y+6	; 0x06
    139a:	00 97       	sbiw	r24, 0x00	; 0
    139c:	69 f7       	brne	.-38     	; 0x1378 <display_7_segment+0x6f6>
    139e:	14 c0       	rjmp	.+40     	; 0x13c8 <display_7_segment+0x746>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13a0:	6f 81       	ldd	r22, Y+7	; 0x07
    13a2:	78 85       	ldd	r23, Y+8	; 0x08
    13a4:	89 85       	ldd	r24, Y+9	; 0x09
    13a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13ac:	dc 01       	movw	r26, r24
    13ae:	cb 01       	movw	r24, r22
    13b0:	9e 83       	std	Y+6, r25	; 0x06
    13b2:	8d 83       	std	Y+5, r24	; 0x05
    13b4:	8d 81       	ldd	r24, Y+5	; 0x05
    13b6:	9e 81       	ldd	r25, Y+6	; 0x06
    13b8:	9a 83       	std	Y+2, r25	; 0x02
    13ba:	89 83       	std	Y+1, r24	; 0x01
    13bc:	89 81       	ldd	r24, Y+1	; 0x01
    13be:	9a 81       	ldd	r25, Y+2	; 0x02
    13c0:	01 97       	sbiw	r24, 0x01	; 1
    13c2:	f1 f7       	brne	.-4      	; 0x13c0 <display_7_segment+0x73e>
    13c4:	9a 83       	std	Y+2, r25	; 0x02
    13c6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    13c8:	cc 5a       	subi	r28, 0xAC	; 172
    13ca:	df 4f       	sbci	r29, 0xFF	; 255
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	f8 94       	cli
    13d0:	de bf       	out	0x3e, r29	; 62
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	cd bf       	out	0x3d, r28	; 61
    13d6:	cf 91       	pop	r28
    13d8:	df 91       	pop	r29
    13da:	1f 91       	pop	r17
    13dc:	0f 91       	pop	r16
    13de:	08 95       	ret

000013e0 <increment_seg>:

/*function to Increment the time for count up stop watch mode*/
void increment_seg(void)
{
    13e0:	df 93       	push	r29
    13e2:	cf 93       	push	r28
    13e4:	cd b7       	in	r28, 0x3d	; 61
    13e6:	de b7       	in	r29, 0x3e	; 62
	sec++;/*increment seconds till it's =59 so it turns to a full minute and seconds start from zero*/
    13e8:	80 91 74 00 	lds	r24, 0x0074
    13ec:	8f 5f       	subi	r24, 0xFF	; 255
    13ee:	80 93 74 00 	sts	0x0074, r24

	if(sec > 59)
    13f2:	80 91 74 00 	lds	r24, 0x0074
    13f6:	8c 33       	cpi	r24, 0x3C	; 60
    13f8:	c0 f0       	brcs	.+48     	; 0x142a <increment_seg+0x4a>
	{
		sec = 0;
    13fa:	10 92 74 00 	sts	0x0074, r1
		min++;/*increment minutes every 60 seconds*/
    13fe:	80 91 75 00 	lds	r24, 0x0075
    1402:	8f 5f       	subi	r24, 0xFF	; 255
    1404:	80 93 75 00 	sts	0x0075, r24
		if (min > 59)
    1408:	80 91 75 00 	lds	r24, 0x0075
    140c:	8c 33       	cpi	r24, 0x3C	; 60
    140e:	68 f0       	brcs	.+26     	; 0x142a <increment_seg+0x4a>
		{
			min = 0;
    1410:	10 92 75 00 	sts	0x0075, r1
			hr++;/*when minutes reach 59 it's a full hour so increment hours by one and set minutes to zero again*/
    1414:	80 91 76 00 	lds	r24, 0x0076
    1418:	8f 5f       	subi	r24, 0xFF	; 255
    141a:	80 93 76 00 	sts	0x0076, r24
			if (hr > 23)
    141e:	80 91 76 00 	lds	r24, 0x0076
    1422:	88 31       	cpi	r24, 0x18	; 24
    1424:	10 f0       	brcs	.+4      	; 0x142a <increment_seg+0x4a>
			{
				hr = 0;/*when hours reach 24 hours it's a full day so the time resets to zero and starts over*/
    1426:	10 92 76 00 	sts	0x0076, r1
			}
		}
	}

	sec_dig2 = sec/10;
    142a:	80 91 74 00 	lds	r24, 0x0074
    142e:	9a e0       	ldi	r25, 0x0A	; 10
    1430:	69 2f       	mov	r22, r25
    1432:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    1436:	80 93 78 00 	sts	0x0078, r24
	sec_dig1 = sec - sec_dig2*10 ;
    143a:	80 91 78 00 	lds	r24, 0x0078
    143e:	88 2f       	mov	r24, r24
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	9c 01       	movw	r18, r24
    1444:	22 0f       	add	r18, r18
    1446:	33 1f       	adc	r19, r19
    1448:	c9 01       	movw	r24, r18
    144a:	88 0f       	add	r24, r24
    144c:	99 1f       	adc	r25, r25
    144e:	88 0f       	add	r24, r24
    1450:	99 1f       	adc	r25, r25
    1452:	82 0f       	add	r24, r18
    1454:	93 1f       	adc	r25, r19
    1456:	90 95       	com	r25
    1458:	81 95       	neg	r24
    145a:	9f 4f       	sbci	r25, 0xFF	; 255
    145c:	98 2f       	mov	r25, r24
    145e:	80 91 74 00 	lds	r24, 0x0074
    1462:	89 0f       	add	r24, r25
    1464:	80 93 77 00 	sts	0x0077, r24

	min_dig2 = min/10;
    1468:	80 91 75 00 	lds	r24, 0x0075
    146c:	9a e0       	ldi	r25, 0x0A	; 10
    146e:	69 2f       	mov	r22, r25
    1470:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    1474:	80 93 7a 00 	sts	0x007A, r24
	min_dig1 = min - min_dig2*10 ;
    1478:	80 91 7a 00 	lds	r24, 0x007A
    147c:	88 2f       	mov	r24, r24
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	9c 01       	movw	r18, r24
    1482:	22 0f       	add	r18, r18
    1484:	33 1f       	adc	r19, r19
    1486:	c9 01       	movw	r24, r18
    1488:	88 0f       	add	r24, r24
    148a:	99 1f       	adc	r25, r25
    148c:	88 0f       	add	r24, r24
    148e:	99 1f       	adc	r25, r25
    1490:	82 0f       	add	r24, r18
    1492:	93 1f       	adc	r25, r19
    1494:	90 95       	com	r25
    1496:	81 95       	neg	r24
    1498:	9f 4f       	sbci	r25, 0xFF	; 255
    149a:	98 2f       	mov	r25, r24
    149c:	80 91 75 00 	lds	r24, 0x0075
    14a0:	89 0f       	add	r24, r25
    14a2:	80 93 79 00 	sts	0x0079, r24

	hr_dig2 = hr/10;
    14a6:	80 91 76 00 	lds	r24, 0x0076
    14aa:	9a e0       	ldi	r25, 0x0A	; 10
    14ac:	69 2f       	mov	r22, r25
    14ae:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    14b2:	80 93 7c 00 	sts	0x007C, r24
	hr_dig1 = hr - hr_dig2*10 ;
    14b6:	80 91 7c 00 	lds	r24, 0x007C
    14ba:	88 2f       	mov	r24, r24
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	9c 01       	movw	r18, r24
    14c0:	22 0f       	add	r18, r18
    14c2:	33 1f       	adc	r19, r19
    14c4:	c9 01       	movw	r24, r18
    14c6:	88 0f       	add	r24, r24
    14c8:	99 1f       	adc	r25, r25
    14ca:	88 0f       	add	r24, r24
    14cc:	99 1f       	adc	r25, r25
    14ce:	82 0f       	add	r24, r18
    14d0:	93 1f       	adc	r25, r19
    14d2:	90 95       	com	r25
    14d4:	81 95       	neg	r24
    14d6:	9f 4f       	sbci	r25, 0xFF	; 255
    14d8:	98 2f       	mov	r25, r24
    14da:	80 91 76 00 	lds	r24, 0x0076
    14de:	89 0f       	add	r24, r25
    14e0:	80 93 7b 00 	sts	0x007B, r24
}
    14e4:	cf 91       	pop	r28
    14e6:	df 91       	pop	r29
    14e8:	08 95       	ret

000014ea <decrement_seg>:

/*Function to decrement the time for Count down/Timer/Alarm mode*/
void decrement_seg(void)
{
    14ea:	df 93       	push	r29
    14ec:	cf 93       	push	r28
    14ee:	00 d0       	rcall	.+0      	; 0x14f0 <decrement_seg+0x6>
    14f0:	0f 92       	push	r0
    14f2:	cd b7       	in	r28, 0x3d	; 61
    14f4:	de b7       	in	r29, 0x3e	; 62
	if(sec!=0)
    14f6:	80 91 74 00 	lds	r24, 0x0074
    14fa:	88 23       	and	r24, r24
    14fc:	31 f0       	breq	.+12     	; 0x150a <decrement_seg+0x20>
	{
		sec--;
    14fe:	80 91 74 00 	lds	r24, 0x0074
    1502:	81 50       	subi	r24, 0x01	; 1
    1504:	80 93 74 00 	sts	0x0074, r24
    1508:	4e c0       	rjmp	.+156    	; 0x15a6 <decrement_seg+0xbc>
	}
	else
	{
		if((min!=0)|(hr!=0))
    150a:	80 91 75 00 	lds	r24, 0x0075
    150e:	8a 83       	std	Y+2, r24	; 0x02
    1510:	8a 81       	ldd	r24, Y+2	; 0x02
    1512:	88 23       	and	r24, r24
    1514:	11 f0       	breq	.+4      	; 0x151a <decrement_seg+0x30>
    1516:	91 e0       	ldi	r25, 0x01	; 1
    1518:	9a 83       	std	Y+2, r25	; 0x02
    151a:	8a 81       	ldd	r24, Y+2	; 0x02
    151c:	89 83       	std	Y+1, r24	; 0x01
    151e:	80 91 76 00 	lds	r24, 0x0076
    1522:	8b 83       	std	Y+3, r24	; 0x03
    1524:	9b 81       	ldd	r25, Y+3	; 0x03
    1526:	99 23       	and	r25, r25
    1528:	11 f0       	breq	.+4      	; 0x152e <decrement_seg+0x44>
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	8b 83       	std	Y+3, r24	; 0x03
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	99 81       	ldd	r25, Y+1	; 0x01
    1532:	89 2b       	or	r24, r25
    1534:	88 23       	and	r24, r24
    1536:	49 f1       	breq	.+82     	; 0x158a <decrement_seg+0xa0>
		{
			sec=59;
    1538:	8b e3       	ldi	r24, 0x3B	; 59
    153a:	80 93 74 00 	sts	0x0074, r24
			if(min!=0)
    153e:	80 91 75 00 	lds	r24, 0x0075
    1542:	88 23       	and	r24, r24
    1544:	c9 f0       	breq	.+50     	; 0x1578 <decrement_seg+0x8e>
			{
				min--;
    1546:	80 91 75 00 	lds	r24, 0x0075
    154a:	81 50       	subi	r24, 0x01	; 1
    154c:	80 93 75 00 	sts	0x0075, r24
				{
					if(hr!=0)
    1550:	80 91 76 00 	lds	r24, 0x0076
    1554:	88 23       	and	r24, r24
    1556:	39 f1       	breq	.+78     	; 0x15a6 <decrement_seg+0xbc>
					{
						min=59;
    1558:	8b e3       	ldi	r24, 0x3B	; 59
    155a:	80 93 75 00 	sts	0x0075, r24
						hr--;
    155e:	80 91 76 00 	lds	r24, 0x0076
    1562:	81 50       	subi	r24, 0x01	; 1
    1564:	80 93 76 00 	sts	0x0076, r24
						if(hr==0)
    1568:	80 91 76 00 	lds	r24, 0x0076
    156c:	88 23       	and	r24, r24
    156e:	d9 f4       	brne	.+54     	; 0x15a6 <decrement_seg+0xbc>
						{
							hr=24;
    1570:	88 e1       	ldi	r24, 0x18	; 24
    1572:	80 93 76 00 	sts	0x0076, r24
    1576:	17 c0       	rjmp	.+46     	; 0x15a6 <decrement_seg+0xbc>
					}
				}
			}
			else
			{
				min=59;
    1578:	8b e3       	ldi	r24, 0x3B	; 59
    157a:	80 93 75 00 	sts	0x0075, r24
				hr--;
    157e:	80 91 76 00 	lds	r24, 0x0076
    1582:	81 50       	subi	r24, 0x01	; 1
    1584:	80 93 76 00 	sts	0x0076, r24
    1588:	0e c0       	rjmp	.+28     	; 0x15a6 <decrement_seg+0xbc>
			}
		}
		else
		{
			DDRD|=(1<<PD0);/*alarm when time reaches 00:00:00*/
    158a:	a1 e3       	ldi	r26, 0x31	; 49
    158c:	b0 e0       	ldi	r27, 0x00	; 0
    158e:	e1 e3       	ldi	r30, 0x31	; 49
    1590:	f0 e0       	ldi	r31, 0x00	; 0
    1592:	80 81       	ld	r24, Z
    1594:	81 60       	ori	r24, 0x01	; 1
    1596:	8c 93       	st	X, r24
			PORTD|=(1<<PD0);
    1598:	a2 e3       	ldi	r26, 0x32	; 50
    159a:	b0 e0       	ldi	r27, 0x00	; 0
    159c:	e2 e3       	ldi	r30, 0x32	; 50
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	80 81       	ld	r24, Z
    15a2:	81 60       	ori	r24, 0x01	; 1
    15a4:	8c 93       	st	X, r24
		}
	}
	sec_dig2 = sec/10;
    15a6:	80 91 74 00 	lds	r24, 0x0074
    15aa:	9a e0       	ldi	r25, 0x0A	; 10
    15ac:	69 2f       	mov	r22, r25
    15ae:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    15b2:	80 93 78 00 	sts	0x0078, r24
	sec_dig1 = sec - sec_dig2*10 ;
    15b6:	80 91 78 00 	lds	r24, 0x0078
    15ba:	88 2f       	mov	r24, r24
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	9c 01       	movw	r18, r24
    15c0:	22 0f       	add	r18, r18
    15c2:	33 1f       	adc	r19, r19
    15c4:	c9 01       	movw	r24, r18
    15c6:	88 0f       	add	r24, r24
    15c8:	99 1f       	adc	r25, r25
    15ca:	88 0f       	add	r24, r24
    15cc:	99 1f       	adc	r25, r25
    15ce:	82 0f       	add	r24, r18
    15d0:	93 1f       	adc	r25, r19
    15d2:	90 95       	com	r25
    15d4:	81 95       	neg	r24
    15d6:	9f 4f       	sbci	r25, 0xFF	; 255
    15d8:	98 2f       	mov	r25, r24
    15da:	80 91 74 00 	lds	r24, 0x0074
    15de:	89 0f       	add	r24, r25
    15e0:	80 93 77 00 	sts	0x0077, r24

	min_dig2 = min/10;
    15e4:	80 91 75 00 	lds	r24, 0x0075
    15e8:	9a e0       	ldi	r25, 0x0A	; 10
    15ea:	69 2f       	mov	r22, r25
    15ec:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    15f0:	80 93 7a 00 	sts	0x007A, r24
	min_dig1 = min - min_dig2*10 ;
    15f4:	80 91 7a 00 	lds	r24, 0x007A
    15f8:	88 2f       	mov	r24, r24
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	9c 01       	movw	r18, r24
    15fe:	22 0f       	add	r18, r18
    1600:	33 1f       	adc	r19, r19
    1602:	c9 01       	movw	r24, r18
    1604:	88 0f       	add	r24, r24
    1606:	99 1f       	adc	r25, r25
    1608:	88 0f       	add	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	82 0f       	add	r24, r18
    160e:	93 1f       	adc	r25, r19
    1610:	90 95       	com	r25
    1612:	81 95       	neg	r24
    1614:	9f 4f       	sbci	r25, 0xFF	; 255
    1616:	98 2f       	mov	r25, r24
    1618:	80 91 75 00 	lds	r24, 0x0075
    161c:	89 0f       	add	r24, r25
    161e:	80 93 79 00 	sts	0x0079, r24

	hr_dig2 = hr/10;
    1622:	80 91 76 00 	lds	r24, 0x0076
    1626:	9a e0       	ldi	r25, 0x0A	; 10
    1628:	69 2f       	mov	r22, r25
    162a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    162e:	80 93 7c 00 	sts	0x007C, r24
	hr_dig1 = hr - hr_dig2*10 ;
    1632:	80 91 7c 00 	lds	r24, 0x007C
    1636:	88 2f       	mov	r24, r24
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	9c 01       	movw	r18, r24
    163c:	22 0f       	add	r18, r18
    163e:	33 1f       	adc	r19, r19
    1640:	c9 01       	movw	r24, r18
    1642:	88 0f       	add	r24, r24
    1644:	99 1f       	adc	r25, r25
    1646:	88 0f       	add	r24, r24
    1648:	99 1f       	adc	r25, r25
    164a:	82 0f       	add	r24, r18
    164c:	93 1f       	adc	r25, r19
    164e:	90 95       	com	r25
    1650:	81 95       	neg	r24
    1652:	9f 4f       	sbci	r25, 0xFF	; 255
    1654:	98 2f       	mov	r25, r24
    1656:	80 91 76 00 	lds	r24, 0x0076
    165a:	89 0f       	add	r24, r25
    165c:	80 93 7b 00 	sts	0x007B, r24
}
    1660:	0f 90       	pop	r0
    1662:	0f 90       	pop	r0
    1664:	0f 90       	pop	r0
    1666:	cf 91       	pop	r28
    1668:	df 91       	pop	r29
    166a:	08 95       	ret

0000166c <increment_hours>:

/*function used to adjust the Hour(increment) */
void increment_hours(void)
{
    166c:	df 93       	push	r29
    166e:	cf 93       	push	r28
    1670:	cd b7       	in	r28, 0x3d	; 61
    1672:	de b7       	in	r29, 0x3e	; 62
    1674:	2e 97       	sbiw	r28, 0x0e	; 14
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
	if(hr<24)
    1680:	80 91 76 00 	lds	r24, 0x0076
    1684:	88 31       	cpi	r24, 0x18	; 24
    1686:	90 f4       	brcc	.+36     	; 0x16ac <increment_hours+0x40>
	{
		hr++;
    1688:	80 91 76 00 	lds	r24, 0x0076
    168c:	8f 5f       	subi	r24, 0xFF	; 255
    168e:	80 93 76 00 	sts	0x0076, r24
		if(paused==0)
    1692:	80 91 73 00 	lds	r24, 0x0073
    1696:	88 23       	and	r24, r24
    1698:	09 f0       	breq	.+2      	; 0x169c <increment_hours+0x30>
    169a:	8f c0       	rjmp	.+286    	; 0x17ba <increment_hours+0x14e>
		{
			TIMSK|=(1<<OCIE1A);
    169c:	a9 e5       	ldi	r26, 0x59	; 89
    169e:	b0 e0       	ldi	r27, 0x00	; 0
    16a0:	e9 e5       	ldi	r30, 0x59	; 89
    16a2:	f0 e0       	ldi	r31, 0x00	; 0
    16a4:	80 81       	ld	r24, Z
    16a6:	80 61       	ori	r24, 0x10	; 16
    16a8:	8c 93       	st	X, r24
    16aa:	87 c0       	rjmp	.+270    	; 0x17ba <increment_hours+0x14e>
		}
	}
	else
	{
		PORTC=0;
    16ac:	e5 e3       	ldi	r30, 0x35	; 53
    16ae:	f0 e0       	ldi	r31, 0x00	; 0
    16b0:	10 82       	st	Z, r1
		sec=0;
    16b2:	10 92 74 00 	sts	0x0074, r1
		min=0;
    16b6:	10 92 75 00 	sts	0x0075, r1
		hr=0;
    16ba:	10 92 76 00 	sts	0x0076, r1
		sec_dig1=0 ;
    16be:	10 92 77 00 	sts	0x0077, r1
		sec_dig2=0 ;
    16c2:	10 92 78 00 	sts	0x0078, r1
		min_dig1=0;
    16c6:	10 92 79 00 	sts	0x0079, r1
		min_dig2=0;
    16ca:	10 92 7a 00 	sts	0x007A, r1
		hr_dig1=0;
    16ce:	10 92 7b 00 	sts	0x007B, r1
		hr_dig2=0;
    16d2:	10 92 7c 00 	sts	0x007C, r1
    16d6:	80 e0       	ldi	r24, 0x00	; 0
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	a0 e8       	ldi	r26, 0x80	; 128
    16dc:	bf e3       	ldi	r27, 0x3F	; 63
    16de:	8b 87       	std	Y+11, r24	; 0x0b
    16e0:	9c 87       	std	Y+12, r25	; 0x0c
    16e2:	ad 87       	std	Y+13, r26	; 0x0d
    16e4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    16e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    16ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ee:	20 e0       	ldi	r18, 0x00	; 0
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	4a e7       	ldi	r20, 0x7A	; 122
    16f4:	55 e4       	ldi	r21, 0x45	; 69
    16f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16fa:	dc 01       	movw	r26, r24
    16fc:	cb 01       	movw	r24, r22
    16fe:	8f 83       	std	Y+7, r24	; 0x07
    1700:	98 87       	std	Y+8, r25	; 0x08
    1702:	a9 87       	std	Y+9, r26	; 0x09
    1704:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1706:	6f 81       	ldd	r22, Y+7	; 0x07
    1708:	78 85       	ldd	r23, Y+8	; 0x08
    170a:	89 85       	ldd	r24, Y+9	; 0x09
    170c:	9a 85       	ldd	r25, Y+10	; 0x0a
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e8       	ldi	r20, 0x80	; 128
    1714:	5f e3       	ldi	r21, 0x3F	; 63
    1716:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    171a:	88 23       	and	r24, r24
    171c:	2c f4       	brge	.+10     	; 0x1728 <increment_hours+0xbc>
		__ticks = 1;
    171e:	81 e0       	ldi	r24, 0x01	; 1
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	9e 83       	std	Y+6, r25	; 0x06
    1724:	8d 83       	std	Y+5, r24	; 0x05
    1726:	3f c0       	rjmp	.+126    	; 0x17a6 <increment_hours+0x13a>
	else if (__tmp > 65535)
    1728:	6f 81       	ldd	r22, Y+7	; 0x07
    172a:	78 85       	ldd	r23, Y+8	; 0x08
    172c:	89 85       	ldd	r24, Y+9	; 0x09
    172e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	3f ef       	ldi	r19, 0xFF	; 255
    1734:	4f e7       	ldi	r20, 0x7F	; 127
    1736:	57 e4       	ldi	r21, 0x47	; 71
    1738:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    173c:	18 16       	cp	r1, r24
    173e:	4c f5       	brge	.+82     	; 0x1792 <increment_hours+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1740:	6b 85       	ldd	r22, Y+11	; 0x0b
    1742:	7c 85       	ldd	r23, Y+12	; 0x0c
    1744:	8d 85       	ldd	r24, Y+13	; 0x0d
    1746:	9e 85       	ldd	r25, Y+14	; 0x0e
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	40 e2       	ldi	r20, 0x20	; 32
    174e:	51 e4       	ldi	r21, 0x41	; 65
    1750:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	bc 01       	movw	r22, r24
    175a:	cd 01       	movw	r24, r26
    175c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1760:	dc 01       	movw	r26, r24
    1762:	cb 01       	movw	r24, r22
    1764:	9e 83       	std	Y+6, r25	; 0x06
    1766:	8d 83       	std	Y+5, r24	; 0x05
    1768:	0f c0       	rjmp	.+30     	; 0x1788 <increment_hours+0x11c>
    176a:	80 e9       	ldi	r24, 0x90	; 144
    176c:	91 e0       	ldi	r25, 0x01	; 1
    176e:	9c 83       	std	Y+4, r25	; 0x04
    1770:	8b 83       	std	Y+3, r24	; 0x03
    1772:	8b 81       	ldd	r24, Y+3	; 0x03
    1774:	9c 81       	ldd	r25, Y+4	; 0x04
    1776:	01 97       	sbiw	r24, 0x01	; 1
    1778:	f1 f7       	brne	.-4      	; 0x1776 <increment_hours+0x10a>
    177a:	9c 83       	std	Y+4, r25	; 0x04
    177c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    177e:	8d 81       	ldd	r24, Y+5	; 0x05
    1780:	9e 81       	ldd	r25, Y+6	; 0x06
    1782:	01 97       	sbiw	r24, 0x01	; 1
    1784:	9e 83       	std	Y+6, r25	; 0x06
    1786:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1788:	8d 81       	ldd	r24, Y+5	; 0x05
    178a:	9e 81       	ldd	r25, Y+6	; 0x06
    178c:	00 97       	sbiw	r24, 0x00	; 0
    178e:	69 f7       	brne	.-38     	; 0x176a <increment_hours+0xfe>
    1790:	14 c0       	rjmp	.+40     	; 0x17ba <increment_hours+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1792:	6f 81       	ldd	r22, Y+7	; 0x07
    1794:	78 85       	ldd	r23, Y+8	; 0x08
    1796:	89 85       	ldd	r24, Y+9	; 0x09
    1798:	9a 85       	ldd	r25, Y+10	; 0x0a
    179a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	9e 83       	std	Y+6, r25	; 0x06
    17a4:	8d 83       	std	Y+5, r24	; 0x05
    17a6:	8d 81       	ldd	r24, Y+5	; 0x05
    17a8:	9e 81       	ldd	r25, Y+6	; 0x06
    17aa:	9a 83       	std	Y+2, r25	; 0x02
    17ac:	89 83       	std	Y+1, r24	; 0x01
    17ae:	89 81       	ldd	r24, Y+1	; 0x01
    17b0:	9a 81       	ldd	r25, Y+2	; 0x02
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	f1 f7       	brne	.-4      	; 0x17b2 <increment_hours+0x146>
    17b6:	9a 83       	std	Y+2, r25	; 0x02
    17b8:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);
	}
}
    17ba:	2e 96       	adiw	r28, 0x0e	; 14
    17bc:	0f b6       	in	r0, 0x3f	; 63
    17be:	f8 94       	cli
    17c0:	de bf       	out	0x3e, r29	; 62
    17c2:	0f be       	out	0x3f, r0	; 63
    17c4:	cd bf       	out	0x3d, r28	; 61
    17c6:	cf 91       	pop	r28
    17c8:	df 91       	pop	r29
    17ca:	08 95       	ret

000017cc <increment_minutes>:

/*function used to adjust minutes (increment)*/
void increment_minutes(void)
{
    17cc:	df 93       	push	r29
    17ce:	cf 93       	push	r28
    17d0:	cd b7       	in	r28, 0x3d	; 61
    17d2:	de b7       	in	r29, 0x3e	; 62
	if(min<59)
    17d4:	80 91 75 00 	lds	r24, 0x0075
    17d8:	8b 33       	cpi	r24, 0x3B	; 59
    17da:	88 f4       	brcc	.+34     	; 0x17fe <increment_minutes+0x32>
	{
		min++;
    17dc:	80 91 75 00 	lds	r24, 0x0075
    17e0:	8f 5f       	subi	r24, 0xFF	; 255
    17e2:	80 93 75 00 	sts	0x0075, r24
		if(paused==0)
    17e6:	80 91 73 00 	lds	r24, 0x0073
    17ea:	88 23       	and	r24, r24
    17ec:	d1 f4       	brne	.+52     	; 0x1822 <increment_minutes+0x56>
		{
			TIMSK|=(1<<OCIE1A);
    17ee:	a9 e5       	ldi	r26, 0x59	; 89
    17f0:	b0 e0       	ldi	r27, 0x00	; 0
    17f2:	e9 e5       	ldi	r30, 0x59	; 89
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	80 81       	ld	r24, Z
    17f8:	80 61       	ori	r24, 0x10	; 16
    17fa:	8c 93       	st	X, r24
    17fc:	12 c0       	rjmp	.+36     	; 0x1822 <increment_minutes+0x56>
		}
	}
	else
	{
		hr++;
    17fe:	80 91 76 00 	lds	r24, 0x0076
    1802:	8f 5f       	subi	r24, 0xFF	; 255
    1804:	80 93 76 00 	sts	0x0076, r24
		min=0;
    1808:	10 92 75 00 	sts	0x0075, r1
		if(paused==0)
    180c:	80 91 73 00 	lds	r24, 0x0073
    1810:	88 23       	and	r24, r24
    1812:	39 f4       	brne	.+14     	; 0x1822 <increment_minutes+0x56>
		{
			TIMSK|=(1<<OCIE1A);
    1814:	a9 e5       	ldi	r26, 0x59	; 89
    1816:	b0 e0       	ldi	r27, 0x00	; 0
    1818:	e9 e5       	ldi	r30, 0x59	; 89
    181a:	f0 e0       	ldi	r31, 0x00	; 0
    181c:	80 81       	ld	r24, Z
    181e:	80 61       	ori	r24, 0x10	; 16
    1820:	8c 93       	st	X, r24
		}
	}

}
    1822:	cf 91       	pop	r28
    1824:	df 91       	pop	r29
    1826:	08 95       	ret

00001828 <increment_seconds>:

/*function used to adjust seconds*/
void increment_seconds(void)
{
    1828:	df 93       	push	r29
    182a:	cf 93       	push	r28
    182c:	cd b7       	in	r28, 0x3d	; 61
    182e:	de b7       	in	r29, 0x3e	; 62
	if(sec<59)
    1830:	80 91 74 00 	lds	r24, 0x0074
    1834:	8b 33       	cpi	r24, 0x3B	; 59
    1836:	88 f4       	brcc	.+34     	; 0x185a <increment_seconds+0x32>
	{
		sec++;
    1838:	80 91 74 00 	lds	r24, 0x0074
    183c:	8f 5f       	subi	r24, 0xFF	; 255
    183e:	80 93 74 00 	sts	0x0074, r24
		if(paused==0)
    1842:	80 91 73 00 	lds	r24, 0x0073
    1846:	88 23       	and	r24, r24
    1848:	29 f5       	brne	.+74     	; 0x1894 <increment_seconds+0x6c>
		{
			TIMSK|=(1<<OCIE1A);
    184a:	a9 e5       	ldi	r26, 0x59	; 89
    184c:	b0 e0       	ldi	r27, 0x00	; 0
    184e:	e9 e5       	ldi	r30, 0x59	; 89
    1850:	f0 e0       	ldi	r31, 0x00	; 0
    1852:	80 81       	ld	r24, Z
    1854:	80 61       	ori	r24, 0x10	; 16
    1856:	8c 93       	st	X, r24
    1858:	1d c0       	rjmp	.+58     	; 0x1894 <increment_seconds+0x6c>
		}
	}
	else
	{
		sec=0;
    185a:	10 92 74 00 	sts	0x0074, r1
		min++;
    185e:	80 91 75 00 	lds	r24, 0x0075
    1862:	8f 5f       	subi	r24, 0xFF	; 255
    1864:	80 93 75 00 	sts	0x0075, r24
		if(min>59)
    1868:	80 91 75 00 	lds	r24, 0x0075
    186c:	8c 33       	cpi	r24, 0x3C	; 60
    186e:	90 f0       	brcs	.+36     	; 0x1894 <increment_seconds+0x6c>
		{
			min=0;
    1870:	10 92 75 00 	sts	0x0075, r1
			hr++;
    1874:	80 91 76 00 	lds	r24, 0x0076
    1878:	8f 5f       	subi	r24, 0xFF	; 255
    187a:	80 93 76 00 	sts	0x0076, r24
			if(paused==0)
    187e:	80 91 73 00 	lds	r24, 0x0073
    1882:	88 23       	and	r24, r24
    1884:	39 f4       	brne	.+14     	; 0x1894 <increment_seconds+0x6c>
			{
				TIMSK|=(1<<OCIE1A);/*make sure the time enable is on after the increment*/
    1886:	a9 e5       	ldi	r26, 0x59	; 89
    1888:	b0 e0       	ldi	r27, 0x00	; 0
    188a:	e9 e5       	ldi	r30, 0x59	; 89
    188c:	f0 e0       	ldi	r31, 0x00	; 0
    188e:	80 81       	ld	r24, Z
    1890:	80 61       	ori	r24, 0x10	; 16
    1892:	8c 93       	st	X, r24
			}
		}
	}
}
    1894:	cf 91       	pop	r28
    1896:	df 91       	pop	r29
    1898:	08 95       	ret

0000189a <decrement_hours>:

/*function used to adjust the Hour(decrement) */
void decrement_hours(void)
{
    189a:	df 93       	push	r29
    189c:	cf 93       	push	r28
    189e:	cd b7       	in	r28, 0x3d	; 61
    18a0:	de b7       	in	r29, 0x3e	; 62
	if(hr!=0)
    18a2:	80 91 76 00 	lds	r24, 0x0076
    18a6:	88 23       	and	r24, r24
    18a8:	81 f0       	breq	.+32     	; 0x18ca <decrement_hours+0x30>
	{
		hr--;
    18aa:	80 91 76 00 	lds	r24, 0x0076
    18ae:	81 50       	subi	r24, 0x01	; 1
    18b0:	80 93 76 00 	sts	0x0076, r24
		if(hr<0)
		{
			hr=24;
		}
		if(paused==0)
    18b4:	80 91 73 00 	lds	r24, 0x0073
    18b8:	88 23       	and	r24, r24
    18ba:	39 f4       	brne	.+14     	; 0x18ca <decrement_hours+0x30>
		{
			TIMSK|=(1<<OCIE1A);
    18bc:	a9 e5       	ldi	r26, 0x59	; 89
    18be:	b0 e0       	ldi	r27, 0x00	; 0
    18c0:	e9 e5       	ldi	r30, 0x59	; 89
    18c2:	f0 e0       	ldi	r31, 0x00	; 0
    18c4:	80 81       	ld	r24, Z
    18c6:	80 61       	ori	r24, 0x10	; 16
    18c8:	8c 93       	st	X, r24
		}
	}
}
    18ca:	cf 91       	pop	r28
    18cc:	df 91       	pop	r29
    18ce:	08 95       	ret

000018d0 <decrement_minutes>:

/*function used to adjust the Minutes(decrement) */
void decrement_minutes(void)
{
    18d0:	df 93       	push	r29
    18d2:	cf 93       	push	r28
    18d4:	cd b7       	in	r28, 0x3d	; 61
    18d6:	de b7       	in	r29, 0x3e	; 62
	if(min!=0)
    18d8:	80 91 75 00 	lds	r24, 0x0075
    18dc:	88 23       	and	r24, r24
    18de:	89 f0       	breq	.+34     	; 0x1902 <decrement_minutes+0x32>
	{
		min--;
    18e0:	80 91 75 00 	lds	r24, 0x0075
    18e4:	81 50       	subi	r24, 0x01	; 1
    18e6:	80 93 75 00 	sts	0x0075, r24
		if(paused==0)
    18ea:	80 91 73 00 	lds	r24, 0x0073
    18ee:	88 23       	and	r24, r24
    18f0:	f9 f4       	brne	.+62     	; 0x1930 <decrement_minutes+0x60>
		{
			TIMSK|=(1<<OCIE1A);
    18f2:	a9 e5       	ldi	r26, 0x59	; 89
    18f4:	b0 e0       	ldi	r27, 0x00	; 0
    18f6:	e9 e5       	ldi	r30, 0x59	; 89
    18f8:	f0 e0       	ldi	r31, 0x00	; 0
    18fa:	80 81       	ld	r24, Z
    18fc:	80 61       	ori	r24, 0x10	; 16
    18fe:	8c 93       	st	X, r24
    1900:	17 c0       	rjmp	.+46     	; 0x1930 <decrement_minutes+0x60>
		}
	}
	else
	{
		if(hr!=0)
    1902:	80 91 76 00 	lds	r24, 0x0076
    1906:	88 23       	and	r24, r24
    1908:	41 f0       	breq	.+16     	; 0x191a <decrement_minutes+0x4a>
		{
			hr--;
    190a:	80 91 76 00 	lds	r24, 0x0076
    190e:	81 50       	subi	r24, 0x01	; 1
    1910:	80 93 76 00 	sts	0x0076, r24
			min=59;
    1914:	8b e3       	ldi	r24, 0x3B	; 59
    1916:	80 93 75 00 	sts	0x0075, r24
		}
		if(paused==0)
    191a:	80 91 73 00 	lds	r24, 0x0073
    191e:	88 23       	and	r24, r24
    1920:	39 f4       	brne	.+14     	; 0x1930 <decrement_minutes+0x60>
		{
			TIMSK|=(1<<OCIE1A);
    1922:	a9 e5       	ldi	r26, 0x59	; 89
    1924:	b0 e0       	ldi	r27, 0x00	; 0
    1926:	e9 e5       	ldi	r30, 0x59	; 89
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	80 81       	ld	r24, Z
    192c:	80 61       	ori	r24, 0x10	; 16
    192e:	8c 93       	st	X, r24
		}
	}
}
    1930:	cf 91       	pop	r28
    1932:	df 91       	pop	r29
    1934:	08 95       	ret

00001936 <decrement_seconds>:

/*function used to adjust the Seconds(decrement) */
void decrement_seconds(void)
{
    1936:	df 93       	push	r29
    1938:	cf 93       	push	r28
    193a:	cd b7       	in	r28, 0x3d	; 61
    193c:	de b7       	in	r29, 0x3e	; 62
	if(sec!=0)
    193e:	80 91 74 00 	lds	r24, 0x0074
    1942:	88 23       	and	r24, r24
    1944:	89 f0       	breq	.+34     	; 0x1968 <decrement_seconds+0x32>
	{
		sec--;
    1946:	80 91 74 00 	lds	r24, 0x0074
    194a:	81 50       	subi	r24, 0x01	; 1
    194c:	80 93 74 00 	sts	0x0074, r24
		if(paused==0)
    1950:	80 91 73 00 	lds	r24, 0x0073
    1954:	88 23       	and	r24, r24
    1956:	b9 f5       	brne	.+110    	; 0x19c6 <decrement_seconds+0x90>
		{
			TIMSK|=(1<<OCIE1A);
    1958:	a9 e5       	ldi	r26, 0x59	; 89
    195a:	b0 e0       	ldi	r27, 0x00	; 0
    195c:	e9 e5       	ldi	r30, 0x59	; 89
    195e:	f0 e0       	ldi	r31, 0x00	; 0
    1960:	80 81       	ld	r24, Z
    1962:	80 61       	ori	r24, 0x10	; 16
    1964:	8c 93       	st	X, r24
    1966:	2f c0       	rjmp	.+94     	; 0x19c6 <decrement_seconds+0x90>
		}
	}
	else
	{
		if((hr!=0)||(min!=0))
    1968:	80 91 76 00 	lds	r24, 0x0076
    196c:	88 23       	and	r24, r24
    196e:	21 f4       	brne	.+8      	; 0x1978 <decrement_seconds+0x42>
    1970:	80 91 75 00 	lds	r24, 0x0075
    1974:	88 23       	and	r24, r24
    1976:	e1 f0       	breq	.+56     	; 0x19b0 <decrement_seconds+0x7a>
		{
			if(min!=0)
    1978:	80 91 75 00 	lds	r24, 0x0075
    197c:	88 23       	and	r24, r24
    197e:	49 f0       	breq	.+18     	; 0x1992 <decrement_seconds+0x5c>
			{
				min--;
    1980:	80 91 75 00 	lds	r24, 0x0075
    1984:	81 50       	subi	r24, 0x01	; 1
    1986:	80 93 75 00 	sts	0x0075, r24
				sec=59;
    198a:	8b e3       	ldi	r24, 0x3B	; 59
    198c:	80 93 74 00 	sts	0x0074, r24
    1990:	0f c0       	rjmp	.+30     	; 0x19b0 <decrement_seconds+0x7a>
			}
			else if(hr!=0)
    1992:	80 91 76 00 	lds	r24, 0x0076
    1996:	88 23       	and	r24, r24
    1998:	59 f0       	breq	.+22     	; 0x19b0 <decrement_seconds+0x7a>
			{
				hr--;
    199a:	80 91 76 00 	lds	r24, 0x0076
    199e:	81 50       	subi	r24, 0x01	; 1
    19a0:	80 93 76 00 	sts	0x0076, r24
				sec=59;
    19a4:	8b e3       	ldi	r24, 0x3B	; 59
    19a6:	80 93 74 00 	sts	0x0074, r24
				min=59;
    19aa:	8b e3       	ldi	r24, 0x3B	; 59
    19ac:	80 93 75 00 	sts	0x0075, r24
			}
		}
		if(paused==0)
    19b0:	80 91 73 00 	lds	r24, 0x0073
    19b4:	88 23       	and	r24, r24
    19b6:	39 f4       	brne	.+14     	; 0x19c6 <decrement_seconds+0x90>
		{
			TIMSK|=(1<<OCIE1A);
    19b8:	a9 e5       	ldi	r26, 0x59	; 89
    19ba:	b0 e0       	ldi	r27, 0x00	; 0
    19bc:	e9 e5       	ldi	r30, 0x59	; 89
    19be:	f0 e0       	ldi	r31, 0x00	; 0
    19c0:	80 81       	ld	r24, Z
    19c2:	80 61       	ori	r24, 0x10	; 16
    19c4:	8c 93       	st	X, r24
		}
	}
}
    19c6:	cf 91       	pop	r28
    19c8:	df 91       	pop	r29
    19ca:	08 95       	ret

000019cc <toggle_mode>:

/*Switch from mode0 to mode1 and vice versa*/
void toggle_mode()
{
    19cc:	df 93       	push	r29
    19ce:	cf 93       	push	r28
    19d0:	0f 92       	push	r0
    19d2:	cd b7       	in	r28, 0x3d	; 61
    19d4:	de b7       	in	r29, 0x3e	; 62
	mode=!mode;
    19d6:	80 91 72 00 	lds	r24, 0x0072
    19da:	19 82       	std	Y+1, r1	; 0x01
    19dc:	88 23       	and	r24, r24
    19de:	11 f4       	brne	.+4      	; 0x19e4 <toggle_mode+0x18>
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	89 83       	std	Y+1, r24	; 0x01
    19e4:	89 81       	ldd	r24, Y+1	; 0x01
    19e6:	80 93 72 00 	sts	0x0072, r24
}
    19ea:	0f 90       	pop	r0
    19ec:	cf 91       	pop	r28
    19ee:	df 91       	pop	r29
    19f0:	08 95       	ret

000019f2 <__vector_1>:

/*INT0 ISR (reset)*/
ISR(INT0_vect)
{
    19f2:	1f 92       	push	r1
    19f4:	0f 92       	push	r0
    19f6:	0f b6       	in	r0, 0x3f	; 63
    19f8:	0f 92       	push	r0
    19fa:	11 24       	eor	r1, r1
    19fc:	2f 93       	push	r18
    19fe:	3f 93       	push	r19
    1a00:	4f 93       	push	r20
    1a02:	5f 93       	push	r21
    1a04:	6f 93       	push	r22
    1a06:	7f 93       	push	r23
    1a08:	8f 93       	push	r24
    1a0a:	9f 93       	push	r25
    1a0c:	af 93       	push	r26
    1a0e:	bf 93       	push	r27
    1a10:	ef 93       	push	r30
    1a12:	ff 93       	push	r31
    1a14:	df 93       	push	r29
    1a16:	cf 93       	push	r28
    1a18:	cd b7       	in	r28, 0x3d	; 61
    1a1a:	de b7       	in	r29, 0x3e	; 62
    1a1c:	2e 97       	sbiw	r28, 0x0e	; 14
    1a1e:	de bf       	out	0x3e, r29	; 62
    1a20:	cd bf       	out	0x3d, r28	; 61
	/*clear PORTC*/
	PORTC=0;
    1a22:	e5 e3       	ldi	r30, 0x35	; 53
    1a24:	f0 e0       	ldi	r31, 0x00	; 0
    1a26:	10 82       	st	Z, r1
	/*set values to 0*/
	sec=0;
    1a28:	10 92 74 00 	sts	0x0074, r1
	min=0;
    1a2c:	10 92 75 00 	sts	0x0075, r1
	hr=0;
    1a30:	10 92 76 00 	sts	0x0076, r1
	/*set digits on the 7_segment to zero */
	sec_dig1=0 ;
    1a34:	10 92 77 00 	sts	0x0077, r1
	sec_dig2=0 ;
    1a38:	10 92 78 00 	sts	0x0078, r1
	min_dig1=0;
    1a3c:	10 92 79 00 	sts	0x0079, r1
	min_dig2=0;
    1a40:	10 92 7a 00 	sts	0x007A, r1
	hr_dig1=0;
    1a44:	10 92 7b 00 	sts	0x007B, r1
	hr_dig2=0;
    1a48:	10 92 7c 00 	sts	0x007C, r1
    1a4c:	80 e0       	ldi	r24, 0x00	; 0
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	a0 e8       	ldi	r26, 0x80	; 128
    1a52:	bf e3       	ldi	r27, 0x3F	; 63
    1a54:	8b 87       	std	Y+11, r24	; 0x0b
    1a56:	9c 87       	std	Y+12, r25	; 0x0c
    1a58:	ad 87       	std	Y+13, r26	; 0x0d
    1a5a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a5c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a5e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a60:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a62:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a64:	20 e0       	ldi	r18, 0x00	; 0
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	4a e7       	ldi	r20, 0x7A	; 122
    1a6a:	55 e4       	ldi	r21, 0x45	; 69
    1a6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a70:	dc 01       	movw	r26, r24
    1a72:	cb 01       	movw	r24, r22
    1a74:	8f 83       	std	Y+7, r24	; 0x07
    1a76:	98 87       	std	Y+8, r25	; 0x08
    1a78:	a9 87       	std	Y+9, r26	; 0x09
    1a7a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a7c:	6f 81       	ldd	r22, Y+7	; 0x07
    1a7e:	78 85       	ldd	r23, Y+8	; 0x08
    1a80:	89 85       	ldd	r24, Y+9	; 0x09
    1a82:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a84:	20 e0       	ldi	r18, 0x00	; 0
    1a86:	30 e0       	ldi	r19, 0x00	; 0
    1a88:	40 e8       	ldi	r20, 0x80	; 128
    1a8a:	5f e3       	ldi	r21, 0x3F	; 63
    1a8c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a90:	88 23       	and	r24, r24
    1a92:	2c f4       	brge	.+10     	; 0x1a9e <__vector_1+0xac>
		__ticks = 1;
    1a94:	81 e0       	ldi	r24, 0x01	; 1
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	9e 83       	std	Y+6, r25	; 0x06
    1a9a:	8d 83       	std	Y+5, r24	; 0x05
    1a9c:	3f c0       	rjmp	.+126    	; 0x1b1c <__vector_1+0x12a>
	else if (__tmp > 65535)
    1a9e:	6f 81       	ldd	r22, Y+7	; 0x07
    1aa0:	78 85       	ldd	r23, Y+8	; 0x08
    1aa2:	89 85       	ldd	r24, Y+9	; 0x09
    1aa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	3f ef       	ldi	r19, 0xFF	; 255
    1aaa:	4f e7       	ldi	r20, 0x7F	; 127
    1aac:	57 e4       	ldi	r21, 0x47	; 71
    1aae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ab2:	18 16       	cp	r1, r24
    1ab4:	4c f5       	brge	.+82     	; 0x1b08 <__vector_1+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ab6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ab8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aba:	8d 85       	ldd	r24, Y+13	; 0x0d
    1abc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1abe:	20 e0       	ldi	r18, 0x00	; 0
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	40 e2       	ldi	r20, 0x20	; 32
    1ac4:	51 e4       	ldi	r21, 0x41	; 65
    1ac6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	bc 01       	movw	r22, r24
    1ad0:	cd 01       	movw	r24, r26
    1ad2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ad6:	dc 01       	movw	r26, r24
    1ad8:	cb 01       	movw	r24, r22
    1ada:	9e 83       	std	Y+6, r25	; 0x06
    1adc:	8d 83       	std	Y+5, r24	; 0x05
    1ade:	0f c0       	rjmp	.+30     	; 0x1afe <__vector_1+0x10c>
    1ae0:	80 e9       	ldi	r24, 0x90	; 144
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	9c 83       	std	Y+4, r25	; 0x04
    1ae6:	8b 83       	std	Y+3, r24	; 0x03
    1ae8:	8b 81       	ldd	r24, Y+3	; 0x03
    1aea:	9c 81       	ldd	r25, Y+4	; 0x04
    1aec:	01 97       	sbiw	r24, 0x01	; 1
    1aee:	f1 f7       	brne	.-4      	; 0x1aec <__vector_1+0xfa>
    1af0:	9c 83       	std	Y+4, r25	; 0x04
    1af2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1af4:	8d 81       	ldd	r24, Y+5	; 0x05
    1af6:	9e 81       	ldd	r25, Y+6	; 0x06
    1af8:	01 97       	sbiw	r24, 0x01	; 1
    1afa:	9e 83       	std	Y+6, r25	; 0x06
    1afc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1afe:	8d 81       	ldd	r24, Y+5	; 0x05
    1b00:	9e 81       	ldd	r25, Y+6	; 0x06
    1b02:	00 97       	sbiw	r24, 0x00	; 0
    1b04:	69 f7       	brne	.-38     	; 0x1ae0 <__vector_1+0xee>
    1b06:	14 c0       	rjmp	.+40     	; 0x1b30 <__vector_1+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b08:	6f 81       	ldd	r22, Y+7	; 0x07
    1b0a:	78 85       	ldd	r23, Y+8	; 0x08
    1b0c:	89 85       	ldd	r24, Y+9	; 0x09
    1b0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	9e 83       	std	Y+6, r25	; 0x06
    1b1a:	8d 83       	std	Y+5, r24	; 0x05
    1b1c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b1e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b20:	9a 83       	std	Y+2, r25	; 0x02
    1b22:	89 83       	std	Y+1, r24	; 0x01
    1b24:	89 81       	ldd	r24, Y+1	; 0x01
    1b26:	9a 81       	ldd	r25, Y+2	; 0x02
    1b28:	01 97       	sbiw	r24, 0x01	; 1
    1b2a:	f1 f7       	brne	.-4      	; 0x1b28 <__vector_1+0x136>
    1b2c:	9a 83       	std	Y+2, r25	; 0x02
    1b2e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    1b30:	2e 96       	adiw	r28, 0x0e	; 14
    1b32:	de bf       	out	0x3e, r29	; 62
    1b34:	cd bf       	out	0x3d, r28	; 61
    1b36:	cf 91       	pop	r28
    1b38:	df 91       	pop	r29
    1b3a:	ff 91       	pop	r31
    1b3c:	ef 91       	pop	r30
    1b3e:	bf 91       	pop	r27
    1b40:	af 91       	pop	r26
    1b42:	9f 91       	pop	r25
    1b44:	8f 91       	pop	r24
    1b46:	7f 91       	pop	r23
    1b48:	6f 91       	pop	r22
    1b4a:	5f 91       	pop	r21
    1b4c:	4f 91       	pop	r20
    1b4e:	3f 91       	pop	r19
    1b50:	2f 91       	pop	r18
    1b52:	0f 90       	pop	r0
    1b54:	0f be       	out	0x3f, r0	; 63
    1b56:	0f 90       	pop	r0
    1b58:	1f 90       	pop	r1
    1b5a:	18 95       	reti

00001b5c <__vector_2>:

/*INT1 ISR (pause)*/
ISR(INT1_vect)
{
    1b5c:	1f 92       	push	r1
    1b5e:	0f 92       	push	r0
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	0f 92       	push	r0
    1b64:	11 24       	eor	r1, r1
    1b66:	8f 93       	push	r24
    1b68:	df 93       	push	r29
    1b6a:	cf 93       	push	r28
    1b6c:	cd b7       	in	r28, 0x3d	; 61
    1b6e:	de b7       	in	r29, 0x3e	; 62
	paused=1;/*set pause flag to 1*/
    1b70:	81 e0       	ldi	r24, 0x01	; 1
    1b72:	80 93 73 00 	sts	0x0073, r24
}
    1b76:	cf 91       	pop	r28
    1b78:	df 91       	pop	r29
    1b7a:	8f 91       	pop	r24
    1b7c:	0f 90       	pop	r0
    1b7e:	0f be       	out	0x3f, r0	; 63
    1b80:	0f 90       	pop	r0
    1b82:	1f 90       	pop	r1
    1b84:	18 95       	reti

00001b86 <__vector_3>:

/*INT2 ISR (resume)*/
ISR(INT2_vect)
{
    1b86:	1f 92       	push	r1
    1b88:	0f 92       	push	r0
    1b8a:	0f b6       	in	r0, 0x3f	; 63
    1b8c:	0f 92       	push	r0
    1b8e:	11 24       	eor	r1, r1
    1b90:	df 93       	push	r29
    1b92:	cf 93       	push	r28
    1b94:	cd b7       	in	r28, 0x3d	; 61
    1b96:	de b7       	in	r29, 0x3e	; 62
	paused=0;/*set pause flag to zero in order to resume */
    1b98:	10 92 73 00 	sts	0x0073, r1
}
    1b9c:	cf 91       	pop	r28
    1b9e:	df 91       	pop	r29
    1ba0:	0f 90       	pop	r0
    1ba2:	0f be       	out	0x3f, r0	; 63
    1ba4:	0f 90       	pop	r0
    1ba6:	1f 90       	pop	r1
    1ba8:	18 95       	reti

00001baa <__vector_7>:

/*Timer ISR (sends interrupt every second with increment or decrement)*/
ISR(TIMER1_COMPA_vect)
{
    1baa:	1f 92       	push	r1
    1bac:	0f 92       	push	r0
    1bae:	0f b6       	in	r0, 0x3f	; 63
    1bb0:	0f 92       	push	r0
    1bb2:	11 24       	eor	r1, r1
    1bb4:	2f 93       	push	r18
    1bb6:	3f 93       	push	r19
    1bb8:	4f 93       	push	r20
    1bba:	5f 93       	push	r21
    1bbc:	6f 93       	push	r22
    1bbe:	7f 93       	push	r23
    1bc0:	8f 93       	push	r24
    1bc2:	9f 93       	push	r25
    1bc4:	af 93       	push	r26
    1bc6:	bf 93       	push	r27
    1bc8:	ef 93       	push	r30
    1bca:	ff 93       	push	r31
    1bcc:	df 93       	push	r29
    1bce:	cf 93       	push	r28
    1bd0:	cd b7       	in	r28, 0x3d	; 61
    1bd2:	de b7       	in	r29, 0x3e	; 62
	if(paused==0)/*make sure the pause flag==0*/
    1bd4:	80 91 73 00 	lds	r24, 0x0073
    1bd8:	88 23       	and	r24, r24
    1bda:	81 f5       	brne	.+96     	; 0x1c3c <__vector_7+0x92>
	{
		if(mode==0)/* **default mode** increment stop watch*/
    1bdc:	80 91 72 00 	lds	r24, 0x0072
    1be0:	88 23       	and	r24, r24
    1be2:	c1 f4       	brne	.+48     	; 0x1c14 <__vector_7+0x6a>
		{
			increment_seg();/*increment time (defaut mode)*/
    1be4:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <increment_seg>
			PORTD&=~(1<<PD0);/*turns off the alarm if open */
    1be8:	a2 e3       	ldi	r26, 0x32	; 50
    1bea:	b0 e0       	ldi	r27, 0x00	; 0
    1bec:	e2 e3       	ldi	r30, 0x32	; 50
    1bee:	f0 e0       	ldi	r31, 0x00	; 0
    1bf0:	80 81       	ld	r24, Z
    1bf2:	8e 7f       	andi	r24, 0xFE	; 254
    1bf4:	8c 93       	st	X, r24
			PORTD|=(1<<PD4);/*turn on the red LED*/
    1bf6:	a2 e3       	ldi	r26, 0x32	; 50
    1bf8:	b0 e0       	ldi	r27, 0x00	; 0
    1bfa:	e2 e3       	ldi	r30, 0x32	; 50
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	80 81       	ld	r24, Z
    1c00:	80 61       	ori	r24, 0x10	; 16
    1c02:	8c 93       	st	X, r24
			PORTD&=~(1<<PD5);/*turn off the yellow LED*/
    1c04:	a2 e3       	ldi	r26, 0x32	; 50
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	e2 e3       	ldi	r30, 0x32	; 50
    1c0a:	f0 e0       	ldi	r31, 0x00	; 0
    1c0c:	80 81       	ld	r24, Z
    1c0e:	8f 7d       	andi	r24, 0xDF	; 223
    1c10:	8c 93       	st	X, r24
    1c12:	14 c0       	rjmp	.+40     	; 0x1c3c <__vector_7+0x92>
		}
		else if(mode==1)/*count down mode*/
    1c14:	80 91 72 00 	lds	r24, 0x0072
    1c18:	81 30       	cpi	r24, 0x01	; 1
    1c1a:	81 f4       	brne	.+32     	; 0x1c3c <__vector_7+0x92>
		{
			decrement_seg();/*count down mode*/
    1c1c:	0e 94 75 0a 	call	0x14ea	; 0x14ea <decrement_seg>
			PORTD|=(1<<PD5);/*turn on the yellow LED*/
    1c20:	a2 e3       	ldi	r26, 0x32	; 50
    1c22:	b0 e0       	ldi	r27, 0x00	; 0
    1c24:	e2 e3       	ldi	r30, 0x32	; 50
    1c26:	f0 e0       	ldi	r31, 0x00	; 0
    1c28:	80 81       	ld	r24, Z
    1c2a:	80 62       	ori	r24, 0x20	; 32
    1c2c:	8c 93       	st	X, r24
			PORTD&=~(1<<PD4);/*turn off the red LED*/
    1c2e:	a2 e3       	ldi	r26, 0x32	; 50
    1c30:	b0 e0       	ldi	r27, 0x00	; 0
    1c32:	e2 e3       	ldi	r30, 0x32	; 50
    1c34:	f0 e0       	ldi	r31, 0x00	; 0
    1c36:	80 81       	ld	r24, Z
    1c38:	8f 7e       	andi	r24, 0xEF	; 239
    1c3a:	8c 93       	st	X, r24
		}
	}
}
    1c3c:	cf 91       	pop	r28
    1c3e:	df 91       	pop	r29
    1c40:	ff 91       	pop	r31
    1c42:	ef 91       	pop	r30
    1c44:	bf 91       	pop	r27
    1c46:	af 91       	pop	r26
    1c48:	9f 91       	pop	r25
    1c4a:	8f 91       	pop	r24
    1c4c:	7f 91       	pop	r23
    1c4e:	6f 91       	pop	r22
    1c50:	5f 91       	pop	r21
    1c52:	4f 91       	pop	r20
    1c54:	3f 91       	pop	r19
    1c56:	2f 91       	pop	r18
    1c58:	0f 90       	pop	r0
    1c5a:	0f be       	out	0x3f, r0	; 63
    1c5c:	0f 90       	pop	r0
    1c5e:	1f 90       	pop	r1
    1c60:	18 95       	reti

00001c62 <main>:

int main(void)
{
    1c62:	0f 93       	push	r16
    1c64:	1f 93       	push	r17
    1c66:	df 93       	push	r29
    1c68:	cf 93       	push	r28
    1c6a:	cd b7       	in	r28, 0x3d	; 61
    1c6c:	de b7       	in	r29, 0x3e	; 62
    1c6e:	c2 56       	subi	r28, 0x62	; 98
    1c70:	d0 40       	sbci	r29, 0x00	; 0
    1c72:	0f b6       	in	r0, 0x3f	; 63
    1c74:	f8 94       	cli
    1c76:	de bf       	out	0x3e, r29	; 62
    1c78:	0f be       	out	0x3f, r0	; 63
    1c7a:	cd bf       	out	0x3d, r28	; 61
	DDRD |=(1<<PD4)|(1<<PD5)|(1<<PD0);
    1c7c:	a1 e3       	ldi	r26, 0x31	; 49
    1c7e:	b0 e0       	ldi	r27, 0x00	; 0
    1c80:	e1 e3       	ldi	r30, 0x31	; 49
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	81 63       	ori	r24, 0x31	; 49
    1c88:	8c 93       	st	X, r24
	PORTD&=~(1<<PD4)&~(1<<PD5)&~(1<<PD0);
    1c8a:	a2 e3       	ldi	r26, 0x32	; 50
    1c8c:	b0 e0       	ldi	r27, 0x00	; 0
    1c8e:	e2 e3       	ldi	r30, 0x32	; 50
    1c90:	f0 e0       	ldi	r31, 0x00	; 0
    1c92:	80 81       	ld	r24, Z
    1c94:	8e 7c       	andi	r24, 0xCE	; 206
    1c96:	8c 93       	st	X, r24
	DDRC  |= 0x0F;
    1c98:	a4 e3       	ldi	r26, 0x34	; 52
    1c9a:	b0 e0       	ldi	r27, 0x00	; 0
    1c9c:	e4 e3       	ldi	r30, 0x34	; 52
    1c9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ca0:	80 81       	ld	r24, Z
    1ca2:	8f 60       	ori	r24, 0x0F	; 15
    1ca4:	8c 93       	st	X, r24
	PORTC &= 0xF0;
    1ca6:	a5 e3       	ldi	r26, 0x35	; 53
    1ca8:	b0 e0       	ldi	r27, 0x00	; 0
    1caa:	e5 e3       	ldi	r30, 0x35	; 53
    1cac:	f0 e0       	ldi	r31, 0x00	; 0
    1cae:	80 81       	ld	r24, Z
    1cb0:	80 7f       	andi	r24, 0xF0	; 240
    1cb2:	8c 93       	st	X, r24
	DDRA  |=(1<<PA0)|(1<<PA1)|(1<<PA2)|(1<<PA3)|(1<<PA4)|(1<<PA5);
    1cb4:	aa e3       	ldi	r26, 0x3A	; 58
    1cb6:	b0 e0       	ldi	r27, 0x00	; 0
    1cb8:	ea e3       	ldi	r30, 0x3A	; 58
    1cba:	f0 e0       	ldi	r31, 0x00	; 0
    1cbc:	80 81       	ld	r24, Z
    1cbe:	8f 63       	ori	r24, 0x3F	; 63
    1cc0:	8c 93       	st	X, r24
	PORTA |=(1<<PA0)|(1<<PA1)|(1<<PA2)|(1<<PA3)|(1<<PA4)|(1<<PA5);
    1cc2:	ab e3       	ldi	r26, 0x3B	; 59
    1cc4:	b0 e0       	ldi	r27, 0x00	; 0
    1cc6:	eb e3       	ldi	r30, 0x3B	; 59
    1cc8:	f0 e0       	ldi	r31, 0x00	; 0
    1cca:	80 81       	ld	r24, Z
    1ccc:	8f 63       	ori	r24, 0x3F	; 63
    1cce:	8c 93       	st	X, r24
	DDRB=0x00;
    1cd0:	e7 e3       	ldi	r30, 0x37	; 55
    1cd2:	f0 e0       	ldi	r31, 0x00	; 0
    1cd4:	10 82       	st	Z, r1
	PORTB=0xFF;
    1cd6:	e8 e3       	ldi	r30, 0x38	; 56
    1cd8:	f0 e0       	ldi	r31, 0x00	; 0
    1cda:	8f ef       	ldi	r24, 0xFF	; 255
    1cdc:	80 83       	st	Z, r24
	SREG  |= (1<<7);
    1cde:	af e5       	ldi	r26, 0x5F	; 95
    1ce0:	b0 e0       	ldi	r27, 0x00	; 0
    1ce2:	ef e5       	ldi	r30, 0x5F	; 95
    1ce4:	f0 e0       	ldi	r31, 0x00	; 0
    1ce6:	80 81       	ld	r24, Z
    1ce8:	80 68       	ori	r24, 0x80	; 128
    1cea:	8c 93       	st	X, r24
	INT0_init();
    1cec:	0e 94 c3 05 	call	0xb86	; 0xb86 <INT0_init>
	INT1_init();
    1cf0:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <INT1_init>
	INT2_init();
    1cf4:	0e 94 17 06 	call	0xc2e	; 0xc2e <INT2_init>
	Timer1_COMPA_init();
    1cf8:	0e 94 a3 05 	call	0xb46	; 0xb46 <Timer1_COMPA_init>
	while(1)
	{
		display_7_segment();
    1cfc:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>

		/*ADJUST HOURS*/
		if(!(PINB & (1<<PB1)))//increment
    1d00:	e6 e3       	ldi	r30, 0x36	; 54
    1d02:	f0 e0       	ldi	r31, 0x00	; 0
    1d04:	80 81       	ld	r24, Z
    1d06:	88 2f       	mov	r24, r24
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	82 70       	andi	r24, 0x02	; 2
    1d0c:	90 70       	andi	r25, 0x00	; 0
    1d0e:	00 97       	sbiw	r24, 0x00	; 0
    1d10:	09 f0       	breq	.+2      	; 0x1d14 <main+0xb2>
    1d12:	29 c1       	rjmp	.+594    	; 0x1f66 <main+0x304>
    1d14:	fe 01       	movw	r30, r28
    1d16:	e1 5a       	subi	r30, 0xA1	; 161
    1d18:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	a0 ef       	ldi	r26, 0xF0	; 240
    1d20:	b1 e4       	ldi	r27, 0x41	; 65
    1d22:	80 83       	st	Z, r24
    1d24:	91 83       	std	Z+1, r25	; 0x01
    1d26:	a2 83       	std	Z+2, r26	; 0x02
    1d28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d2a:	8e 01       	movw	r16, r28
    1d2c:	05 5a       	subi	r16, 0xA5	; 165
    1d2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d30:	fe 01       	movw	r30, r28
    1d32:	e1 5a       	subi	r30, 0xA1	; 161
    1d34:	ff 4f       	sbci	r31, 0xFF	; 255
    1d36:	60 81       	ld	r22, Z
    1d38:	71 81       	ldd	r23, Z+1	; 0x01
    1d3a:	82 81       	ldd	r24, Z+2	; 0x02
    1d3c:	93 81       	ldd	r25, Z+3	; 0x03
    1d3e:	20 e0       	ldi	r18, 0x00	; 0
    1d40:	30 e0       	ldi	r19, 0x00	; 0
    1d42:	4a e7       	ldi	r20, 0x7A	; 122
    1d44:	55 e4       	ldi	r21, 0x45	; 69
    1d46:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d4a:	dc 01       	movw	r26, r24
    1d4c:	cb 01       	movw	r24, r22
    1d4e:	f8 01       	movw	r30, r16
    1d50:	80 83       	st	Z, r24
    1d52:	91 83       	std	Z+1, r25	; 0x01
    1d54:	a2 83       	std	Z+2, r26	; 0x02
    1d56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d58:	fe 01       	movw	r30, r28
    1d5a:	e5 5a       	subi	r30, 0xA5	; 165
    1d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5e:	60 81       	ld	r22, Z
    1d60:	71 81       	ldd	r23, Z+1	; 0x01
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	20 e0       	ldi	r18, 0x00	; 0
    1d68:	30 e0       	ldi	r19, 0x00	; 0
    1d6a:	40 e8       	ldi	r20, 0x80	; 128
    1d6c:	5f e3       	ldi	r21, 0x3F	; 63
    1d6e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d72:	88 23       	and	r24, r24
    1d74:	44 f4       	brge	.+16     	; 0x1d86 <main+0x124>
		__ticks = 1;
    1d76:	fe 01       	movw	r30, r28
    1d78:	e7 5a       	subi	r30, 0xA7	; 167
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	81 e0       	ldi	r24, 0x01	; 1
    1d7e:	90 e0       	ldi	r25, 0x00	; 0
    1d80:	91 83       	std	Z+1, r25	; 0x01
    1d82:	80 83       	st	Z, r24
    1d84:	64 c0       	rjmp	.+200    	; 0x1e4e <main+0x1ec>
	else if (__tmp > 65535)
    1d86:	fe 01       	movw	r30, r28
    1d88:	e5 5a       	subi	r30, 0xA5	; 165
    1d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8c:	60 81       	ld	r22, Z
    1d8e:	71 81       	ldd	r23, Z+1	; 0x01
    1d90:	82 81       	ldd	r24, Z+2	; 0x02
    1d92:	93 81       	ldd	r25, Z+3	; 0x03
    1d94:	20 e0       	ldi	r18, 0x00	; 0
    1d96:	3f ef       	ldi	r19, 0xFF	; 255
    1d98:	4f e7       	ldi	r20, 0x7F	; 127
    1d9a:	57 e4       	ldi	r21, 0x47	; 71
    1d9c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1da0:	18 16       	cp	r1, r24
    1da2:	0c f0       	brlt	.+2      	; 0x1da6 <main+0x144>
    1da4:	43 c0       	rjmp	.+134    	; 0x1e2c <main+0x1ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1da6:	fe 01       	movw	r30, r28
    1da8:	e1 5a       	subi	r30, 0xA1	; 161
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	60 81       	ld	r22, Z
    1dae:	71 81       	ldd	r23, Z+1	; 0x01
    1db0:	82 81       	ldd	r24, Z+2	; 0x02
    1db2:	93 81       	ldd	r25, Z+3	; 0x03
    1db4:	20 e0       	ldi	r18, 0x00	; 0
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	40 e2       	ldi	r20, 0x20	; 32
    1dba:	51 e4       	ldi	r21, 0x41	; 65
    1dbc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	8e 01       	movw	r16, r28
    1dc6:	07 5a       	subi	r16, 0xA7	; 167
    1dc8:	1f 4f       	sbci	r17, 0xFF	; 255
    1dca:	bc 01       	movw	r22, r24
    1dcc:	cd 01       	movw	r24, r26
    1dce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dd2:	dc 01       	movw	r26, r24
    1dd4:	cb 01       	movw	r24, r22
    1dd6:	f8 01       	movw	r30, r16
    1dd8:	91 83       	std	Z+1, r25	; 0x01
    1dda:	80 83       	st	Z, r24
    1ddc:	1f c0       	rjmp	.+62     	; 0x1e1c <main+0x1ba>
    1dde:	fe 01       	movw	r30, r28
    1de0:	e9 5a       	subi	r30, 0xA9	; 169
    1de2:	ff 4f       	sbci	r31, 0xFF	; 255
    1de4:	80 e9       	ldi	r24, 0x90	; 144
    1de6:	91 e0       	ldi	r25, 0x01	; 1
    1de8:	91 83       	std	Z+1, r25	; 0x01
    1dea:	80 83       	st	Z, r24
    1dec:	fe 01       	movw	r30, r28
    1dee:	e9 5a       	subi	r30, 0xA9	; 169
    1df0:	ff 4f       	sbci	r31, 0xFF	; 255
    1df2:	80 81       	ld	r24, Z
    1df4:	91 81       	ldd	r25, Z+1	; 0x01
    1df6:	01 97       	sbiw	r24, 0x01	; 1
    1df8:	f1 f7       	brne	.-4      	; 0x1df6 <main+0x194>
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	e9 5a       	subi	r30, 0xA9	; 169
    1dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1e00:	91 83       	std	Z+1, r25	; 0x01
    1e02:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e04:	de 01       	movw	r26, r28
    1e06:	a7 5a       	subi	r26, 0xA7	; 167
    1e08:	bf 4f       	sbci	r27, 0xFF	; 255
    1e0a:	fe 01       	movw	r30, r28
    1e0c:	e7 5a       	subi	r30, 0xA7	; 167
    1e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e10:	80 81       	ld	r24, Z
    1e12:	91 81       	ldd	r25, Z+1	; 0x01
    1e14:	01 97       	sbiw	r24, 0x01	; 1
    1e16:	11 96       	adiw	r26, 0x01	; 1
    1e18:	9c 93       	st	X, r25
    1e1a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	e7 5a       	subi	r30, 0xA7	; 167
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	80 81       	ld	r24, Z
    1e24:	91 81       	ldd	r25, Z+1	; 0x01
    1e26:	00 97       	sbiw	r24, 0x00	; 0
    1e28:	d1 f6       	brne	.-76     	; 0x1dde <main+0x17c>
    1e2a:	28 c0       	rjmp	.+80     	; 0x1e7c <main+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e2c:	8e 01       	movw	r16, r28
    1e2e:	07 5a       	subi	r16, 0xA7	; 167
    1e30:	1f 4f       	sbci	r17, 0xFF	; 255
    1e32:	fe 01       	movw	r30, r28
    1e34:	e5 5a       	subi	r30, 0xA5	; 165
    1e36:	ff 4f       	sbci	r31, 0xFF	; 255
    1e38:	60 81       	ld	r22, Z
    1e3a:	71 81       	ldd	r23, Z+1	; 0x01
    1e3c:	82 81       	ldd	r24, Z+2	; 0x02
    1e3e:	93 81       	ldd	r25, Z+3	; 0x03
    1e40:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e44:	dc 01       	movw	r26, r24
    1e46:	cb 01       	movw	r24, r22
    1e48:	f8 01       	movw	r30, r16
    1e4a:	91 83       	std	Z+1, r25	; 0x01
    1e4c:	80 83       	st	Z, r24
    1e4e:	de 01       	movw	r26, r28
    1e50:	ab 5a       	subi	r26, 0xAB	; 171
    1e52:	bf 4f       	sbci	r27, 0xFF	; 255
    1e54:	fe 01       	movw	r30, r28
    1e56:	e7 5a       	subi	r30, 0xA7	; 167
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	80 81       	ld	r24, Z
    1e5c:	91 81       	ldd	r25, Z+1	; 0x01
    1e5e:	11 96       	adiw	r26, 0x01	; 1
    1e60:	9c 93       	st	X, r25
    1e62:	8e 93       	st	-X, r24
    1e64:	fe 01       	movw	r30, r28
    1e66:	eb 5a       	subi	r30, 0xAB	; 171
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	80 81       	ld	r24, Z
    1e6c:	91 81       	ldd	r25, Z+1	; 0x01
    1e6e:	01 97       	sbiw	r24, 0x01	; 1
    1e70:	f1 f7       	brne	.-4      	; 0x1e6e <main+0x20c>
    1e72:	fe 01       	movw	r30, r28
    1e74:	eb 5a       	subi	r30, 0xAB	; 171
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	91 83       	std	Z+1, r25	; 0x01
    1e7a:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB1)))
    1e7c:	e6 e3       	ldi	r30, 0x36	; 54
    1e7e:	f0 e0       	ldi	r31, 0x00	; 0
    1e80:	80 81       	ld	r24, Z
    1e82:	88 2f       	mov	r24, r24
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	82 70       	andi	r24, 0x02	; 2
    1e88:	90 70       	andi	r25, 0x00	; 0
    1e8a:	00 97       	sbiw	r24, 0x00	; 0
    1e8c:	09 f0       	breq	.+2      	; 0x1e90 <main+0x22e>
    1e8e:	62 c0       	rjmp	.+196    	; 0x1f54 <main+0x2f2>
			{
				increment_hours();
    1e90:	0e 94 36 0b 	call	0x166c	; 0x166c <increment_hours>
				sec_dig2 = sec/10;
    1e94:	80 91 74 00 	lds	r24, 0x0074
    1e98:	9a e0       	ldi	r25, 0x0A	; 10
    1e9a:	69 2f       	mov	r22, r25
    1e9c:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    1ea0:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    1ea4:	80 91 78 00 	lds	r24, 0x0078
    1ea8:	88 2f       	mov	r24, r24
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	9c 01       	movw	r18, r24
    1eae:	22 0f       	add	r18, r18
    1eb0:	33 1f       	adc	r19, r19
    1eb2:	c9 01       	movw	r24, r18
    1eb4:	88 0f       	add	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	88 0f       	add	r24, r24
    1eba:	99 1f       	adc	r25, r25
    1ebc:	82 0f       	add	r24, r18
    1ebe:	93 1f       	adc	r25, r19
    1ec0:	90 95       	com	r25
    1ec2:	81 95       	neg	r24
    1ec4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec6:	98 2f       	mov	r25, r24
    1ec8:	80 91 74 00 	lds	r24, 0x0074
    1ecc:	89 0f       	add	r24, r25
    1ece:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    1ed2:	80 91 75 00 	lds	r24, 0x0075
    1ed6:	9a e0       	ldi	r25, 0x0A	; 10
    1ed8:	69 2f       	mov	r22, r25
    1eda:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    1ede:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    1ee2:	80 91 7a 00 	lds	r24, 0x007A
    1ee6:	88 2f       	mov	r24, r24
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	9c 01       	movw	r18, r24
    1eec:	22 0f       	add	r18, r18
    1eee:	33 1f       	adc	r19, r19
    1ef0:	c9 01       	movw	r24, r18
    1ef2:	88 0f       	add	r24, r24
    1ef4:	99 1f       	adc	r25, r25
    1ef6:	88 0f       	add	r24, r24
    1ef8:	99 1f       	adc	r25, r25
    1efa:	82 0f       	add	r24, r18
    1efc:	93 1f       	adc	r25, r19
    1efe:	90 95       	com	r25
    1f00:	81 95       	neg	r24
    1f02:	9f 4f       	sbci	r25, 0xFF	; 255
    1f04:	98 2f       	mov	r25, r24
    1f06:	80 91 75 00 	lds	r24, 0x0075
    1f0a:	89 0f       	add	r24, r25
    1f0c:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    1f10:	80 91 76 00 	lds	r24, 0x0076
    1f14:	9a e0       	ldi	r25, 0x0A	; 10
    1f16:	69 2f       	mov	r22, r25
    1f18:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    1f1c:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    1f20:	80 91 7c 00 	lds	r24, 0x007C
    1f24:	88 2f       	mov	r24, r24
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	9c 01       	movw	r18, r24
    1f2a:	22 0f       	add	r18, r18
    1f2c:	33 1f       	adc	r19, r19
    1f2e:	c9 01       	movw	r24, r18
    1f30:	88 0f       	add	r24, r24
    1f32:	99 1f       	adc	r25, r25
    1f34:	88 0f       	add	r24, r24
    1f36:	99 1f       	adc	r25, r25
    1f38:	82 0f       	add	r24, r18
    1f3a:	93 1f       	adc	r25, r19
    1f3c:	90 95       	com	r25
    1f3e:	81 95       	neg	r24
    1f40:	9f 4f       	sbci	r25, 0xFF	; 255
    1f42:	98 2f       	mov	r25, r24
    1f44:	80 91 76 00 	lds	r24, 0x0076
    1f48:	89 0f       	add	r24, r25
    1f4a:	80 93 7b 00 	sts	0x007B, r24
    1f4e:	02 c0       	rjmp	.+4      	; 0x1f54 <main+0x2f2>
			}
			while( !(PINB & (1<<PB1)) )
			{
				display_7_segment();
    1f50:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB1)) )
    1f54:	e6 e3       	ldi	r30, 0x36	; 54
    1f56:	f0 e0       	ldi	r31, 0x00	; 0
    1f58:	80 81       	ld	r24, Z
    1f5a:	88 2f       	mov	r24, r24
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	82 70       	andi	r24, 0x02	; 2
    1f60:	90 70       	andi	r25, 0x00	; 0
    1f62:	00 97       	sbiw	r24, 0x00	; 0
    1f64:	a9 f3       	breq	.-22     	; 0x1f50 <main+0x2ee>
			{
				display_7_segment();
			}
		}

		if(!(PINB & (1<<PB0)))//decrement
    1f66:	e6 e3       	ldi	r30, 0x36	; 54
    1f68:	f0 e0       	ldi	r31, 0x00	; 0
    1f6a:	80 81       	ld	r24, Z
    1f6c:	88 2f       	mov	r24, r24
    1f6e:	90 e0       	ldi	r25, 0x00	; 0
    1f70:	81 70       	andi	r24, 0x01	; 1
    1f72:	90 70       	andi	r25, 0x00	; 0
    1f74:	00 97       	sbiw	r24, 0x00	; 0
    1f76:	09 f0       	breq	.+2      	; 0x1f7a <main+0x318>
    1f78:	29 c1       	rjmp	.+594    	; 0x21cc <main+0x56a>
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	ef 5a       	subi	r30, 0xAF	; 175
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	a0 ef       	ldi	r26, 0xF0	; 240
    1f86:	b1 e4       	ldi	r27, 0x41	; 65
    1f88:	80 83       	st	Z, r24
    1f8a:	91 83       	std	Z+1, r25	; 0x01
    1f8c:	a2 83       	std	Z+2, r26	; 0x02
    1f8e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f90:	8e 01       	movw	r16, r28
    1f92:	03 5b       	subi	r16, 0xB3	; 179
    1f94:	1f 4f       	sbci	r17, 0xFF	; 255
    1f96:	fe 01       	movw	r30, r28
    1f98:	ef 5a       	subi	r30, 0xAF	; 175
    1f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9c:	60 81       	ld	r22, Z
    1f9e:	71 81       	ldd	r23, Z+1	; 0x01
    1fa0:	82 81       	ldd	r24, Z+2	; 0x02
    1fa2:	93 81       	ldd	r25, Z+3	; 0x03
    1fa4:	20 e0       	ldi	r18, 0x00	; 0
    1fa6:	30 e0       	ldi	r19, 0x00	; 0
    1fa8:	4a e7       	ldi	r20, 0x7A	; 122
    1faa:	55 e4       	ldi	r21, 0x45	; 69
    1fac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	cb 01       	movw	r24, r22
    1fb4:	f8 01       	movw	r30, r16
    1fb6:	80 83       	st	Z, r24
    1fb8:	91 83       	std	Z+1, r25	; 0x01
    1fba:	a2 83       	std	Z+2, r26	; 0x02
    1fbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fbe:	fe 01       	movw	r30, r28
    1fc0:	e3 5b       	subi	r30, 0xB3	; 179
    1fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc4:	60 81       	ld	r22, Z
    1fc6:	71 81       	ldd	r23, Z+1	; 0x01
    1fc8:	82 81       	ldd	r24, Z+2	; 0x02
    1fca:	93 81       	ldd	r25, Z+3	; 0x03
    1fcc:	20 e0       	ldi	r18, 0x00	; 0
    1fce:	30 e0       	ldi	r19, 0x00	; 0
    1fd0:	40 e8       	ldi	r20, 0x80	; 128
    1fd2:	5f e3       	ldi	r21, 0x3F	; 63
    1fd4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1fd8:	88 23       	and	r24, r24
    1fda:	44 f4       	brge	.+16     	; 0x1fec <main+0x38a>
		__ticks = 1;
    1fdc:	fe 01       	movw	r30, r28
    1fde:	e5 5b       	subi	r30, 0xB5	; 181
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	81 e0       	ldi	r24, 0x01	; 1
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
    1fea:	64 c0       	rjmp	.+200    	; 0x20b4 <main+0x452>
	else if (__tmp > 65535)
    1fec:	fe 01       	movw	r30, r28
    1fee:	e3 5b       	subi	r30, 0xB3	; 179
    1ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff2:	60 81       	ld	r22, Z
    1ff4:	71 81       	ldd	r23, Z+1	; 0x01
    1ff6:	82 81       	ldd	r24, Z+2	; 0x02
    1ff8:	93 81       	ldd	r25, Z+3	; 0x03
    1ffa:	20 e0       	ldi	r18, 0x00	; 0
    1ffc:	3f ef       	ldi	r19, 0xFF	; 255
    1ffe:	4f e7       	ldi	r20, 0x7F	; 127
    2000:	57 e4       	ldi	r21, 0x47	; 71
    2002:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2006:	18 16       	cp	r1, r24
    2008:	0c f0       	brlt	.+2      	; 0x200c <main+0x3aa>
    200a:	43 c0       	rjmp	.+134    	; 0x2092 <main+0x430>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    200c:	fe 01       	movw	r30, r28
    200e:	ef 5a       	subi	r30, 0xAF	; 175
    2010:	ff 4f       	sbci	r31, 0xFF	; 255
    2012:	60 81       	ld	r22, Z
    2014:	71 81       	ldd	r23, Z+1	; 0x01
    2016:	82 81       	ldd	r24, Z+2	; 0x02
    2018:	93 81       	ldd	r25, Z+3	; 0x03
    201a:	20 e0       	ldi	r18, 0x00	; 0
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	40 e2       	ldi	r20, 0x20	; 32
    2020:	51 e4       	ldi	r21, 0x41	; 65
    2022:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2026:	dc 01       	movw	r26, r24
    2028:	cb 01       	movw	r24, r22
    202a:	8e 01       	movw	r16, r28
    202c:	05 5b       	subi	r16, 0xB5	; 181
    202e:	1f 4f       	sbci	r17, 0xFF	; 255
    2030:	bc 01       	movw	r22, r24
    2032:	cd 01       	movw	r24, r26
    2034:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2038:	dc 01       	movw	r26, r24
    203a:	cb 01       	movw	r24, r22
    203c:	f8 01       	movw	r30, r16
    203e:	91 83       	std	Z+1, r25	; 0x01
    2040:	80 83       	st	Z, r24
    2042:	1f c0       	rjmp	.+62     	; 0x2082 <main+0x420>
    2044:	fe 01       	movw	r30, r28
    2046:	e7 5b       	subi	r30, 0xB7	; 183
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	80 e9       	ldi	r24, 0x90	; 144
    204c:	91 e0       	ldi	r25, 0x01	; 1
    204e:	91 83       	std	Z+1, r25	; 0x01
    2050:	80 83       	st	Z, r24
    2052:	fe 01       	movw	r30, r28
    2054:	e7 5b       	subi	r30, 0xB7	; 183
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	80 81       	ld	r24, Z
    205a:	91 81       	ldd	r25, Z+1	; 0x01
    205c:	01 97       	sbiw	r24, 0x01	; 1
    205e:	f1 f7       	brne	.-4      	; 0x205c <main+0x3fa>
    2060:	fe 01       	movw	r30, r28
    2062:	e7 5b       	subi	r30, 0xB7	; 183
    2064:	ff 4f       	sbci	r31, 0xFF	; 255
    2066:	91 83       	std	Z+1, r25	; 0x01
    2068:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    206a:	de 01       	movw	r26, r28
    206c:	a5 5b       	subi	r26, 0xB5	; 181
    206e:	bf 4f       	sbci	r27, 0xFF	; 255
    2070:	fe 01       	movw	r30, r28
    2072:	e5 5b       	subi	r30, 0xB5	; 181
    2074:	ff 4f       	sbci	r31, 0xFF	; 255
    2076:	80 81       	ld	r24, Z
    2078:	91 81       	ldd	r25, Z+1	; 0x01
    207a:	01 97       	sbiw	r24, 0x01	; 1
    207c:	11 96       	adiw	r26, 0x01	; 1
    207e:	9c 93       	st	X, r25
    2080:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2082:	fe 01       	movw	r30, r28
    2084:	e5 5b       	subi	r30, 0xB5	; 181
    2086:	ff 4f       	sbci	r31, 0xFF	; 255
    2088:	80 81       	ld	r24, Z
    208a:	91 81       	ldd	r25, Z+1	; 0x01
    208c:	00 97       	sbiw	r24, 0x00	; 0
    208e:	d1 f6       	brne	.-76     	; 0x2044 <main+0x3e2>
    2090:	28 c0       	rjmp	.+80     	; 0x20e2 <main+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2092:	8e 01       	movw	r16, r28
    2094:	05 5b       	subi	r16, 0xB5	; 181
    2096:	1f 4f       	sbci	r17, 0xFF	; 255
    2098:	fe 01       	movw	r30, r28
    209a:	e3 5b       	subi	r30, 0xB3	; 179
    209c:	ff 4f       	sbci	r31, 0xFF	; 255
    209e:	60 81       	ld	r22, Z
    20a0:	71 81       	ldd	r23, Z+1	; 0x01
    20a2:	82 81       	ldd	r24, Z+2	; 0x02
    20a4:	93 81       	ldd	r25, Z+3	; 0x03
    20a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20aa:	dc 01       	movw	r26, r24
    20ac:	cb 01       	movw	r24, r22
    20ae:	f8 01       	movw	r30, r16
    20b0:	91 83       	std	Z+1, r25	; 0x01
    20b2:	80 83       	st	Z, r24
    20b4:	de 01       	movw	r26, r28
    20b6:	a9 5b       	subi	r26, 0xB9	; 185
    20b8:	bf 4f       	sbci	r27, 0xFF	; 255
    20ba:	fe 01       	movw	r30, r28
    20bc:	e5 5b       	subi	r30, 0xB5	; 181
    20be:	ff 4f       	sbci	r31, 0xFF	; 255
    20c0:	80 81       	ld	r24, Z
    20c2:	91 81       	ldd	r25, Z+1	; 0x01
    20c4:	11 96       	adiw	r26, 0x01	; 1
    20c6:	9c 93       	st	X, r25
    20c8:	8e 93       	st	-X, r24
    20ca:	fe 01       	movw	r30, r28
    20cc:	e9 5b       	subi	r30, 0xB9	; 185
    20ce:	ff 4f       	sbci	r31, 0xFF	; 255
    20d0:	80 81       	ld	r24, Z
    20d2:	91 81       	ldd	r25, Z+1	; 0x01
    20d4:	01 97       	sbiw	r24, 0x01	; 1
    20d6:	f1 f7       	brne	.-4      	; 0x20d4 <main+0x472>
    20d8:	fe 01       	movw	r30, r28
    20da:	e9 5b       	subi	r30, 0xB9	; 185
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	91 83       	std	Z+1, r25	; 0x01
    20e0:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB0)))
    20e2:	e6 e3       	ldi	r30, 0x36	; 54
    20e4:	f0 e0       	ldi	r31, 0x00	; 0
    20e6:	80 81       	ld	r24, Z
    20e8:	88 2f       	mov	r24, r24
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	81 70       	andi	r24, 0x01	; 1
    20ee:	90 70       	andi	r25, 0x00	; 0
    20f0:	00 97       	sbiw	r24, 0x00	; 0
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <main+0x494>
    20f4:	62 c0       	rjmp	.+196    	; 0x21ba <main+0x558>
			{
				decrement_hours();
    20f6:	0e 94 4d 0c 	call	0x189a	; 0x189a <decrement_hours>
				sec_dig2 = sec/10;
    20fa:	80 91 74 00 	lds	r24, 0x0074
    20fe:	9a e0       	ldi	r25, 0x0A	; 10
    2100:	69 2f       	mov	r22, r25
    2102:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    2106:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    210a:	80 91 78 00 	lds	r24, 0x0078
    210e:	88 2f       	mov	r24, r24
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	9c 01       	movw	r18, r24
    2114:	22 0f       	add	r18, r18
    2116:	33 1f       	adc	r19, r19
    2118:	c9 01       	movw	r24, r18
    211a:	88 0f       	add	r24, r24
    211c:	99 1f       	adc	r25, r25
    211e:	88 0f       	add	r24, r24
    2120:	99 1f       	adc	r25, r25
    2122:	82 0f       	add	r24, r18
    2124:	93 1f       	adc	r25, r19
    2126:	90 95       	com	r25
    2128:	81 95       	neg	r24
    212a:	9f 4f       	sbci	r25, 0xFF	; 255
    212c:	98 2f       	mov	r25, r24
    212e:	80 91 74 00 	lds	r24, 0x0074
    2132:	89 0f       	add	r24, r25
    2134:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    2138:	80 91 75 00 	lds	r24, 0x0075
    213c:	9a e0       	ldi	r25, 0x0A	; 10
    213e:	69 2f       	mov	r22, r25
    2140:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    2144:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    2148:	80 91 7a 00 	lds	r24, 0x007A
    214c:	88 2f       	mov	r24, r24
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	9c 01       	movw	r18, r24
    2152:	22 0f       	add	r18, r18
    2154:	33 1f       	adc	r19, r19
    2156:	c9 01       	movw	r24, r18
    2158:	88 0f       	add	r24, r24
    215a:	99 1f       	adc	r25, r25
    215c:	88 0f       	add	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	82 0f       	add	r24, r18
    2162:	93 1f       	adc	r25, r19
    2164:	90 95       	com	r25
    2166:	81 95       	neg	r24
    2168:	9f 4f       	sbci	r25, 0xFF	; 255
    216a:	98 2f       	mov	r25, r24
    216c:	80 91 75 00 	lds	r24, 0x0075
    2170:	89 0f       	add	r24, r25
    2172:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    2176:	80 91 76 00 	lds	r24, 0x0076
    217a:	9a e0       	ldi	r25, 0x0A	; 10
    217c:	69 2f       	mov	r22, r25
    217e:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    2182:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    2186:	80 91 7c 00 	lds	r24, 0x007C
    218a:	88 2f       	mov	r24, r24
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	9c 01       	movw	r18, r24
    2190:	22 0f       	add	r18, r18
    2192:	33 1f       	adc	r19, r19
    2194:	c9 01       	movw	r24, r18
    2196:	88 0f       	add	r24, r24
    2198:	99 1f       	adc	r25, r25
    219a:	88 0f       	add	r24, r24
    219c:	99 1f       	adc	r25, r25
    219e:	82 0f       	add	r24, r18
    21a0:	93 1f       	adc	r25, r19
    21a2:	90 95       	com	r25
    21a4:	81 95       	neg	r24
    21a6:	9f 4f       	sbci	r25, 0xFF	; 255
    21a8:	98 2f       	mov	r25, r24
    21aa:	80 91 76 00 	lds	r24, 0x0076
    21ae:	89 0f       	add	r24, r25
    21b0:	80 93 7b 00 	sts	0x007B, r24
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <main+0x558>
			}
			while( !(PINB & (1<<PB0)) )
			{
				display_7_segment();
    21b6:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB0)) )
    21ba:	e6 e3       	ldi	r30, 0x36	; 54
    21bc:	f0 e0       	ldi	r31, 0x00	; 0
    21be:	80 81       	ld	r24, Z
    21c0:	88 2f       	mov	r24, r24
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	81 70       	andi	r24, 0x01	; 1
    21c6:	90 70       	andi	r25, 0x00	; 0
    21c8:	00 97       	sbiw	r24, 0x00	; 0
    21ca:	a9 f3       	breq	.-22     	; 0x21b6 <main+0x554>
				display_7_segment();
			}
		}

		/*ADJUST MINUTES*/
		if(!(PINB & (1<<PB4)))//increment
    21cc:	e6 e3       	ldi	r30, 0x36	; 54
    21ce:	f0 e0       	ldi	r31, 0x00	; 0
    21d0:	80 81       	ld	r24, Z
    21d2:	88 2f       	mov	r24, r24
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	80 71       	andi	r24, 0x10	; 16
    21d8:	90 70       	andi	r25, 0x00	; 0
    21da:	00 97       	sbiw	r24, 0x00	; 0
    21dc:	09 f0       	breq	.+2      	; 0x21e0 <main+0x57e>
    21de:	fa c0       	rjmp	.+500    	; 0x23d4 <main+0x772>
    21e0:	fe 01       	movw	r30, r28
    21e2:	ed 5b       	subi	r30, 0xBD	; 189
    21e4:	ff 4f       	sbci	r31, 0xFF	; 255
    21e6:	80 e0       	ldi	r24, 0x00	; 0
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	a0 ef       	ldi	r26, 0xF0	; 240
    21ec:	b1 e4       	ldi	r27, 0x41	; 65
    21ee:	80 83       	st	Z, r24
    21f0:	91 83       	std	Z+1, r25	; 0x01
    21f2:	a2 83       	std	Z+2, r26	; 0x02
    21f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f6:	8e 01       	movw	r16, r28
    21f8:	01 5c       	subi	r16, 0xC1	; 193
    21fa:	1f 4f       	sbci	r17, 0xFF	; 255
    21fc:	fe 01       	movw	r30, r28
    21fe:	ed 5b       	subi	r30, 0xBD	; 189
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	60 81       	ld	r22, Z
    2204:	71 81       	ldd	r23, Z+1	; 0x01
    2206:	82 81       	ldd	r24, Z+2	; 0x02
    2208:	93 81       	ldd	r25, Z+3	; 0x03
    220a:	20 e0       	ldi	r18, 0x00	; 0
    220c:	30 e0       	ldi	r19, 0x00	; 0
    220e:	4a e7       	ldi	r20, 0x7A	; 122
    2210:	55 e4       	ldi	r21, 0x45	; 69
    2212:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2216:	dc 01       	movw	r26, r24
    2218:	cb 01       	movw	r24, r22
    221a:	f8 01       	movw	r30, r16
    221c:	80 83       	st	Z, r24
    221e:	91 83       	std	Z+1, r25	; 0x01
    2220:	a2 83       	std	Z+2, r26	; 0x02
    2222:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2224:	fe 01       	movw	r30, r28
    2226:	ff 96       	adiw	r30, 0x3f	; 63
    2228:	60 81       	ld	r22, Z
    222a:	71 81       	ldd	r23, Z+1	; 0x01
    222c:	82 81       	ldd	r24, Z+2	; 0x02
    222e:	93 81       	ldd	r25, Z+3	; 0x03
    2230:	20 e0       	ldi	r18, 0x00	; 0
    2232:	30 e0       	ldi	r19, 0x00	; 0
    2234:	40 e8       	ldi	r20, 0x80	; 128
    2236:	5f e3       	ldi	r21, 0x3F	; 63
    2238:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    223c:	88 23       	and	r24, r24
    223e:	2c f4       	brge	.+10     	; 0x224a <main+0x5e8>
		__ticks = 1;
    2240:	81 e0       	ldi	r24, 0x01	; 1
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	9e af       	std	Y+62, r25	; 0x3e
    2246:	8d af       	std	Y+61, r24	; 0x3d
    2248:	46 c0       	rjmp	.+140    	; 0x22d6 <main+0x674>
	else if (__tmp > 65535)
    224a:	fe 01       	movw	r30, r28
    224c:	ff 96       	adiw	r30, 0x3f	; 63
    224e:	60 81       	ld	r22, Z
    2250:	71 81       	ldd	r23, Z+1	; 0x01
    2252:	82 81       	ldd	r24, Z+2	; 0x02
    2254:	93 81       	ldd	r25, Z+3	; 0x03
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	3f ef       	ldi	r19, 0xFF	; 255
    225a:	4f e7       	ldi	r20, 0x7F	; 127
    225c:	57 e4       	ldi	r21, 0x47	; 71
    225e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2262:	18 16       	cp	r1, r24
    2264:	64 f5       	brge	.+88     	; 0x22be <main+0x65c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2266:	fe 01       	movw	r30, r28
    2268:	ed 5b       	subi	r30, 0xBD	; 189
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	60 81       	ld	r22, Z
    226e:	71 81       	ldd	r23, Z+1	; 0x01
    2270:	82 81       	ldd	r24, Z+2	; 0x02
    2272:	93 81       	ldd	r25, Z+3	; 0x03
    2274:	20 e0       	ldi	r18, 0x00	; 0
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	40 e2       	ldi	r20, 0x20	; 32
    227a:	51 e4       	ldi	r21, 0x41	; 65
    227c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2280:	dc 01       	movw	r26, r24
    2282:	cb 01       	movw	r24, r22
    2284:	bc 01       	movw	r22, r24
    2286:	cd 01       	movw	r24, r26
    2288:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    228c:	dc 01       	movw	r26, r24
    228e:	cb 01       	movw	r24, r22
    2290:	9e af       	std	Y+62, r25	; 0x3e
    2292:	8d af       	std	Y+61, r24	; 0x3d
    2294:	0f c0       	rjmp	.+30     	; 0x22b4 <main+0x652>
    2296:	80 e9       	ldi	r24, 0x90	; 144
    2298:	91 e0       	ldi	r25, 0x01	; 1
    229a:	9c af       	std	Y+60, r25	; 0x3c
    229c:	8b af       	std	Y+59, r24	; 0x3b
    229e:	8b ad       	ldd	r24, Y+59	; 0x3b
    22a0:	9c ad       	ldd	r25, Y+60	; 0x3c
    22a2:	01 97       	sbiw	r24, 0x01	; 1
    22a4:	f1 f7       	brne	.-4      	; 0x22a2 <main+0x640>
    22a6:	9c af       	std	Y+60, r25	; 0x3c
    22a8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22aa:	8d ad       	ldd	r24, Y+61	; 0x3d
    22ac:	9e ad       	ldd	r25, Y+62	; 0x3e
    22ae:	01 97       	sbiw	r24, 0x01	; 1
    22b0:	9e af       	std	Y+62, r25	; 0x3e
    22b2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22b4:	8d ad       	ldd	r24, Y+61	; 0x3d
    22b6:	9e ad       	ldd	r25, Y+62	; 0x3e
    22b8:	00 97       	sbiw	r24, 0x00	; 0
    22ba:	69 f7       	brne	.-38     	; 0x2296 <main+0x634>
    22bc:	16 c0       	rjmp	.+44     	; 0x22ea <main+0x688>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22be:	fe 01       	movw	r30, r28
    22c0:	ff 96       	adiw	r30, 0x3f	; 63
    22c2:	60 81       	ld	r22, Z
    22c4:	71 81       	ldd	r23, Z+1	; 0x01
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22ce:	dc 01       	movw	r26, r24
    22d0:	cb 01       	movw	r24, r22
    22d2:	9e af       	std	Y+62, r25	; 0x3e
    22d4:	8d af       	std	Y+61, r24	; 0x3d
    22d6:	8d ad       	ldd	r24, Y+61	; 0x3d
    22d8:	9e ad       	ldd	r25, Y+62	; 0x3e
    22da:	9a af       	std	Y+58, r25	; 0x3a
    22dc:	89 af       	std	Y+57, r24	; 0x39
    22de:	89 ad       	ldd	r24, Y+57	; 0x39
    22e0:	9a ad       	ldd	r25, Y+58	; 0x3a
    22e2:	01 97       	sbiw	r24, 0x01	; 1
    22e4:	f1 f7       	brne	.-4      	; 0x22e2 <main+0x680>
    22e6:	9a af       	std	Y+58, r25	; 0x3a
    22e8:	89 af       	std	Y+57, r24	; 0x39
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB4)))
    22ea:	e6 e3       	ldi	r30, 0x36	; 54
    22ec:	f0 e0       	ldi	r31, 0x00	; 0
    22ee:	80 81       	ld	r24, Z
    22f0:	88 2f       	mov	r24, r24
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	80 71       	andi	r24, 0x10	; 16
    22f6:	90 70       	andi	r25, 0x00	; 0
    22f8:	00 97       	sbiw	r24, 0x00	; 0
    22fa:	09 f0       	breq	.+2      	; 0x22fe <main+0x69c>
    22fc:	62 c0       	rjmp	.+196    	; 0x23c2 <main+0x760>
			{
				increment_minutes();
    22fe:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <increment_minutes>
				sec_dig2 = sec/10;
    2302:	80 91 74 00 	lds	r24, 0x0074
    2306:	9a e0       	ldi	r25, 0x0A	; 10
    2308:	69 2f       	mov	r22, r25
    230a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    230e:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    2312:	80 91 78 00 	lds	r24, 0x0078
    2316:	88 2f       	mov	r24, r24
    2318:	90 e0       	ldi	r25, 0x00	; 0
    231a:	9c 01       	movw	r18, r24
    231c:	22 0f       	add	r18, r18
    231e:	33 1f       	adc	r19, r19
    2320:	c9 01       	movw	r24, r18
    2322:	88 0f       	add	r24, r24
    2324:	99 1f       	adc	r25, r25
    2326:	88 0f       	add	r24, r24
    2328:	99 1f       	adc	r25, r25
    232a:	82 0f       	add	r24, r18
    232c:	93 1f       	adc	r25, r19
    232e:	90 95       	com	r25
    2330:	81 95       	neg	r24
    2332:	9f 4f       	sbci	r25, 0xFF	; 255
    2334:	98 2f       	mov	r25, r24
    2336:	80 91 74 00 	lds	r24, 0x0074
    233a:	89 0f       	add	r24, r25
    233c:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    2340:	80 91 75 00 	lds	r24, 0x0075
    2344:	9a e0       	ldi	r25, 0x0A	; 10
    2346:	69 2f       	mov	r22, r25
    2348:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    234c:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    2350:	80 91 7a 00 	lds	r24, 0x007A
    2354:	88 2f       	mov	r24, r24
    2356:	90 e0       	ldi	r25, 0x00	; 0
    2358:	9c 01       	movw	r18, r24
    235a:	22 0f       	add	r18, r18
    235c:	33 1f       	adc	r19, r19
    235e:	c9 01       	movw	r24, r18
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	88 0f       	add	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	82 0f       	add	r24, r18
    236a:	93 1f       	adc	r25, r19
    236c:	90 95       	com	r25
    236e:	81 95       	neg	r24
    2370:	9f 4f       	sbci	r25, 0xFF	; 255
    2372:	98 2f       	mov	r25, r24
    2374:	80 91 75 00 	lds	r24, 0x0075
    2378:	89 0f       	add	r24, r25
    237a:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    237e:	80 91 76 00 	lds	r24, 0x0076
    2382:	9a e0       	ldi	r25, 0x0A	; 10
    2384:	69 2f       	mov	r22, r25
    2386:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    238a:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    238e:	80 91 7c 00 	lds	r24, 0x007C
    2392:	88 2f       	mov	r24, r24
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	9c 01       	movw	r18, r24
    2398:	22 0f       	add	r18, r18
    239a:	33 1f       	adc	r19, r19
    239c:	c9 01       	movw	r24, r18
    239e:	88 0f       	add	r24, r24
    23a0:	99 1f       	adc	r25, r25
    23a2:	88 0f       	add	r24, r24
    23a4:	99 1f       	adc	r25, r25
    23a6:	82 0f       	add	r24, r18
    23a8:	93 1f       	adc	r25, r19
    23aa:	90 95       	com	r25
    23ac:	81 95       	neg	r24
    23ae:	9f 4f       	sbci	r25, 0xFF	; 255
    23b0:	98 2f       	mov	r25, r24
    23b2:	80 91 76 00 	lds	r24, 0x0076
    23b6:	89 0f       	add	r24, r25
    23b8:	80 93 7b 00 	sts	0x007B, r24
    23bc:	02 c0       	rjmp	.+4      	; 0x23c2 <main+0x760>
			}
			while( !(PINB & (1<<PB4)) )
			{
				display_7_segment();
    23be:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB4)) )
    23c2:	e6 e3       	ldi	r30, 0x36	; 54
    23c4:	f0 e0       	ldi	r31, 0x00	; 0
    23c6:	80 81       	ld	r24, Z
    23c8:	88 2f       	mov	r24, r24
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	80 71       	andi	r24, 0x10	; 16
    23ce:	90 70       	andi	r25, 0x00	; 0
    23d0:	00 97       	sbiw	r24, 0x00	; 0
    23d2:	a9 f3       	breq	.-22     	; 0x23be <main+0x75c>
			{
				display_7_segment();
			}
		}

		if(!(PINB & (1<<PB3)))//decrement
    23d4:	e6 e3       	ldi	r30, 0x36	; 54
    23d6:	f0 e0       	ldi	r31, 0x00	; 0
    23d8:	80 81       	ld	r24, Z
    23da:	88 2f       	mov	r24, r24
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	88 70       	andi	r24, 0x08	; 8
    23e0:	90 70       	andi	r25, 0x00	; 0
    23e2:	00 97       	sbiw	r24, 0x00	; 0
    23e4:	09 f0       	breq	.+2      	; 0x23e8 <main+0x786>
    23e6:	e7 c0       	rjmp	.+462    	; 0x25b6 <main+0x954>
    23e8:	80 e0       	ldi	r24, 0x00	; 0
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	a0 ef       	ldi	r26, 0xF0	; 240
    23ee:	b1 e4       	ldi	r27, 0x41	; 65
    23f0:	8d ab       	std	Y+53, r24	; 0x35
    23f2:	9e ab       	std	Y+54, r25	; 0x36
    23f4:	af ab       	std	Y+55, r26	; 0x37
    23f6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23f8:	6d a9       	ldd	r22, Y+53	; 0x35
    23fa:	7e a9       	ldd	r23, Y+54	; 0x36
    23fc:	8f a9       	ldd	r24, Y+55	; 0x37
    23fe:	98 ad       	ldd	r25, Y+56	; 0x38
    2400:	20 e0       	ldi	r18, 0x00	; 0
    2402:	30 e0       	ldi	r19, 0x00	; 0
    2404:	4a e7       	ldi	r20, 0x7A	; 122
    2406:	55 e4       	ldi	r21, 0x45	; 69
    2408:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    240c:	dc 01       	movw	r26, r24
    240e:	cb 01       	movw	r24, r22
    2410:	89 ab       	std	Y+49, r24	; 0x31
    2412:	9a ab       	std	Y+50, r25	; 0x32
    2414:	ab ab       	std	Y+51, r26	; 0x33
    2416:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2418:	69 a9       	ldd	r22, Y+49	; 0x31
    241a:	7a a9       	ldd	r23, Y+50	; 0x32
    241c:	8b a9       	ldd	r24, Y+51	; 0x33
    241e:	9c a9       	ldd	r25, Y+52	; 0x34
    2420:	20 e0       	ldi	r18, 0x00	; 0
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	40 e8       	ldi	r20, 0x80	; 128
    2426:	5f e3       	ldi	r21, 0x3F	; 63
    2428:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    242c:	88 23       	and	r24, r24
    242e:	2c f4       	brge	.+10     	; 0x243a <main+0x7d8>
		__ticks = 1;
    2430:	81 e0       	ldi	r24, 0x01	; 1
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	98 ab       	std	Y+48, r25	; 0x30
    2436:	8f a7       	std	Y+47, r24	; 0x2f
    2438:	3f c0       	rjmp	.+126    	; 0x24b8 <main+0x856>
	else if (__tmp > 65535)
    243a:	69 a9       	ldd	r22, Y+49	; 0x31
    243c:	7a a9       	ldd	r23, Y+50	; 0x32
    243e:	8b a9       	ldd	r24, Y+51	; 0x33
    2440:	9c a9       	ldd	r25, Y+52	; 0x34
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	3f ef       	ldi	r19, 0xFF	; 255
    2446:	4f e7       	ldi	r20, 0x7F	; 127
    2448:	57 e4       	ldi	r21, 0x47	; 71
    244a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    244e:	18 16       	cp	r1, r24
    2450:	4c f5       	brge	.+82     	; 0x24a4 <main+0x842>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2452:	6d a9       	ldd	r22, Y+53	; 0x35
    2454:	7e a9       	ldd	r23, Y+54	; 0x36
    2456:	8f a9       	ldd	r24, Y+55	; 0x37
    2458:	98 ad       	ldd	r25, Y+56	; 0x38
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	40 e2       	ldi	r20, 0x20	; 32
    2460:	51 e4       	ldi	r21, 0x41	; 65
    2462:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2466:	dc 01       	movw	r26, r24
    2468:	cb 01       	movw	r24, r22
    246a:	bc 01       	movw	r22, r24
    246c:	cd 01       	movw	r24, r26
    246e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	98 ab       	std	Y+48, r25	; 0x30
    2478:	8f a7       	std	Y+47, r24	; 0x2f
    247a:	0f c0       	rjmp	.+30     	; 0x249a <main+0x838>
    247c:	80 e9       	ldi	r24, 0x90	; 144
    247e:	91 e0       	ldi	r25, 0x01	; 1
    2480:	9e a7       	std	Y+46, r25	; 0x2e
    2482:	8d a7       	std	Y+45, r24	; 0x2d
    2484:	8d a5       	ldd	r24, Y+45	; 0x2d
    2486:	9e a5       	ldd	r25, Y+46	; 0x2e
    2488:	01 97       	sbiw	r24, 0x01	; 1
    248a:	f1 f7       	brne	.-4      	; 0x2488 <main+0x826>
    248c:	9e a7       	std	Y+46, r25	; 0x2e
    248e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2490:	8f a5       	ldd	r24, Y+47	; 0x2f
    2492:	98 a9       	ldd	r25, Y+48	; 0x30
    2494:	01 97       	sbiw	r24, 0x01	; 1
    2496:	98 ab       	std	Y+48, r25	; 0x30
    2498:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    249a:	8f a5       	ldd	r24, Y+47	; 0x2f
    249c:	98 a9       	ldd	r25, Y+48	; 0x30
    249e:	00 97       	sbiw	r24, 0x00	; 0
    24a0:	69 f7       	brne	.-38     	; 0x247c <main+0x81a>
    24a2:	14 c0       	rjmp	.+40     	; 0x24cc <main+0x86a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24a4:	69 a9       	ldd	r22, Y+49	; 0x31
    24a6:	7a a9       	ldd	r23, Y+50	; 0x32
    24a8:	8b a9       	ldd	r24, Y+51	; 0x33
    24aa:	9c a9       	ldd	r25, Y+52	; 0x34
    24ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	98 ab       	std	Y+48, r25	; 0x30
    24b6:	8f a7       	std	Y+47, r24	; 0x2f
    24b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    24ba:	98 a9       	ldd	r25, Y+48	; 0x30
    24bc:	9c a7       	std	Y+44, r25	; 0x2c
    24be:	8b a7       	std	Y+43, r24	; 0x2b
    24c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    24c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    24c4:	01 97       	sbiw	r24, 0x01	; 1
    24c6:	f1 f7       	brne	.-4      	; 0x24c4 <main+0x862>
    24c8:	9c a7       	std	Y+44, r25	; 0x2c
    24ca:	8b a7       	std	Y+43, r24	; 0x2b
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB3)))
    24cc:	e6 e3       	ldi	r30, 0x36	; 54
    24ce:	f0 e0       	ldi	r31, 0x00	; 0
    24d0:	80 81       	ld	r24, Z
    24d2:	88 2f       	mov	r24, r24
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	88 70       	andi	r24, 0x08	; 8
    24d8:	90 70       	andi	r25, 0x00	; 0
    24da:	00 97       	sbiw	r24, 0x00	; 0
    24dc:	09 f0       	breq	.+2      	; 0x24e0 <main+0x87e>
    24de:	62 c0       	rjmp	.+196    	; 0x25a4 <main+0x942>
			{
				decrement_minutes();
    24e0:	0e 94 68 0c 	call	0x18d0	; 0x18d0 <decrement_minutes>
				sec_dig2 = sec/10;
    24e4:	80 91 74 00 	lds	r24, 0x0074
    24e8:	9a e0       	ldi	r25, 0x0A	; 10
    24ea:	69 2f       	mov	r22, r25
    24ec:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    24f0:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    24f4:	80 91 78 00 	lds	r24, 0x0078
    24f8:	88 2f       	mov	r24, r24
    24fa:	90 e0       	ldi	r25, 0x00	; 0
    24fc:	9c 01       	movw	r18, r24
    24fe:	22 0f       	add	r18, r18
    2500:	33 1f       	adc	r19, r19
    2502:	c9 01       	movw	r24, r18
    2504:	88 0f       	add	r24, r24
    2506:	99 1f       	adc	r25, r25
    2508:	88 0f       	add	r24, r24
    250a:	99 1f       	adc	r25, r25
    250c:	82 0f       	add	r24, r18
    250e:	93 1f       	adc	r25, r19
    2510:	90 95       	com	r25
    2512:	81 95       	neg	r24
    2514:	9f 4f       	sbci	r25, 0xFF	; 255
    2516:	98 2f       	mov	r25, r24
    2518:	80 91 74 00 	lds	r24, 0x0074
    251c:	89 0f       	add	r24, r25
    251e:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    2522:	80 91 75 00 	lds	r24, 0x0075
    2526:	9a e0       	ldi	r25, 0x0A	; 10
    2528:	69 2f       	mov	r22, r25
    252a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    252e:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    2532:	80 91 7a 00 	lds	r24, 0x007A
    2536:	88 2f       	mov	r24, r24
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	9c 01       	movw	r18, r24
    253c:	22 0f       	add	r18, r18
    253e:	33 1f       	adc	r19, r19
    2540:	c9 01       	movw	r24, r18
    2542:	88 0f       	add	r24, r24
    2544:	99 1f       	adc	r25, r25
    2546:	88 0f       	add	r24, r24
    2548:	99 1f       	adc	r25, r25
    254a:	82 0f       	add	r24, r18
    254c:	93 1f       	adc	r25, r19
    254e:	90 95       	com	r25
    2550:	81 95       	neg	r24
    2552:	9f 4f       	sbci	r25, 0xFF	; 255
    2554:	98 2f       	mov	r25, r24
    2556:	80 91 75 00 	lds	r24, 0x0075
    255a:	89 0f       	add	r24, r25
    255c:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    2560:	80 91 76 00 	lds	r24, 0x0076
    2564:	9a e0       	ldi	r25, 0x0A	; 10
    2566:	69 2f       	mov	r22, r25
    2568:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    256c:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    2570:	80 91 7c 00 	lds	r24, 0x007C
    2574:	88 2f       	mov	r24, r24
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	9c 01       	movw	r18, r24
    257a:	22 0f       	add	r18, r18
    257c:	33 1f       	adc	r19, r19
    257e:	c9 01       	movw	r24, r18
    2580:	88 0f       	add	r24, r24
    2582:	99 1f       	adc	r25, r25
    2584:	88 0f       	add	r24, r24
    2586:	99 1f       	adc	r25, r25
    2588:	82 0f       	add	r24, r18
    258a:	93 1f       	adc	r25, r19
    258c:	90 95       	com	r25
    258e:	81 95       	neg	r24
    2590:	9f 4f       	sbci	r25, 0xFF	; 255
    2592:	98 2f       	mov	r25, r24
    2594:	80 91 76 00 	lds	r24, 0x0076
    2598:	89 0f       	add	r24, r25
    259a:	80 93 7b 00 	sts	0x007B, r24
    259e:	02 c0       	rjmp	.+4      	; 0x25a4 <main+0x942>
			}
			while( !(PINB & (1<<PB3)) )
			{
				display_7_segment();
    25a0:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB3)) )
    25a4:	e6 e3       	ldi	r30, 0x36	; 54
    25a6:	f0 e0       	ldi	r31, 0x00	; 0
    25a8:	80 81       	ld	r24, Z
    25aa:	88 2f       	mov	r24, r24
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	88 70       	andi	r24, 0x08	; 8
    25b0:	90 70       	andi	r25, 0x00	; 0
    25b2:	00 97       	sbiw	r24, 0x00	; 0
    25b4:	a9 f3       	breq	.-22     	; 0x25a0 <main+0x93e>
				display_7_segment();
			}
		}

		/*ADJUST SECONDS*/
		if(!(PINB & (1<<PB6)))//increment
    25b6:	e6 e3       	ldi	r30, 0x36	; 54
    25b8:	f0 e0       	ldi	r31, 0x00	; 0
    25ba:	80 81       	ld	r24, Z
    25bc:	88 2f       	mov	r24, r24
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	80 74       	andi	r24, 0x40	; 64
    25c2:	90 70       	andi	r25, 0x00	; 0
    25c4:	00 97       	sbiw	r24, 0x00	; 0
    25c6:	09 f0       	breq	.+2      	; 0x25ca <main+0x968>
    25c8:	e7 c0       	rjmp	.+462    	; 0x2798 <main+0xb36>
    25ca:	80 e0       	ldi	r24, 0x00	; 0
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	a0 ef       	ldi	r26, 0xF0	; 240
    25d0:	b1 e4       	ldi	r27, 0x41	; 65
    25d2:	8f a3       	std	Y+39, r24	; 0x27
    25d4:	98 a7       	std	Y+40, r25	; 0x28
    25d6:	a9 a7       	std	Y+41, r26	; 0x29
    25d8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25da:	6f a1       	ldd	r22, Y+39	; 0x27
    25dc:	78 a5       	ldd	r23, Y+40	; 0x28
    25de:	89 a5       	ldd	r24, Y+41	; 0x29
    25e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    25e2:	20 e0       	ldi	r18, 0x00	; 0
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	4a e7       	ldi	r20, 0x7A	; 122
    25e8:	55 e4       	ldi	r21, 0x45	; 69
    25ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	8b a3       	std	Y+35, r24	; 0x23
    25f4:	9c a3       	std	Y+36, r25	; 0x24
    25f6:	ad a3       	std	Y+37, r26	; 0x25
    25f8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    25fa:	6b a1       	ldd	r22, Y+35	; 0x23
    25fc:	7c a1       	ldd	r23, Y+36	; 0x24
    25fe:	8d a1       	ldd	r24, Y+37	; 0x25
    2600:	9e a1       	ldd	r25, Y+38	; 0x26
    2602:	20 e0       	ldi	r18, 0x00	; 0
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	40 e8       	ldi	r20, 0x80	; 128
    2608:	5f e3       	ldi	r21, 0x3F	; 63
    260a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    260e:	88 23       	and	r24, r24
    2610:	2c f4       	brge	.+10     	; 0x261c <main+0x9ba>
		__ticks = 1;
    2612:	81 e0       	ldi	r24, 0x01	; 1
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	9a a3       	std	Y+34, r25	; 0x22
    2618:	89 a3       	std	Y+33, r24	; 0x21
    261a:	3f c0       	rjmp	.+126    	; 0x269a <main+0xa38>
	else if (__tmp > 65535)
    261c:	6b a1       	ldd	r22, Y+35	; 0x23
    261e:	7c a1       	ldd	r23, Y+36	; 0x24
    2620:	8d a1       	ldd	r24, Y+37	; 0x25
    2622:	9e a1       	ldd	r25, Y+38	; 0x26
    2624:	20 e0       	ldi	r18, 0x00	; 0
    2626:	3f ef       	ldi	r19, 0xFF	; 255
    2628:	4f e7       	ldi	r20, 0x7F	; 127
    262a:	57 e4       	ldi	r21, 0x47	; 71
    262c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2630:	18 16       	cp	r1, r24
    2632:	4c f5       	brge	.+82     	; 0x2686 <main+0xa24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2634:	6f a1       	ldd	r22, Y+39	; 0x27
    2636:	78 a5       	ldd	r23, Y+40	; 0x28
    2638:	89 a5       	ldd	r24, Y+41	; 0x29
    263a:	9a a5       	ldd	r25, Y+42	; 0x2a
    263c:	20 e0       	ldi	r18, 0x00	; 0
    263e:	30 e0       	ldi	r19, 0x00	; 0
    2640:	40 e2       	ldi	r20, 0x20	; 32
    2642:	51 e4       	ldi	r21, 0x41	; 65
    2644:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2648:	dc 01       	movw	r26, r24
    264a:	cb 01       	movw	r24, r22
    264c:	bc 01       	movw	r22, r24
    264e:	cd 01       	movw	r24, r26
    2650:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2654:	dc 01       	movw	r26, r24
    2656:	cb 01       	movw	r24, r22
    2658:	9a a3       	std	Y+34, r25	; 0x22
    265a:	89 a3       	std	Y+33, r24	; 0x21
    265c:	0f c0       	rjmp	.+30     	; 0x267c <main+0xa1a>
    265e:	80 e9       	ldi	r24, 0x90	; 144
    2660:	91 e0       	ldi	r25, 0x01	; 1
    2662:	98 a3       	std	Y+32, r25	; 0x20
    2664:	8f 8f       	std	Y+31, r24	; 0x1f
    2666:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2668:	98 a1       	ldd	r25, Y+32	; 0x20
    266a:	01 97       	sbiw	r24, 0x01	; 1
    266c:	f1 f7       	brne	.-4      	; 0x266a <main+0xa08>
    266e:	98 a3       	std	Y+32, r25	; 0x20
    2670:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2672:	89 a1       	ldd	r24, Y+33	; 0x21
    2674:	9a a1       	ldd	r25, Y+34	; 0x22
    2676:	01 97       	sbiw	r24, 0x01	; 1
    2678:	9a a3       	std	Y+34, r25	; 0x22
    267a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    267c:	89 a1       	ldd	r24, Y+33	; 0x21
    267e:	9a a1       	ldd	r25, Y+34	; 0x22
    2680:	00 97       	sbiw	r24, 0x00	; 0
    2682:	69 f7       	brne	.-38     	; 0x265e <main+0x9fc>
    2684:	14 c0       	rjmp	.+40     	; 0x26ae <main+0xa4c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2686:	6b a1       	ldd	r22, Y+35	; 0x23
    2688:	7c a1       	ldd	r23, Y+36	; 0x24
    268a:	8d a1       	ldd	r24, Y+37	; 0x25
    268c:	9e a1       	ldd	r25, Y+38	; 0x26
    268e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2692:	dc 01       	movw	r26, r24
    2694:	cb 01       	movw	r24, r22
    2696:	9a a3       	std	Y+34, r25	; 0x22
    2698:	89 a3       	std	Y+33, r24	; 0x21
    269a:	89 a1       	ldd	r24, Y+33	; 0x21
    269c:	9a a1       	ldd	r25, Y+34	; 0x22
    269e:	9e 8f       	std	Y+30, r25	; 0x1e
    26a0:	8d 8f       	std	Y+29, r24	; 0x1d
    26a2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26a4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26a6:	01 97       	sbiw	r24, 0x01	; 1
    26a8:	f1 f7       	brne	.-4      	; 0x26a6 <main+0xa44>
    26aa:	9e 8f       	std	Y+30, r25	; 0x1e
    26ac:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB6)))
    26ae:	e6 e3       	ldi	r30, 0x36	; 54
    26b0:	f0 e0       	ldi	r31, 0x00	; 0
    26b2:	80 81       	ld	r24, Z
    26b4:	88 2f       	mov	r24, r24
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	80 74       	andi	r24, 0x40	; 64
    26ba:	90 70       	andi	r25, 0x00	; 0
    26bc:	00 97       	sbiw	r24, 0x00	; 0
    26be:	09 f0       	breq	.+2      	; 0x26c2 <main+0xa60>
    26c0:	62 c0       	rjmp	.+196    	; 0x2786 <main+0xb24>
			{
				increment_seconds();
    26c2:	0e 94 14 0c 	call	0x1828	; 0x1828 <increment_seconds>
				sec_dig2 = sec/10;
    26c6:	80 91 74 00 	lds	r24, 0x0074
    26ca:	9a e0       	ldi	r25, 0x0A	; 10
    26cc:	69 2f       	mov	r22, r25
    26ce:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    26d2:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    26d6:	80 91 78 00 	lds	r24, 0x0078
    26da:	88 2f       	mov	r24, r24
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	9c 01       	movw	r18, r24
    26e0:	22 0f       	add	r18, r18
    26e2:	33 1f       	adc	r19, r19
    26e4:	c9 01       	movw	r24, r18
    26e6:	88 0f       	add	r24, r24
    26e8:	99 1f       	adc	r25, r25
    26ea:	88 0f       	add	r24, r24
    26ec:	99 1f       	adc	r25, r25
    26ee:	82 0f       	add	r24, r18
    26f0:	93 1f       	adc	r25, r19
    26f2:	90 95       	com	r25
    26f4:	81 95       	neg	r24
    26f6:	9f 4f       	sbci	r25, 0xFF	; 255
    26f8:	98 2f       	mov	r25, r24
    26fa:	80 91 74 00 	lds	r24, 0x0074
    26fe:	89 0f       	add	r24, r25
    2700:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    2704:	80 91 75 00 	lds	r24, 0x0075
    2708:	9a e0       	ldi	r25, 0x0A	; 10
    270a:	69 2f       	mov	r22, r25
    270c:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    2710:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    2714:	80 91 7a 00 	lds	r24, 0x007A
    2718:	88 2f       	mov	r24, r24
    271a:	90 e0       	ldi	r25, 0x00	; 0
    271c:	9c 01       	movw	r18, r24
    271e:	22 0f       	add	r18, r18
    2720:	33 1f       	adc	r19, r19
    2722:	c9 01       	movw	r24, r18
    2724:	88 0f       	add	r24, r24
    2726:	99 1f       	adc	r25, r25
    2728:	88 0f       	add	r24, r24
    272a:	99 1f       	adc	r25, r25
    272c:	82 0f       	add	r24, r18
    272e:	93 1f       	adc	r25, r19
    2730:	90 95       	com	r25
    2732:	81 95       	neg	r24
    2734:	9f 4f       	sbci	r25, 0xFF	; 255
    2736:	98 2f       	mov	r25, r24
    2738:	80 91 75 00 	lds	r24, 0x0075
    273c:	89 0f       	add	r24, r25
    273e:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    2742:	80 91 76 00 	lds	r24, 0x0076
    2746:	9a e0       	ldi	r25, 0x0A	; 10
    2748:	69 2f       	mov	r22, r25
    274a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    274e:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    2752:	80 91 7c 00 	lds	r24, 0x007C
    2756:	88 2f       	mov	r24, r24
    2758:	90 e0       	ldi	r25, 0x00	; 0
    275a:	9c 01       	movw	r18, r24
    275c:	22 0f       	add	r18, r18
    275e:	33 1f       	adc	r19, r19
    2760:	c9 01       	movw	r24, r18
    2762:	88 0f       	add	r24, r24
    2764:	99 1f       	adc	r25, r25
    2766:	88 0f       	add	r24, r24
    2768:	99 1f       	adc	r25, r25
    276a:	82 0f       	add	r24, r18
    276c:	93 1f       	adc	r25, r19
    276e:	90 95       	com	r25
    2770:	81 95       	neg	r24
    2772:	9f 4f       	sbci	r25, 0xFF	; 255
    2774:	98 2f       	mov	r25, r24
    2776:	80 91 76 00 	lds	r24, 0x0076
    277a:	89 0f       	add	r24, r25
    277c:	80 93 7b 00 	sts	0x007B, r24
    2780:	02 c0       	rjmp	.+4      	; 0x2786 <main+0xb24>
			}
			while( !(PINB & (1<<PB6)) )
			{
				/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
				display_7_segment();
    2782:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB6)) )
    2786:	e6 e3       	ldi	r30, 0x36	; 54
    2788:	f0 e0       	ldi	r31, 0x00	; 0
    278a:	80 81       	ld	r24, Z
    278c:	88 2f       	mov	r24, r24
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	80 74       	andi	r24, 0x40	; 64
    2792:	90 70       	andi	r25, 0x00	; 0
    2794:	00 97       	sbiw	r24, 0x00	; 0
    2796:	a9 f3       	breq	.-22     	; 0x2782 <main+0xb20>
				/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
				display_7_segment();
			}
		}

		if(!(PINB & (1<<PB5)))//decrement
    2798:	e6 e3       	ldi	r30, 0x36	; 54
    279a:	f0 e0       	ldi	r31, 0x00	; 0
    279c:	80 81       	ld	r24, Z
    279e:	88 2f       	mov	r24, r24
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	80 72       	andi	r24, 0x20	; 32
    27a4:	90 70       	andi	r25, 0x00	; 0
    27a6:	00 97       	sbiw	r24, 0x00	; 0
    27a8:	09 f0       	breq	.+2      	; 0x27ac <main+0xb4a>
    27aa:	e7 c0       	rjmp	.+462    	; 0x297a <main+0xd18>
    27ac:	80 e0       	ldi	r24, 0x00	; 0
    27ae:	90 e0       	ldi	r25, 0x00	; 0
    27b0:	a0 ef       	ldi	r26, 0xF0	; 240
    27b2:	b1 e4       	ldi	r27, 0x41	; 65
    27b4:	89 8f       	std	Y+25, r24	; 0x19
    27b6:	9a 8f       	std	Y+26, r25	; 0x1a
    27b8:	ab 8f       	std	Y+27, r26	; 0x1b
    27ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27bc:	69 8d       	ldd	r22, Y+25	; 0x19
    27be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27c4:	20 e0       	ldi	r18, 0x00	; 0
    27c6:	30 e0       	ldi	r19, 0x00	; 0
    27c8:	4a e7       	ldi	r20, 0x7A	; 122
    27ca:	55 e4       	ldi	r21, 0x45	; 69
    27cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27d0:	dc 01       	movw	r26, r24
    27d2:	cb 01       	movw	r24, r22
    27d4:	8d 8b       	std	Y+21, r24	; 0x15
    27d6:	9e 8b       	std	Y+22, r25	; 0x16
    27d8:	af 8b       	std	Y+23, r26	; 0x17
    27da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    27dc:	6d 89       	ldd	r22, Y+21	; 0x15
    27de:	7e 89       	ldd	r23, Y+22	; 0x16
    27e0:	8f 89       	ldd	r24, Y+23	; 0x17
    27e2:	98 8d       	ldd	r25, Y+24	; 0x18
    27e4:	20 e0       	ldi	r18, 0x00	; 0
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	40 e8       	ldi	r20, 0x80	; 128
    27ea:	5f e3       	ldi	r21, 0x3F	; 63
    27ec:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    27f0:	88 23       	and	r24, r24
    27f2:	2c f4       	brge	.+10     	; 0x27fe <main+0xb9c>
		__ticks = 1;
    27f4:	81 e0       	ldi	r24, 0x01	; 1
    27f6:	90 e0       	ldi	r25, 0x00	; 0
    27f8:	9c 8b       	std	Y+20, r25	; 0x14
    27fa:	8b 8b       	std	Y+19, r24	; 0x13
    27fc:	3f c0       	rjmp	.+126    	; 0x287c <main+0xc1a>
	else if (__tmp > 65535)
    27fe:	6d 89       	ldd	r22, Y+21	; 0x15
    2800:	7e 89       	ldd	r23, Y+22	; 0x16
    2802:	8f 89       	ldd	r24, Y+23	; 0x17
    2804:	98 8d       	ldd	r25, Y+24	; 0x18
    2806:	20 e0       	ldi	r18, 0x00	; 0
    2808:	3f ef       	ldi	r19, 0xFF	; 255
    280a:	4f e7       	ldi	r20, 0x7F	; 127
    280c:	57 e4       	ldi	r21, 0x47	; 71
    280e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2812:	18 16       	cp	r1, r24
    2814:	4c f5       	brge	.+82     	; 0x2868 <main+0xc06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2816:	69 8d       	ldd	r22, Y+25	; 0x19
    2818:	7a 8d       	ldd	r23, Y+26	; 0x1a
    281a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    281c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	40 e2       	ldi	r20, 0x20	; 32
    2824:	51 e4       	ldi	r21, 0x41	; 65
    2826:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	bc 01       	movw	r22, r24
    2830:	cd 01       	movw	r24, r26
    2832:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2836:	dc 01       	movw	r26, r24
    2838:	cb 01       	movw	r24, r22
    283a:	9c 8b       	std	Y+20, r25	; 0x14
    283c:	8b 8b       	std	Y+19, r24	; 0x13
    283e:	0f c0       	rjmp	.+30     	; 0x285e <main+0xbfc>
    2840:	80 e9       	ldi	r24, 0x90	; 144
    2842:	91 e0       	ldi	r25, 0x01	; 1
    2844:	9a 8b       	std	Y+18, r25	; 0x12
    2846:	89 8b       	std	Y+17, r24	; 0x11
    2848:	89 89       	ldd	r24, Y+17	; 0x11
    284a:	9a 89       	ldd	r25, Y+18	; 0x12
    284c:	01 97       	sbiw	r24, 0x01	; 1
    284e:	f1 f7       	brne	.-4      	; 0x284c <main+0xbea>
    2850:	9a 8b       	std	Y+18, r25	; 0x12
    2852:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2854:	8b 89       	ldd	r24, Y+19	; 0x13
    2856:	9c 89       	ldd	r25, Y+20	; 0x14
    2858:	01 97       	sbiw	r24, 0x01	; 1
    285a:	9c 8b       	std	Y+20, r25	; 0x14
    285c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    285e:	8b 89       	ldd	r24, Y+19	; 0x13
    2860:	9c 89       	ldd	r25, Y+20	; 0x14
    2862:	00 97       	sbiw	r24, 0x00	; 0
    2864:	69 f7       	brne	.-38     	; 0x2840 <main+0xbde>
    2866:	14 c0       	rjmp	.+40     	; 0x2890 <main+0xc2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2868:	6d 89       	ldd	r22, Y+21	; 0x15
    286a:	7e 89       	ldd	r23, Y+22	; 0x16
    286c:	8f 89       	ldd	r24, Y+23	; 0x17
    286e:	98 8d       	ldd	r25, Y+24	; 0x18
    2870:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2874:	dc 01       	movw	r26, r24
    2876:	cb 01       	movw	r24, r22
    2878:	9c 8b       	std	Y+20, r25	; 0x14
    287a:	8b 8b       	std	Y+19, r24	; 0x13
    287c:	8b 89       	ldd	r24, Y+19	; 0x13
    287e:	9c 89       	ldd	r25, Y+20	; 0x14
    2880:	98 8b       	std	Y+16, r25	; 0x10
    2882:	8f 87       	std	Y+15, r24	; 0x0f
    2884:	8f 85       	ldd	r24, Y+15	; 0x0f
    2886:	98 89       	ldd	r25, Y+16	; 0x10
    2888:	01 97       	sbiw	r24, 0x01	; 1
    288a:	f1 f7       	brne	.-4      	; 0x2888 <main+0xc26>
    288c:	98 8b       	std	Y+16, r25	; 0x10
    288e:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB5)))
    2890:	e6 e3       	ldi	r30, 0x36	; 54
    2892:	f0 e0       	ldi	r31, 0x00	; 0
    2894:	80 81       	ld	r24, Z
    2896:	88 2f       	mov	r24, r24
    2898:	90 e0       	ldi	r25, 0x00	; 0
    289a:	80 72       	andi	r24, 0x20	; 32
    289c:	90 70       	andi	r25, 0x00	; 0
    289e:	00 97       	sbiw	r24, 0x00	; 0
    28a0:	09 f0       	breq	.+2      	; 0x28a4 <main+0xc42>
    28a2:	62 c0       	rjmp	.+196    	; 0x2968 <main+0xd06>
			{
				decrement_seconds();
    28a4:	0e 94 9b 0c 	call	0x1936	; 0x1936 <decrement_seconds>
				sec_dig2 = sec/10;
    28a8:	80 91 74 00 	lds	r24, 0x0074
    28ac:	9a e0       	ldi	r25, 0x0A	; 10
    28ae:	69 2f       	mov	r22, r25
    28b0:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    28b4:	80 93 78 00 	sts	0x0078, r24
				sec_dig1 = sec - sec_dig2*10 ;
    28b8:	80 91 78 00 	lds	r24, 0x0078
    28bc:	88 2f       	mov	r24, r24
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	9c 01       	movw	r18, r24
    28c2:	22 0f       	add	r18, r18
    28c4:	33 1f       	adc	r19, r19
    28c6:	c9 01       	movw	r24, r18
    28c8:	88 0f       	add	r24, r24
    28ca:	99 1f       	adc	r25, r25
    28cc:	88 0f       	add	r24, r24
    28ce:	99 1f       	adc	r25, r25
    28d0:	82 0f       	add	r24, r18
    28d2:	93 1f       	adc	r25, r19
    28d4:	90 95       	com	r25
    28d6:	81 95       	neg	r24
    28d8:	9f 4f       	sbci	r25, 0xFF	; 255
    28da:	98 2f       	mov	r25, r24
    28dc:	80 91 74 00 	lds	r24, 0x0074
    28e0:	89 0f       	add	r24, r25
    28e2:	80 93 77 00 	sts	0x0077, r24

				min_dig2 = min/10;
    28e6:	80 91 75 00 	lds	r24, 0x0075
    28ea:	9a e0       	ldi	r25, 0x0A	; 10
    28ec:	69 2f       	mov	r22, r25
    28ee:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    28f2:	80 93 7a 00 	sts	0x007A, r24
				min_dig1 = min - min_dig2*10 ;
    28f6:	80 91 7a 00 	lds	r24, 0x007A
    28fa:	88 2f       	mov	r24, r24
    28fc:	90 e0       	ldi	r25, 0x00	; 0
    28fe:	9c 01       	movw	r18, r24
    2900:	22 0f       	add	r18, r18
    2902:	33 1f       	adc	r19, r19
    2904:	c9 01       	movw	r24, r18
    2906:	88 0f       	add	r24, r24
    2908:	99 1f       	adc	r25, r25
    290a:	88 0f       	add	r24, r24
    290c:	99 1f       	adc	r25, r25
    290e:	82 0f       	add	r24, r18
    2910:	93 1f       	adc	r25, r19
    2912:	90 95       	com	r25
    2914:	81 95       	neg	r24
    2916:	9f 4f       	sbci	r25, 0xFF	; 255
    2918:	98 2f       	mov	r25, r24
    291a:	80 91 75 00 	lds	r24, 0x0075
    291e:	89 0f       	add	r24, r25
    2920:	80 93 79 00 	sts	0x0079, r24

				hr_dig2 = hr/10;
    2924:	80 91 76 00 	lds	r24, 0x0076
    2928:	9a e0       	ldi	r25, 0x0A	; 10
    292a:	69 2f       	mov	r22, r25
    292c:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__udivmodqi4>
    2930:	80 93 7c 00 	sts	0x007C, r24
				hr_dig1 = hr - hr_dig2*10 ;
    2934:	80 91 7c 00 	lds	r24, 0x007C
    2938:	88 2f       	mov	r24, r24
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	9c 01       	movw	r18, r24
    293e:	22 0f       	add	r18, r18
    2940:	33 1f       	adc	r19, r19
    2942:	c9 01       	movw	r24, r18
    2944:	88 0f       	add	r24, r24
    2946:	99 1f       	adc	r25, r25
    2948:	88 0f       	add	r24, r24
    294a:	99 1f       	adc	r25, r25
    294c:	82 0f       	add	r24, r18
    294e:	93 1f       	adc	r25, r19
    2950:	90 95       	com	r25
    2952:	81 95       	neg	r24
    2954:	9f 4f       	sbci	r25, 0xFF	; 255
    2956:	98 2f       	mov	r25, r24
    2958:	80 91 76 00 	lds	r24, 0x0076
    295c:	89 0f       	add	r24, r25
    295e:	80 93 7b 00 	sts	0x007B, r24
    2962:	02 c0       	rjmp	.+4      	; 0x2968 <main+0xd06>
			}
			while( !(PINB & (1<<PB5)) )
			{
				/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
				display_7_segment();
    2964:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB5)) )
    2968:	e6 e3       	ldi	r30, 0x36	; 54
    296a:	f0 e0       	ldi	r31, 0x00	; 0
    296c:	80 81       	ld	r24, Z
    296e:	88 2f       	mov	r24, r24
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	80 72       	andi	r24, 0x20	; 32
    2974:	90 70       	andi	r25, 0x00	; 0
    2976:	00 97       	sbiw	r24, 0x00	; 0
    2978:	a9 f3       	breq	.-22     	; 0x2964 <main+0xd02>
				display_7_segment();
			}
		}

		/*MODE CONTROL*/
		if(!(PINB&(1<<PB7)))/*CHECK IF THE BUTTON IS PRESSED*/
    297a:	e6 e3       	ldi	r30, 0x36	; 54
    297c:	f0 e0       	ldi	r31, 0x00	; 0
    297e:	80 81       	ld	r24, Z
    2980:	88 23       	and	r24, r24
    2982:	0c f4       	brge	.+2      	; 0x2986 <main+0xd24>
    2984:	bb c9       	rjmp	.-3210   	; 0x1cfc <main+0x9a>
    2986:	80 e0       	ldi	r24, 0x00	; 0
    2988:	90 e0       	ldi	r25, 0x00	; 0
    298a:	a0 ef       	ldi	r26, 0xF0	; 240
    298c:	b1 e4       	ldi	r27, 0x41	; 65
    298e:	8b 87       	std	Y+11, r24	; 0x0b
    2990:	9c 87       	std	Y+12, r25	; 0x0c
    2992:	ad 87       	std	Y+13, r26	; 0x0d
    2994:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2996:	6b 85       	ldd	r22, Y+11	; 0x0b
    2998:	7c 85       	ldd	r23, Y+12	; 0x0c
    299a:	8d 85       	ldd	r24, Y+13	; 0x0d
    299c:	9e 85       	ldd	r25, Y+14	; 0x0e
    299e:	20 e0       	ldi	r18, 0x00	; 0
    29a0:	30 e0       	ldi	r19, 0x00	; 0
    29a2:	4a e7       	ldi	r20, 0x7A	; 122
    29a4:	55 e4       	ldi	r21, 0x45	; 69
    29a6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29aa:	dc 01       	movw	r26, r24
    29ac:	cb 01       	movw	r24, r22
    29ae:	8f 83       	std	Y+7, r24	; 0x07
    29b0:	98 87       	std	Y+8, r25	; 0x08
    29b2:	a9 87       	std	Y+9, r26	; 0x09
    29b4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    29b6:	6f 81       	ldd	r22, Y+7	; 0x07
    29b8:	78 85       	ldd	r23, Y+8	; 0x08
    29ba:	89 85       	ldd	r24, Y+9	; 0x09
    29bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	40 e8       	ldi	r20, 0x80	; 128
    29c4:	5f e3       	ldi	r21, 0x3F	; 63
    29c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    29ca:	88 23       	and	r24, r24
    29cc:	2c f4       	brge	.+10     	; 0x29d8 <main+0xd76>
		__ticks = 1;
    29ce:	81 e0       	ldi	r24, 0x01	; 1
    29d0:	90 e0       	ldi	r25, 0x00	; 0
    29d2:	9e 83       	std	Y+6, r25	; 0x06
    29d4:	8d 83       	std	Y+5, r24	; 0x05
    29d6:	3f c0       	rjmp	.+126    	; 0x2a56 <main+0xdf4>
	else if (__tmp > 65535)
    29d8:	6f 81       	ldd	r22, Y+7	; 0x07
    29da:	78 85       	ldd	r23, Y+8	; 0x08
    29dc:	89 85       	ldd	r24, Y+9	; 0x09
    29de:	9a 85       	ldd	r25, Y+10	; 0x0a
    29e0:	20 e0       	ldi	r18, 0x00	; 0
    29e2:	3f ef       	ldi	r19, 0xFF	; 255
    29e4:	4f e7       	ldi	r20, 0x7F	; 127
    29e6:	57 e4       	ldi	r21, 0x47	; 71
    29e8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    29ec:	18 16       	cp	r1, r24
    29ee:	4c f5       	brge	.+82     	; 0x2a42 <main+0xde0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    29f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    29f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    29f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    29f8:	20 e0       	ldi	r18, 0x00	; 0
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	40 e2       	ldi	r20, 0x20	; 32
    29fe:	51 e4       	ldi	r21, 0x41	; 65
    2a00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a04:	dc 01       	movw	r26, r24
    2a06:	cb 01       	movw	r24, r22
    2a08:	bc 01       	movw	r22, r24
    2a0a:	cd 01       	movw	r24, r26
    2a0c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a10:	dc 01       	movw	r26, r24
    2a12:	cb 01       	movw	r24, r22
    2a14:	9e 83       	std	Y+6, r25	; 0x06
    2a16:	8d 83       	std	Y+5, r24	; 0x05
    2a18:	0f c0       	rjmp	.+30     	; 0x2a38 <main+0xdd6>
    2a1a:	80 e9       	ldi	r24, 0x90	; 144
    2a1c:	91 e0       	ldi	r25, 0x01	; 1
    2a1e:	9c 83       	std	Y+4, r25	; 0x04
    2a20:	8b 83       	std	Y+3, r24	; 0x03
    2a22:	8b 81       	ldd	r24, Y+3	; 0x03
    2a24:	9c 81       	ldd	r25, Y+4	; 0x04
    2a26:	01 97       	sbiw	r24, 0x01	; 1
    2a28:	f1 f7       	brne	.-4      	; 0x2a26 <main+0xdc4>
    2a2a:	9c 83       	std	Y+4, r25	; 0x04
    2a2c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    2a30:	9e 81       	ldd	r25, Y+6	; 0x06
    2a32:	01 97       	sbiw	r24, 0x01	; 1
    2a34:	9e 83       	std	Y+6, r25	; 0x06
    2a36:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a38:	8d 81       	ldd	r24, Y+5	; 0x05
    2a3a:	9e 81       	ldd	r25, Y+6	; 0x06
    2a3c:	00 97       	sbiw	r24, 0x00	; 0
    2a3e:	69 f7       	brne	.-38     	; 0x2a1a <main+0xdb8>
    2a40:	14 c0       	rjmp	.+40     	; 0x2a6a <main+0xe08>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a42:	6f 81       	ldd	r22, Y+7	; 0x07
    2a44:	78 85       	ldd	r23, Y+8	; 0x08
    2a46:	89 85       	ldd	r24, Y+9	; 0x09
    2a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a4e:	dc 01       	movw	r26, r24
    2a50:	cb 01       	movw	r24, r22
    2a52:	9e 83       	std	Y+6, r25	; 0x06
    2a54:	8d 83       	std	Y+5, r24	; 0x05
    2a56:	8d 81       	ldd	r24, Y+5	; 0x05
    2a58:	9e 81       	ldd	r25, Y+6	; 0x06
    2a5a:	9a 83       	std	Y+2, r25	; 0x02
    2a5c:	89 83       	std	Y+1, r24	; 0x01
    2a5e:	89 81       	ldd	r24, Y+1	; 0x01
    2a60:	9a 81       	ldd	r25, Y+2	; 0x02
    2a62:	01 97       	sbiw	r24, 0x01	; 1
    2a64:	f1 f7       	brne	.-4      	; 0x2a62 <main+0xe00>
    2a66:	9a 83       	std	Y+2, r25	; 0x02
    2a68:	89 83       	std	Y+1, r24	; 0x01
		{
			_delay_ms(30);
			if(!(PINB&(1<<PB7)))/*RECHECK AFTER DEBOUNCE DELAY*/
    2a6a:	e6 e3       	ldi	r30, 0x36	; 54
    2a6c:	f0 e0       	ldi	r31, 0x00	; 0
    2a6e:	80 81       	ld	r24, Z
    2a70:	88 23       	and	r24, r24
    2a72:	0c f4       	brge	.+2      	; 0x2a76 <main+0xe14>
    2a74:	43 c9       	rjmp	.-3450   	; 0x1cfc <main+0x9a>
			{
				if(paused==0)/*CHECK IF THE CLOCK IS NOT PAUSED*/
    2a76:	80 91 73 00 	lds	r24, 0x0073
    2a7a:	88 23       	and	r24, r24
    2a7c:	69 f4       	brne	.+26     	; 0x2a98 <main+0xe36>
				{
					/*TOGGLES MODE ONLY WHILE THE BUTTON IS PRESSED AND RETURN IT BACK TO DEFAULT AFTER RELEASE*/
					toggle_mode();
    2a7e:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <toggle_mode>
    2a82:	02 c0       	rjmp	.+4      	; 0x2a88 <main+0xe26>
					while(!(PINB&(1<<PB7)))
					{
						/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
						display_7_segment();
    2a84:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
			{
				if(paused==0)/*CHECK IF THE CLOCK IS NOT PAUSED*/
				{
					/*TOGGLES MODE ONLY WHILE THE BUTTON IS PRESSED AND RETURN IT BACK TO DEFAULT AFTER RELEASE*/
					toggle_mode();
					while(!(PINB&(1<<PB7)))
    2a88:	e6 e3       	ldi	r30, 0x36	; 54
    2a8a:	f0 e0       	ldi	r31, 0x00	; 0
    2a8c:	80 81       	ld	r24, Z
    2a8e:	88 23       	and	r24, r24
    2a90:	cc f7       	brge	.-14     	; 0x2a84 <main+0xe22>
					{
						/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
						display_7_segment();
					}
					toggle_mode();
    2a92:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <toggle_mode>
    2a96:	32 c9       	rjmp	.-3484   	; 0x1cfc <main+0x9a>
				}
				else if(paused==1)/*CHECK IF THE CLOCK IS PAUSED*/
    2a98:	80 91 73 00 	lds	r24, 0x0073
    2a9c:	81 30       	cpi	r24, 0x01	; 1
    2a9e:	09 f0       	breq	.+2      	; 0x2aa2 <main+0xe40>
    2aa0:	2d c9       	rjmp	.-3494   	; 0x1cfc <main+0x9a>
				{
					/*SWITCH MODES TILL ITS PAUSED AND CLICKED AGAIN*/
					toggle_mode();
    2aa2:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <toggle_mode>
    2aa6:	02 c0       	rjmp	.+4      	; 0x2aac <main+0xe4a>
					while(!(PINB&(1<<PB7)))
					{
						/*TO KEEP THE SEVEN SEGMENT DISPLAYING WHILE THE BUTTON IS PRESSED*/
						display_7_segment();
    2aa8:	0e 94 41 06 	call	0xc82	; 0xc82 <display_7_segment>
				}
				else if(paused==1)/*CHECK IF THE CLOCK IS PAUSED*/
				{
					/*SWITCH MODES TILL ITS PAUSED AND CLICKED AGAIN*/
					toggle_mode();
					while(!(PINB&(1<<PB7)))
    2aac:	e6 e3       	ldi	r30, 0x36	; 54
    2aae:	f0 e0       	ldi	r31, 0x00	; 0
    2ab0:	80 81       	ld	r24, Z
    2ab2:	88 23       	and	r24, r24
    2ab4:	cc f7       	brge	.-14     	; 0x2aa8 <main+0xe46>
    2ab6:	22 c9       	rjmp	.-3516   	; 0x1cfc <main+0x9a>

00002ab8 <__udivmodqi4>:
    2ab8:	99 1b       	sub	r25, r25
    2aba:	79 e0       	ldi	r23, 0x09	; 9
    2abc:	04 c0       	rjmp	.+8      	; 0x2ac6 <__udivmodqi4_ep>

00002abe <__udivmodqi4_loop>:
    2abe:	99 1f       	adc	r25, r25
    2ac0:	96 17       	cp	r25, r22
    2ac2:	08 f0       	brcs	.+2      	; 0x2ac6 <__udivmodqi4_ep>
    2ac4:	96 1b       	sub	r25, r22

00002ac6 <__udivmodqi4_ep>:
    2ac6:	88 1f       	adc	r24, r24
    2ac8:	7a 95       	dec	r23
    2aca:	c9 f7       	brne	.-14     	; 0x2abe <__udivmodqi4_loop>
    2acc:	80 95       	com	r24
    2ace:	08 95       	ret

00002ad0 <__prologue_saves__>:
    2ad0:	2f 92       	push	r2
    2ad2:	3f 92       	push	r3
    2ad4:	4f 92       	push	r4
    2ad6:	5f 92       	push	r5
    2ad8:	6f 92       	push	r6
    2ada:	7f 92       	push	r7
    2adc:	8f 92       	push	r8
    2ade:	9f 92       	push	r9
    2ae0:	af 92       	push	r10
    2ae2:	bf 92       	push	r11
    2ae4:	cf 92       	push	r12
    2ae6:	df 92       	push	r13
    2ae8:	ef 92       	push	r14
    2aea:	ff 92       	push	r15
    2aec:	0f 93       	push	r16
    2aee:	1f 93       	push	r17
    2af0:	cf 93       	push	r28
    2af2:	df 93       	push	r29
    2af4:	cd b7       	in	r28, 0x3d	; 61
    2af6:	de b7       	in	r29, 0x3e	; 62
    2af8:	ca 1b       	sub	r28, r26
    2afa:	db 0b       	sbc	r29, r27
    2afc:	0f b6       	in	r0, 0x3f	; 63
    2afe:	f8 94       	cli
    2b00:	de bf       	out	0x3e, r29	; 62
    2b02:	0f be       	out	0x3f, r0	; 63
    2b04:	cd bf       	out	0x3d, r28	; 61
    2b06:	09 94       	ijmp

00002b08 <__epilogue_restores__>:
    2b08:	2a 88       	ldd	r2, Y+18	; 0x12
    2b0a:	39 88       	ldd	r3, Y+17	; 0x11
    2b0c:	48 88       	ldd	r4, Y+16	; 0x10
    2b0e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2b10:	6e 84       	ldd	r6, Y+14	; 0x0e
    2b12:	7d 84       	ldd	r7, Y+13	; 0x0d
    2b14:	8c 84       	ldd	r8, Y+12	; 0x0c
    2b16:	9b 84       	ldd	r9, Y+11	; 0x0b
    2b18:	aa 84       	ldd	r10, Y+10	; 0x0a
    2b1a:	b9 84       	ldd	r11, Y+9	; 0x09
    2b1c:	c8 84       	ldd	r12, Y+8	; 0x08
    2b1e:	df 80       	ldd	r13, Y+7	; 0x07
    2b20:	ee 80       	ldd	r14, Y+6	; 0x06
    2b22:	fd 80       	ldd	r15, Y+5	; 0x05
    2b24:	0c 81       	ldd	r16, Y+4	; 0x04
    2b26:	1b 81       	ldd	r17, Y+3	; 0x03
    2b28:	aa 81       	ldd	r26, Y+2	; 0x02
    2b2a:	b9 81       	ldd	r27, Y+1	; 0x01
    2b2c:	ce 0f       	add	r28, r30
    2b2e:	d1 1d       	adc	r29, r1
    2b30:	0f b6       	in	r0, 0x3f	; 63
    2b32:	f8 94       	cli
    2b34:	de bf       	out	0x3e, r29	; 62
    2b36:	0f be       	out	0x3f, r0	; 63
    2b38:	cd bf       	out	0x3d, r28	; 61
    2b3a:	ed 01       	movw	r28, r26
    2b3c:	08 95       	ret

00002b3e <_exit>:
    2b3e:	f8 94       	cli

00002b40 <__stop_program>:
    2b40:	ff cf       	rjmp	.-2      	; 0x2b40 <__stop_program>
