/*
 * code.c
 *
 *  Created on: Sep 9, 2024
 *      Author: hassan
 */
#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>
unsigned char flag_inc=0;
unsigned char flag_dec=0;
unsigned char mode=0;
unsigned char paused=0;
unsigned char seg[]={0,1,2,3,4,5,6,7,8,9};
unsigned char sec=0,min=0,hr=0;
unsigned char sec_dig1=0,sec_dig2=0,min_dig1=0,min_dig2=0,hr_dig1=0,hr_dig2=0;
void increment_seg(void)
{
	sec++;

	if(sec > 59)
	{
		sec = 0;
		min++;
		if (min > 59)
		{
			min = 0;
			hr++;
			if (hr > 24)
			{
				hr = 0;
			}
		}
	}

	sec_dig2 = sec/10;
	sec_dig1 = sec - sec_dig2*10 ;

	min_dig2 = min/10;
	min_dig1 = min - min_dig2*10 ;

	hr_dig2 = hr/10;
	hr_dig1 = hr - hr_dig2*10 ;
}
void decrement_seg(void)
{
	if(sec!=0)
	{
		sec--;
		if(sec==0)
		{
			if((min!=0)|(hr!=0))
			{
				sec=59;
				if(min!=0)
				{
					min--;
					if(min==0)
					{
						if(hr!=0)
						{
							min=59;
							hr--;
							if(hr==0)
							{
								hr=24;
							}
						}
					}
				}
			}
			else
			{
				DDRD|=(1<<PD0);
				PORTD|=(1<<PD0);
			}
		}
	}
	sec_dig2 = sec/10;
	sec_dig1 = sec - sec_dig2*10 ;

	min_dig2 = min/10;
	min_dig1 = min - min_dig2*10 ;

	hr_dig2 = hr/10;
	hr_dig1 = hr - hr_dig2*10 ;
}
void Timer1_COMPA_init(void)
{
	TCCR1A=(1<<FOC1A);
	TCCR1B=(1<<WGM12)|(1<<CS12);
	TIMSK|=(1<<OCIE1A);
	TCNT1=0;
	OCR1A=62500;
}
void INT0_init(void)
{
	DDRD&=~(1<<PD2);
	PORTD|=(1<<PD2);
	MCUCR|=(1<<ISC01);
	MCUCR &=~(1<<ISC00);
	GICR |=(1<<6);
	GIFR|=(1<<INTF0);
}
void INT1_init(void)
{
	DDRD&=~(1<<PD2);
	MCUCR|=(1<<ISC11)|(1<<ISC10);
	GICR|=(1<<INT1);
	GIFR|=(1<<INTF1);
}
void INT2_init(void)
{
	DDRB&=~(1<<PB2);
	PORTB|=(1<<PB2);
	MCUCSR&=~(1<<ISC2);
	GICR|=(1<<INT2);
	GIFR|=(1<<INTF2);
}
void increment_hours(void)
{
	if(hr<24)
	{
		hr++;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
	else
	{
		PORTC=0;
		sec=0;
		min=0;
		hr=0;
		sec_dig1=0 ;
		sec_dig2=0 ;
		min_dig1=0;
		min_dig2=0;
		hr_dig1=0;
		hr_dig2=0;
		_delay_ms(1);
	}
}
void increment_minutes(void)
{
	if(min<59)
	{
		min++;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
	else
	{
		hr++;
		min=0;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}

}
void increment_seconds(void)
{
	if(sec<59)
	{
		sec++;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
	else
	{
		sec=0;
		min++;
		if(min>59)
		{
			min=0;
			hr++;
			if(paused==0)
			{
				TIMSK|=(1<<OCIE1A);
			}
		}
	}
}
void decrement_hours(void)
{
	if(hr!=0)
	{
		hr--;
		if(hr<0)
		{
			hr=24;
		}
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
}
void decrement_minutes(void)
{
	if(min!=0)
	{
		min--;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
	else
	{
		if(hr!=0)
		{
			hr--;
			min=59;
		}
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
}
void decrement_seconds(void)
{
	if(sec!=0)
	{
		sec--;
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
	else
	{
		if((hr!=0)||(min!=0))
		{
			if(min!=0)
			{
				min--;
				sec=59;
			}
			else
			{
				hr--;
				sec=59;
			}
		}
		if(paused==0)
		{
			TIMSK|=(1<<OCIE1A);
		}
	}
}
void toggle_mode()
{
	mode=!mode;
}
ISR(INT0_vect)
{
	PORTC=0;
	sec=0;
	min=0;
	hr=0;
	sec_dig1=0 ;
	sec_dig2=0 ;
	min_dig1=0;
	min_dig2=0;
	hr_dig1=0;
	hr_dig2=0;
	_delay_ms(1);
}
ISR(INT1_vect)
{
	paused=1;
}
ISR(INT2_vect)
{
	paused=0;
}
ISR(TIMER1_COMPA_vect)
{
	if(paused==0)
	{
		if(mode==0)
		{
			increment_seg();
			PORTD|=(1<<PD4);
			PORTD&=~(1<<PD5);
		}
		if(mode==1)
		{
			decrement_seg();
			PORTD|=(1<<PD5);
			PORTD&=~(1<<PD4);
		}
	}
}
int main(void)
{
	DDRD |=(1<<PD4)|(1<<PD5)|(1<<PD0);
	PORTD&=~(1<<PD4)&~(1<<PD5)&~(1<<PD0);
	DDRC  |= 0x0F;
	PORTC &= 0xF0;
	DDRA  |=(1<<PA0)|(1<<PA1)|(1<<PA2)|(1<<PA3)|(1<<PA4)|(1<<PA5);
	PORTA |=(1<<PA0)|(1<<PA1)|(1<<PA2)|(1<<PA3)|(1<<PA4)|(1<<PA5);
	DDRB=0x00;
	PORTB=0xFF;
	SREG  |= (1<<7);
	INT0_init();
	INT1_init();
	INT2_init();
	Timer1_COMPA_init();
	while(1)
	{

		PORTA &=~(1<<PA5)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
		PORTA |=(1<<PA4);
		PORTC = seg [sec_dig2];
		_delay_ms(2);

		PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
		PORTA |=(1<<PA5);
		PORTC = seg [sec_dig1];
		_delay_ms(2);

		PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA5)&~(1<<PA1)&~(1<<PA0);
		PORTA |=(1<<PA2);
		PORTC = seg [min_dig2];
		_delay_ms(2);

		PORTA &=~(1<<PA4)&~(1<<PA5)&~(1<<PA2)&~(1<<PA1)&~(1<<PA0);
		PORTA |=(1<<PA3);
		PORTC = seg [min_dig1];
		_delay_ms(2);

		PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA1)&~(1<<PA5);
		PORTA |=(1<<PA0);
		PORTC = seg [hr_dig2];
		_delay_ms(2);

		PORTA &=~(1<<PA4)&~(1<<PA3)&~(1<<PA2)&~(1<<PA5)&~(1<<PA0);
		PORTA |=(1<<PA1);
		PORTC = seg [hr_dig1];
		_delay_ms(2);

		if(!(PINB & (1<<PB1)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB1)))
			{
				increment_hours();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB1)) ){}
		}

		if(!(PINB & (1<<PB0)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB0)))
			{
				decrement_hours();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB0)) ){}
		}

		if(!(PINB & (1<<PB4)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB4)))
			{
				increment_minutes();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB4)) ){}
		}

		if(!(PINB & (1<<PB3)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB3)))
			{
				decrement_minutes();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB3)) ){}
		}

		if(!(PINB & (1<<PB6)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB6)))
			{
				increment_seconds();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB6)) ){}
		}

		if(!(PINB & (1<<PB5)))
		{
			_delay_ms(30);
			if(!(PINB & (1<<PB5)))
			{
				decrement_seconds();
				sec_dig2 = sec/10;
				sec_dig1 = sec - sec_dig2*10 ;

				min_dig2 = min/10;
				min_dig1 = min - min_dig2*10 ;

				hr_dig2 = hr/10;
				hr_dig1 = hr - hr_dig2*10 ;
			}
			while( !(PINB & (1<<PB5)) ){}
		}
		if(paused==1)
		{
			if(!(PINB&(1<<PB7)))
			{
				_delay_ms(30);
				if(!(PINB&(1<<PB7)))
				{
					toggle_mode();
				}
				while(!(PINB & (1<<PB5))){}
			}
		}
		else
		{
			if(!(PINB&(1<<PB7)))
			{
				_delay_ms(30);
				if(!(PINB&(1<<PB7)))
				{
					mode=1;
				}
				mode=0;
				while(!(PINB & (1<<PB5))){}
			}
		}

	}
}
